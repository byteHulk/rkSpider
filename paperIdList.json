[{"paperId":"655","field":"20192","question_list":[{"product_id":"201911291331268242678","ans":"在CPU内外的高速缓存是用来解决CPU与内存之间速度、容量不匹配的问题，与外存无关，可以提高CPU访问主存数据或指令的效率。Cache不属于主存，与主存容量无关。Cache容量相对于其他存储层次，量级较小，不能扩大存储系统的存量。","analysis":"B"},{"product_id":"201911291331269497960","ans":"设部件4的可靠性为x，根据图示，系统整体可靠性0.9*（1-（1-0.8）2）*x，要求其不小于0.85，即0.9*（1-（1-0.8）2）*x>=0.85，可以得到x>=","analysis":"A"},{"product_id":"201911291331269966399","ans":"CPU接收到中断请求，会将自己正在执行的程序A的状态进行保存，即保存现场，然后转去处理提交中断申请的程序B，完成程序B之后，再回到程序A中断的断点接着完成程序A。保存现场的目的是为了能正确返回到被中断的程序A继续执行。","analysis":"C"},{"product_id":"201911291331271841274","ans":"地址从A0000H到CFFFFH，存储单元个数共有CFFFFH+1-A0000H=30000H，即3*164个；按字节编址，即每个存储单元存放1个字节，也就是1B；该存储区域总容量=存储单元个数*存储单元内容=3*164*1B=3*216B=192KB。若用存储容量为64K*8bit的存储芯片构成，即单位芯片容量为64K*8bit，总容量=单位芯片容量*片数，即片数=总容量/单位芯片容量=（192KB）/（64K*8bit）=3","analysis":"D"},{"product_id":"201911291331271999215","ans":"地址从A0000H到CFFFFH，存储单元个数共有CFFFFH+1-A0000H=30000H，即3*164个；按字节编址，即每个存储单元存放1个字节，也就是1B；该存储区域总容量=存储单元个数*存储单元内容=3*164*1B=3*216B=192KB。若用存储容量为64K*8bit的存储芯片构成，即单位芯片容量为64K*8bit，总容量=单位芯片容量*片数，即片数=总容量/单位芯片容量=（192KB）/（64K*8bit）=3","analysis":"B"},{"product_id":"201911291331274021326","ans":"流水线执行时间=流水线建立时间+（n-1）*流水线周期=5+2+3+（500-1）*5=2505。","analysis":"B"},{"product_id":"201911291331274802508","ans":"MIME它是一个互联网标准，扩展了电子邮件标准，使其能够支持，与安全无关。与安全电子邮件相关的是S/MIME安全多用途互联网邮件扩展协议。SSL和HTTPS涉及到邮件传输过程的安全，PGP（全称：PrettyGoodPrivacy，优良保密协议），是一套用于信息加密、验证的应用程序，可用于加密电子邮件内容。","analysis":"C"},{"product_id":"201911291331275123678","ans":"公开密钥加密（public-keycryptography），也称为非对称加密（asymmetriccryptography），一种密码学算法类型，在这种密码学方法中，需要一对密钥，一个是私人密钥，另一个则是公开密钥。常见的公钥加密算法有：RSA、ElGamal、背包算法、Rabin（RSA的特例）、迪菲－赫尔曼密钥交换协议中的公钥加密算法、椭圆曲线加密算法（EllipticCurveCryptography,ECC）；DSA数字签名（又称公钥数字签名），将摘要信息用发送者的私钥加密，接收者只有用发送者的公钥才能解密被加密的摘要信息，也是属于公开密钥加密算法。DES是典型的私钥加密体制，属于对称加密，不属于公开秘钥加密。","analysis":"D"},{"product_id":"201911291331275279349","ans":"重放攻击（ReplayAttacks）又称重播攻击、回放攻击或新鲜性攻击（FreshnessAttacks），是指攻击者发送一个目的主机已接收过的包，来达到欺骗系统的目的，主要用于身份认证过程，破坏认证的正确性。Kerberos系统采用的是时间戳方案来防止重放攻击，这种方案中，发送的数据包是带时间戳的，服务器可以根据时间戳来判断是否为重放包，以此防止重放攻击。","analysis":"B"},{"product_id":"201911291331276525971","ans":"本题考查数字证书相关知识点。数字证书是由权威机构——CA证书授权（CertificateAuthority）中心发行的，能提供在Internet上进行身份验证的一种权威性电子文档，人们可以在因特网交往中用它来证明自己的身份和识别对方的身份。数字证书包含版本、序列号、签名算法标识符、签发人姓名、有效期、主体名和主体公钥信息等并附有CA的签名，用户获取网站的数字证书后通过CA的公钥验证CA的签名，从而确认数字证书的有效性，然后验证网站的真伪。","analysis":"A"},{"product_id":"201911291331276682050","ans":"本题考查数字证书相关知识点。数字证书是由权威机构——CA证书授权（CertificateAuthority）中心发行的，能提供在Internet上进行身份验证的一种权威性电子文档，人们可以在因特网交往中用它来证明自己的身份和识别对方的身份。数字证书包含版本、序列号、签名算法标识符、签发人姓名、有效期、主体名和主体公钥信息等并附有CA的签名，用户获取网站的数字证书后通过CA的公钥验证CA的签名，从而确认数字证书的有效性，然后验证网站的真伪。","analysis":"B"},{"product_id":"201911291331276845395","ans":"","analysis":"B"},{"product_id":"201911291331277308556","ans":"根据题干描述，本软件为职务作品，知识产权人为公司。","analysis":"C"},{"product_id":"201911291331277464350","ans":"外部实体一般为组织机构、人员、第三方系统，试题不是外部实体。","analysis":"D"},{"product_id":"201911291331278243487","ans":"","analysis":"A"},{"product_id":"201911291331278408964","ans":"如果一个模块内部的处理成分是相关的，而且这些处理必须以特定的次序执行，则称为过程内聚。如果一个模块完成的功能必须在同一时间内执行（如系统初始化），但这些功能只是因为时间因素关联在一起，则称为时间内聚。如果一个模块的各个成分和同一个功能密切相关，而且一个成分的输出作为另一个成分的输入，则称为顺序内聚。几个逻辑上相关的功能被放在同一模块中，则称为逻辑内聚。如一个模块读取各种不同类型外设的输入。尽管逻辑内聚比偶然内聚合理一些，但逻辑内聚的模块各成分在功能上并无关系，即使局部功能的修改有时也会影响全局，因此这类模块的修改也比较困难。","analysis":"C"},{"product_id":"201911291331278554921","ans":"本题考查知识内容为进度管理-单代号网络图，其中结点表示里程碑，边表示活动，在边上标注各活动的最早开始时间、活动持续时间、最早完成时间，然后从后往前推导出ABEHJL路径上各活动的最晚开始时间、总时差、最晚完成时间如下图：根据提示，该项目有两条关键路径，分别为：ABFJL，ADGIJL，其中B、D、J活动都在关键路径上，C活动不在。BE活动总时差为2天，即EB活动最多可以晚2天开始而不影响工期。","analysis":"B"},{"product_id":"201911291331278874468","ans":"本题考查知识内容为进度管理-单代号网络图，其中结点表示里程碑，边表示活动，在边上标注各活动的最早开始时间、活动持续时间、最早完成时间，然后从后往前推导出ABEHJL路径上各活动的最晚开始时间、总时差、最晚完成时间如下图：根据提示，该项目有两条关键路径，分别为：ABFJL，ADGIJL，其中B、D、J活动都在关键路径上，C活动不在。BE活动总时差为2天，即EB活动最多可以晚2天开始而不影响工期。","analysis":"C"},{"product_id":"201911291331280272201","ans":"一般认为软件风险包含两个特性：不确定性和损失，不确定性即指风险可能发生也可能不发生。评估风险的影响，如果风险真的发生，有3个因素可能会影响风险所产生的后果，即风险的本质、范围和时间。如果风险可以预测，可以避免其发生，有些风险可以预测但无法避免。风险控制的目的是辅助项目组建立处理风险的策略。","analysis":"C"},{"product_id":"201911291331280435543","ans":"记号流，词法分析的输出是记号流，也就是语法分析的输入。字符流，在Java中，根据处理的数据单位不同，分为字节流和字符流。字符流是由字符组成的，例如FileReader、FileWriter、BufferedReader、BufferedWriter、InputStreamReader、OutputStreamWriter等。与本题无关。源程序，词法分析的任务是把源程序的字符串转换成单词符号序列。分析树，如果没有语法错误，语法分析后就能正确的构造出其语法树。括号不匹配是典型的语法错误，会在语法分析阶段检测出来","analysis":"A"},{"product_id":"201911291331280743845","ans":"记号流，词法分析的输出是记号流，也就是语法分析的输入。字符流，在Java中，根据处理的数据单位不同，分为字节流和字符流。字符流是由字符组成的，例如FileReader、FileWriter、BufferedReader、BufferedWriter、InputStreamReader、OutputStreamWriter等。与本题无关。源程序，词法分析的任务是把源程序的字符串转换成单词符号序列。分析树，如果没有语法错误，语法分析后就能正确的构造出其语法树。括号不匹配是典型的语法错误，会在语法分析阶段检测出来","analysis":"B"},{"product_id":"201911291331280903895","ans":"I/O软件隐藏了I/O操作实现的细节。I/O软件向用户提供的是逻辑接口。I/O软件将硬件与较高层次的软件隔离开来，而最高层软件向应用提供一个友好的、清晰且统一的接口，方便用户使用。","analysis":"C"},{"product_id":"201911291331281053896","ans":"磁盘调度管理中，先进行移臂调度寻找磁道，再进行旋转调度寻找扇区。","analysis":"C"},{"product_id":"201911291331281213702","ans":"最短移臂调度算法，即优先响应距离较近磁道的申请。1、当前磁头位于15号柱面（柱面号即磁道编号），请求序列分别位于12号柱面（①⑤）、19号柱面（②④）、23号柱面（③）、28号柱面（⑥）；2、距离15号柱面最近的应该是12号柱面（①⑤），优先响应（①⑤），次序不限；3、此时磁头位于12号柱面，距离最近的应该是19号柱面（②④），次序不限；4、此时磁头位于19号柱面，距离最近的应该是23号柱面（③）；5、此时磁头位于23号柱面，距离最近的应该是28号柱面（⑥）。","analysis":"B"},{"product_id":"201911291331281375340","ans":"ProductBacklog产品待办事项清单；Refactoring重构，不属于scrum的步骤；SprintBacklog，Sprint待办事项清单；Sprint，冲刺迭代。","analysis":"B"},{"product_id":"201911291331281685966","ans":"","analysis":"B"},{"product_id":"201911291331282309410","ans":"易用性的自特性包括易理解性、易学性、易操作性，易分析性属于可维护性的子特性。","analysis":"C"},{"product_id":"201911291331282629445","ans":"MVC是分层架构风格的一种，采用关注点分离的方针，将可视化界面呈现（View）、UI处理逻辑（Controller）和业务逻辑（Model）三者分离出来，并且利用合理的交互方针将它们之间的依赖降至最低。解耦之后，有利于代码重用、提高系统的可维护性，也可提高系统的开发效率，但是由于分层之后，调用也需要分层调用，所以不能提高系统的运行效率。","analysis":"B"},{"product_id":"201911291331282937152","ans":"测试过程基本上与开发过程平行进行，在需求分析阶段，就需要对验收测试、系统测试设计相关测试，撰写相关测试设计文档。","analysis":"C"},{"product_id":"201911291331283559839","ans":"将所有结点标注序号，根据图示，可以找到不同的路径共4条：1-2-3-11；1-2-3-4-5-6-10-11；1-2-3-4-5-7-9-10-11；1-2-3-4-5-7-8-9-10-11。","analysis":"B"},{"product_id":"201911291331283714983","ans":"根据环路复杂度计算公式V(G)=M-N+2=13-11+2=4。","analysis":"B"},{"product_id":"201911291331284024877","ans":"软件维护是软件生命周期最长的一段，相对于软件开发任务而言，软件维护工作要更加复杂。","analysis":"D"},{"product_id":"201911291331284188267","ans":"类的成员变量即对应属性，成员函数即对应方法。","analysis":"D"},{"product_id":"201911291331284342418","ans":"这里可以参照E-R图中的联系转换，多对多联系需要单独转换为一个关系模式，也需要重新建类。","analysis":"C"},{"product_id":"201911291331284498647","ans":"","analysis":"B"},{"product_id":"201911291331284807460","ans":"运行时结合是动态绑定，编译时结合是静态绑定。","analysis":"A"},{"product_id":"201911291331285278255","ans":"","analysis":"B"},{"product_id":"201911291331285438993","ans":"根据图示，本题UML为类图。注意：对象图的对象名会有：标识，并且对象图的关联关系一般不会出现多重度。根据图示B依赖于A，也就是说，A发生变化会影响B，但是反过来，当B的一个实例被删除，不会影响A的实例。","analysis":"B"},{"product_id":"201911291331285595554","ans":"根据图示，本题UML为类图。注意：对象图的对象名会有：标识，并且对象图的关联关系一般不会出现多重度。根据图示B依赖于A，也就是说，A发生变化会影响B，但是反过来，当B的一个实例被删除，不会影响A的实例。","analysis":"A"},{"product_id":"201911291331285748665","ans":"根据题干描述，该设计模式将抽象部分与其实现部分分离，使它们都可以独立的变化，指的是桥接模式。","analysis":"C"},{"product_id":"201911291331286052668","ans":"本题难度最大的是第二空，根据桥接模式的结构，实现类接口,定义实现类的接口，这个接口不一定要与抽象类的接口完全一致，事实上这两个接口可以完全不同，一般的讲实现类接口仅仅给出基本操作，而抽象类接口则会给出很多更复杂的操作。本题仅仅给出基本操作的是Drawing。","analysis":"D"},{"product_id":"201911291331286211447","ans":"第三空，想表示对象的部分-整体层次结构描述的是组合模式，想使用一个已经存在的类，而它的接口不符合要求描述的是适配器模式，在不影响其他对象的情况下，以动态透明的方式给单个对象添加职责描述的是装饰模式，不希望在抽象和它的实现部分之间有一个固定判定关系描述的是桥接模式。","analysis":"A"},{"product_id":"201911291331286372017","ans":"桥接模式是结构型对象模式。","analysis":"B"},{"product_id":"201911291331286681138","ans":"根据题干给出的信息，对于关系R，满足A能够遍历全图，对于关系S，满足A能够遍历全图，所以R和S的主键都是A。并且，对于关系R，A->BC，即满足A->B且A->C，又有B->D，所以可以推导即蕴含A->D，存在传递函数依赖，对于关系S，存在A->C，C->E，所以可以推导即蕴含了A->E，存在传递函数依赖。","analysis":"A"},{"product_id":"201911291331287154376","ans":"根据题干给出的信息，对于关系R，满足A能够遍历全图，对于关系S，满足A能够遍历全图，所以R和S的主键都是A。并且，对于关系R，A->BC，即满足A->B且A->C，又有B->D，所以可以推导即蕴含A->D，存在传递函数依赖，对于关系S，存在A->C，C->E，所以可以推导即蕴含了A->E，存在传递函数依赖。","analysis":"C"},{"product_id":"201911291331287305442","ans":"本题考查的是关系代数与SQL语句的结合考查，根据查询语句的格式：SELECT[ALL|DISTINCT]<目标表达式>[，<目标表达式>]…]FROM<表名>[，<表名>]…[WHERE<条件表达式>]SELECT后跟随的是结果属性列，即对R×S结果第1、5、7列的投影，对应属性R.A、S.B、S.E；FROMR,S后跟随的是结果元组行的WHERE筛选条件，即对R×S结果选择第2列=第5列的元组，对应属性为R.B=S.B。","analysis":"B"},{"product_id":"201911291331287466521","ans":"本题考查的是关系代数与SQL语句的结合考查，根据查询语句的格式：SELECT[ALL|DISTINCT]<目标表达式>[，<目标表达式>]…]FROM<表名>[，<表名>]…[WHERE<条件表达式>]SELECT后跟随的是结果属性列，即对R×S结果第1、5、7列的投影，对应属性R.A、S.B、S.E；FROMR,S后跟随的是结果元组行的WHERE筛选条件，即对R×S结果选择第2列=第5列的元组，对应属性为R.B=S.B。","analysis":"A"},{"product_id":"201911291331287622685","ans":"本题考查事务的ACID特性：1、原子性（Atomicity）：事务是原子的，要么做，要么都不做。2、一致性（Consistency）：事务执行的结果必须保证数据库从一个一致性状态变到另一个一致性状态。3、隔离性隔离性（lsolation）：事务相互隔离。当多个事务并发执行时，任一事务的更新操作直到其成功提交的整个过程，对其它事物都是不可见的。4、持久性（Durability）：一旦事务成功提交，即使数据库崩溃，其对数据库的更新操作也永久有效。题干描述的是持久性。","analysis":"D"},{"product_id":"201911291331287935716","ans":"","analysis":"B"},{"product_id":"201911291331288096880","ans":"根据中序遍历和先序遍历，可以反向构造出这棵二叉树如下：其后序遍历为30，20，50，40，10。","analysis":"C"},{"product_id":"201911291331288246087","ans":"本题可以画一棵简单的树验证4个选项，比如，以2个结点的树来看：结点总数n=2，非叶子结点的子树数目为k=1，叶子结点的个数应该为1，带入4个选项验证（n=2,k=1,验算表达式是否结果为1即可）：A：（2*2-1）/1=3；B选项（2*2+1）/1=5；C选项（2*0+1）/1=1；D选项（2*0-1）/1=-1。","analysis":"C"},{"product_id":"201911291331288401756","ans":"根据邻接矩阵的定义，行列数都为结点个数，结点数为5，因此邻居矩阵行列数均为5，即5*%的矩阵。根据邻接表的定义，一个顶点的表结点个数为其邻接顶点的个数，顶点2有2个邻接顶点，顶点3有2个邻接顶点。","analysis":"A"},{"product_id":"201911291331288876231","ans":"根据邻接矩阵的定义，行列数都为结点个数，结点数为5，因此邻居矩阵行列数均为5，即5*%的矩阵。根据邻接表的定义，一个顶点的表结点个数为其邻接顶点的个数，顶点2有2个邻接顶点，顶点3有2个邻接顶点。","analysis":"B"},{"product_id":"201911291331289021363","ans":"其他选项在最坏情况下的时间复杂度都是O(n2)，只有归并排序，在最坏情况下，时间复杂度仍然是O(nlog2n)。","analysis":"C"},{"product_id":"201911291331289348587","ans":"","analysis":"D"},{"product_id":"201911291331289499276","ans":"根据题干，可以先构造出如下哈弗曼树：对应c的编码111，a的编码0，d的编码110，e的编码101。","analysis":"A"},{"product_id":"201911291331289652346","ans":"压缩前，若要表示5个不同的字符，用二进制编码至少需要3位二进制，即每位字符占据空间3bit，平均字符长度为3*40%+3*10%+3*20%+3*16%+3*14%=3。压缩后，这5个字符的编码长度分别为1、3、3、3、3，平均编码长度为1*40%+3*10%+3*20%+3*16%+3*14%=2.2。压缩比为（3.3-2.2）/3.3=27%","analysis":"C"},{"product_id":"201911291331289803420","ans":"建立连接进行可靠通信在TCP/IP网络中，应该在传输层完成，在OSI/RM同样在传输层完成。","analysis":"D"},{"product_id":"201911291331291378368","ans":"建立连接进行可靠通信在TCP/IP网络中，应该在传输层完成，在OSI/RM同样在传输层完成。","analysis":"A"},{"product_id":"201911291331291526719","ans":"在无线通信技术中，蓝牙的传输距离最短，一般为10m左右，用于连接本地的外围设备，例如打印机、鼠标等。","analysis":"A"},{"product_id":"201911291331291688427","ans":"MIME它是一个互联网标准，扩展了电子邮件标准，使其能够支持多媒体数据。","analysis":"A"},{"product_id":"201911291331291996164","ans":"根据表达式（a-b）*（c+d），可以构造出语法树如下：其后续遍历即其后缀表达式（逆波兰式）为ab-cd+*。","analysis":"D"},{"product_id":"201911291331292157581","ans":"IPv4用32位二进制表示，能够表示的地址空间是232，IPv6用128位二进制表示，能够表示的地址空间是2128，本题选择2128/232=296。","analysis":"D"},{"product_id":"201911291331292306570","ans":"","analysis":"由软考在线用户真实做题大数据统计生成由于国家软考办暂未公布本题正确答案，软考在线为保证答案的准确和严谨，仅客观展示用户选择情况，供您参考"},{"product_id":"201911291331292463019","ans":"","analysis":"由软考在线用户真实做题大数据统计生成由于国家软考办暂未公布本题正确答案，软考在线为保证答案的准确和严谨，仅客观展示用户选择情况，供您参考"},{"product_id":"201911291331292779581","ans":"","analysis":"由软考在线用户真实做题大数据统计生成由于国家软考办暂未公布本题正确答案，软考在线为保证答案的准确和严谨，仅客观展示用户选择情况，供您参考"},{"product_id":"201911291331292933496","ans":"","analysis":"由软考在线用户真实做题大数据统计生成由于国家软考办暂未公布本题正确答案，软考在线为保证答案的准确和严谨，仅客观展示用户选择情况，供您参考"},{"product_id":"201911291331293719385","ans":"","analysis":"由软考在线用户真实做题大数据统计生成由于国家软考办暂未公布本题正确答案，软考在线为保证答案的准确和严谨，仅客观展示用户选择情况，供您参考"},{"product_id":"201911291331293875863","ans":"","analysis":"由软考在线用户真实做题大数据统计生成由于国家软考办暂未公布本题正确答案，软考在线为保证答案的准确和严谨，仅客观展示用户选择情况，供您参考"},{"product_id":"201911291331294183382","ans":"","analysis":"由软考在线用户真实做题大数据统计生成由于国家软考办暂未公布本题正确答案，软考在线为保证答案的准确和严谨，仅客观展示用户选择情况，供您参考"},{"product_id":"201911291331294341822","ans":"你们正在开发一个全方位的企业应用系统。它必须支持各种不同的客户机，包括桌面浏览器。移动浏览器和本地移动应用程序。应用程序还可以向客户公开第三方的API。它还可以通过webservices或消息代理与其他应用程序协作。应用程序通过执行业务逻辑、访问数据库、与其他系统交换消息以及返回HTML/JSON/XML响应来处理请求(HTTP请求和消息)。它有一些逻辑组件对应于应用程序的不同功能区域。那么这个应用程序有什么样的部署体系结构呢?将应用程序的体系结构定义为一组松散耦合的协作服务集合，对应于ScaleCube的y轴伸缩。每个服务;可快速维护和测试——支持快速和频繁的开发和部署。与其他服务的松散耦合——使团队能够独立工作(大部分时间在其服务器上)，而不会受到对其他服务的更改的影响，也不会影响其他服务。独立部署—允许团队部署他们的服务，而不必与其他团队协调。能够被一个小团队开发，避免了大团队的高交流领导，这对于高生产力是至关重要的。服务通信使用HTTP/REST等同步原协议或AMQP等同步协议。服务可以彼此独立地开发和部署。每个服务都有自己的数据库，以便与其他服务解耦。服务之间的数据一致性是使用某种特定的模式来维护的。","analysis":"C"},{"product_id":"201911291331294653542","ans":"你们正在开发一个全方位的企业应用系统。它必须支持各种不同的客户机，包括桌面浏览器。移动浏览器和本地移动应用程序。应用程序还可以向客户公开第三方的API。它还可以通过webservices或消息代理与其他应用程序协作。应用程序通过执行业务逻辑、访问数据库、与其他系统交换消息以及返回HTML/JSON/XML响应来处理请求(HTTP请求和消息)。它有一些逻辑组件对应于应用程序的不同功能区域。那么这个应用程序有什么样的部署体系结构呢?将应用程序的体系结构定义为一组松散耦合的协作服务集合，对应于ScaleCube的y轴伸缩。每个服务;可快速维护和测试——支持快速和频繁的开发和部署。与其他服务的松散耦合——使团队能够独立工作(大部分时间在其服务器上)，而不会受到对其他服务的更改的影响，也不会影响其他服务。独立部署—允许团队部署他们的服务，而不必与其他团队协调。能够被一个小团队开发，避免了大团队的高交流领导，这对于高生产力是至关重要的。服务通信使用HTTP/REST等同步原协议或AMQP等同步协议。服务可以彼此独立地开发和部署。每个服务都有自己的数据库，以便与其他服务解耦。服务之间的数据一致性是使用某种特定的模式来维护的。","analysis":"B"},{"product_id":"201911291331294807038","ans":"你们正在开发一个全方位的企业应用系统。它必须支持各种不同的客户机，包括桌面浏览器。移动浏览器和本地移动应用程序。应用程序还可以向客户公开第三方的API。它还可以通过webservices或消息代理与其他应用程序协作。应用程序通过执行业务逻辑、访问数据库、与其他系统交换消息以及返回HTML/JSON/XML响应来处理请求(HTTP请求和消息)。它有一些逻辑组件对应于应用程序的不同功能区域。那么这个应用程序有什么样的部署体系结构呢?将应用程序的体系结构定义为一组松散耦合的协作服务集合，对应于ScaleCube的y轴伸缩。每个服务;可快速维护和测试——支持快速和频繁的开发和部署。与其他服务的松散耦合——使团队能够独立工作(大部分时间在其服务器上)，而不会受到对其他服务的更改的影响，也不会影响其他服务。独立部署—允许团队部署他们的服务，而不必与其他团队协调。能够被一个小团队开发，避免了大团队的高交流领导，这对于高生产力是至关重要的。服务通信使用HTTP/REST等同步原协议或AMQP等同步协议。服务可以彼此独立地开发和部署。每个服务都有自己的数据库，以便与其他服务解耦。服务之间的数据一致性是使用某种特定的模式来维护的。","analysis":"A"},{"product_id":"201911291331295129024","ans":"你们正在开发一个全方位的企业应用系统。它必须支持各种不同的客户机，包括桌面浏览器。移动浏览器和本地移动应用程序。应用程序还可以向客户公开第三方的API。它还可以通过webservices或消息代理与其他应用程序协作。应用程序通过执行业务逻辑、访问数据库、与其他系统交换消息以及返回HTML/JSON/XML响应来处理请求(HTTP请求和消息)。它有一些逻辑组件对应于应用程序的不同功能区域。那么这个应用程序有什么样的部署体系结构呢?将应用程序的体系结构定义为一组松散耦合的协作服务集合，对应于ScaleCube的y轴伸缩。每个服务;可快速维护和测试——支持快速和频繁的开发和部署。与其他服务的松散耦合——使团队能够独立工作(大部分时间在其服务器上)，而不会受到对其他服务的更改的影响，也不会影响其他服务。独立部署—允许团队部署他们的服务，而不必与其他团队协调。能够被一个小团队开发，避免了大团队的高交流领导，这对于高生产力是至关重要的。服务通信使用HTTP/REST等同步原协议或AMQP等同步协议。服务可以彼此独立地开发和部署。每个服务都有自己的数据库，以便与其他服务解耦。服务之间的数据一致性是使用某种特定的模式来维护的。","analysis":"B"},{"product_id":"201911291331295433580","ans":"你们正在开发一个全方位的企业应用系统。它必须支持各种不同的客户机，包括桌面浏览器。移动浏览器和本地移动应用程序。应用程序还可以向客户公开第三方的API。它还可以通过webservices或消息代理与其他应用程序协作。应用程序通过执行业务逻辑、访问数据库、与其他系统交换消息以及返回HTML/JSON/XML响应来处理请求(HTTP请求和消息)。它有一些逻辑组件对应于应用程序的不同功能区域。那么这个应用程序有什么样的部署体系结构呢?将应用程序的体系结构定义为一组松散耦合的协作服务集合，对应于ScaleCube的y轴伸缩。每个服务;可快速维护和测试——支持快速和频繁的开发和部署。与其他服务的松散耦合——使团队能够独立工作(大部分时间在其服务器上)，而不会受到对其他服务的更改的影响，也不会影响其他服务。独立部署—允许团队部署他们的服务，而不必与其他团队协调。能够被一个小团队开发，避免了大团队的高交流领导，这对于高生产力是至关重要的。服务通信使用HTTP/REST等同步原协议或AMQP等同步协议。服务可以彼此独立地开发和部署。每个服务都有自己的数据库，以便与其他服务解耦。服务之间的数据一致性是使用某种特定的模式来维护的。","analysis":"C"}]},{"paperId":"618","field":"20191","question_list":[{"product_id":"201905281544267958741","ans":"CPU的操作控制功能：一条指令功能的实现需要若干操作信号配合来完成，CPU产生每条指令的操作信号并将其送往对应的部件，控制相应的部件按指令的功能进行操作。CPU的运算器只能完成运算，而控制器用于控制整个CPU的工作。","analysis":"A"},{"product_id":"201905281544303426439","ans":"直接主存存取（DirectMemoryAccess，DMA）是指数据在主存与I/O设备间（即主存与外设之间）直接成块传送。","analysis":"C"},{"product_id":"201905281544304679838","ans":"程序的局限性表现在时间局部性和空间局部性：（1）时间局部性是指如果程序中的某条指令一旦被执行，则不久的将来该指令可能再次被执行；（2）空间局部性是指一旦程序访问了某个存储单元，则在不久的将来，其附近的存储单元也最有可能被访问。题干描述的是空间局部性。","analysis":"C"},{"product_id":"201905281544305139997","ans":"3个部件串联的可靠度为R*R*R；3个部件并联的可靠度为1-(1-R)*(1-R)*(1-R)；前两个部件并联后与第三个部件串联的可靠度为(1-(1-R)*(1-R))*R；第一个部件与后两个部件并联构成的子系统串联的可靠度为R*(1-(1-R)*(1-R))。综合来看，符合题干描述的是“前两个部件并联后与第三个部件串联”选项。","analysis":"C"},{"product_id":"201905281544305456038","ans":"采用模二除法运算的只有循环冗余检验CRC。","analysis":"D"},{"product_id":"201905281544306855468","ans":"RISC寻址方式比较单一，多寄存器寻址。其他描述都是正确的。","analysis":"B"},{"product_id":"201905281544307324672","ans":"","analysis":"B"},{"product_id":"201905281544307791963","ans":"MIME是一个互联网标准，扩展了电子邮件标准，使其能够支持，与安全无关。与安全电子邮件相关的是S/MIME安全多用途互联网邮件扩展协议。SSL和HTTPS涉及到邮件传输过程的安全。PGP（全称：PrettyGoodPrivacy，优良保密协议），是一套用于信息加密、验证的应用程序，可用于加密电子邮件内容。","analysis":"C"},{"product_id":"201905281544308737276","ans":"第一空考查的是关于用户身份进行认证也就是数字签名的认证，这里使用的应该是发送方的公钥，在4个选项中，能包含发送方公钥的只有数字证书。","analysis":"A"},{"product_id":"201905281544308882095","ans":"第二空确保消息不可否认，也就是考查确保发送者身份的不可抵赖，所以这里使用的应该是发送方的数字签名。","analysis":"D"},{"product_id":"201905281544310131957","ans":"震网（Stuxnet），指一种蠕虫病毒。它的复杂程度远超一般电脑黑客的能力。这种震网（Stuxnet）病毒于2010年6月首次被检测出来，是第一个专门定向攻击真实世界中基础（能源）设施的“蠕虫”病毒，比如核电站，水坝，国家电网。引导区病毒破坏的是引导盘、文件目录等；宏病毒破坏的是OFFICE文件相关；木马的作用一般强调控制操作。","analysis":"D"},{"product_id":"201905281544310459358","ans":"一般情况下属于职务作品，按国家著作权法规定，应属于单位所有。但如果刘某与单位事先有特别约定，应遵从约定。","analysis":"B"},{"product_id":"201905281544310929011","ans":"第一空涉及到向客户提供工具软件的复制品，这里侵犯了工具软件的软件著作权。","analysis":"A"},{"product_id":"201905281544312012205","ans":"第二空，甲公司没有注册商标，并且没有描述商业秘密相关内容，所以不涉及商标权保护和不正当竞争法保护，而著作权是自作品完成之时就开始保护，所以甲公司当软件产品完成之后，该作品就已经受到著作权保护了，乙公司的行为侵犯了著作权。","analysis":"A"},{"product_id":"201905281544312327359","ans":"数据流图是结构化分析的工具，结构化方法就是采用自顶向下逐层分解的思想进行分析建模的。随着分解层次的增加，抽象的级别也越来越低，即越来越接近问题的解。数据流图建模应遵循：自顶向下、从抽象到具体的原则。","analysis":"B"},{"product_id":"201905281544313109398","ans":"常用的软件结构设计工具是结构图(StructureChart，SC)，也称程序结构图，它是描述软件结构的图形工具，描述了软件系统的层次和模块结构关系，反映了整个系统的功能实现以及模块与模块之间的联系与通信，是未来程序中的控制层次体系。在结构图中，模块用一个矩形表示，矩形内注明模块的功能和名字；箭头表示模块之间的调用关系。在结构图中还可以用带注释的箭头表示模块调用过程中来回传递的信息。如果希望进一步标明传递的信息是数据还是控制信息，则可用带实心圆的箭头表示传输的是控制信息，用带空心圆的箭头表示传递的是数据。","analysis":"C"},{"product_id":"201905281544313422125","ans":"题干中描述任意两人之间都有沟通路径，那么A1与A2、A3、…、A10之间存在9条沟通路径，A2与A1沟通路径已计算，与A3、A4、…、A10之间有8条沟通路径，依次类推，总的沟通路径数为9+8+7+6+5+4+3+2+1=(9+1)*4+5=45条沟通路径。也可直接利用无主程序员模式沟通路径计算的公式，n*(n-1)/2=45。","analysis":"D"},{"product_id":"201905281544313731441","ans":"根据表格能够画出进度网络图如下所示：据此分析每个活动的最早开始和最早完成时间如下所示：综上，完成该项目的最少时间即项目工期为55天。","analysis":"D"},{"product_id":"201905281544313885646","ans":"“团队成员可以进行良好沟通”不属于项目风险。","analysis":"A"},{"product_id":"201905281544314824949","ans":"程序设计语言的基本成分包括数据、运算、控制和传输等。程序设计语言的控制成分包括顺序、选择和循环3种结构。所以本题答案为“选择”。","analysis":"A"},{"product_id":"201905281544315136052","ans":"词法分析阶段依据语言的词法规则，对源程序进行逐个字符地扫描，从中识别出一个个“单词”符号，主要是针对词汇的检查。语法分析的任务是在词法分析的基础上，根据语言的语法规则将单词符号序列分解成各类语法单位，如“表达式”“语句”和“程序”等。语法规则就是各类语法单位的构成规则，主要是针对结构的检查。语义分析阶段分析各语法结构的含义，检查源程序是否包含语义错误，主要针对句子含义的检查。本题描述的是语法分析。","analysis":"C"},{"product_id":"201905281544315296502","ans":"符号表在编译程序工作的过程中需要不断收集、记录和使用源程序中一些语法符号的类型和特征等相关信息。这些信息一般以表格形式存储于系统中。","analysis":"B"},{"product_id":"201905281544316704611","ans":"首先，这里采用的是先来先服务调度算法，即按照申请的顺序来安排运行，申请顺序已在题干假设为P1-P2-P3-P4。其次，单个空无法判断结构，那么结合第二空的选项来分析。首先不能两个进程同时运行，因此“释放了扫描仪”选项排除。再根据原本P1-P2-P3-P4的状态分别是（运行、就绪、等待、等待），因此接下来能够在运行态的，要么是保持运行未改变的P1，否则应该是已经进入就绪态的P2（依据先来先服务的调度原则），第二空4个选项中，符合的只有“释放了打印机”选项，此时P1-P2-P3-P4的状态分别是（就绪、运行、等待、等待）。据此再来分析第一空，P1由运行态转变为就绪态，条件应该是时间片到，所以选择“时间片到”。","analysis":"A"},{"product_id":"201905281544316855819","ans":"首先，这里采用的是先来先服务调度算法，即按照申请的顺序来安排运行，申请顺序已在题干假设为P1-P2-P3-P4。其次，单个空无法判断结构，那么结合第二空的选项来分析。首先不能两个进程同时运行，因此“释放了扫描仪”选项排除。再根据原本P1-P2-P3-P4的状态分别是（运行、就绪、等待、等待），因此接下来能够在运行态的，要么是保持运行未改变的P1，否则应该是已经进入就绪态的P2（依据先来先服务的调度原则），第二空4个选项中，符合的只有“释放了打印机”选项，此时P1-P2-P3-P4的状态分别是（就绪、运行、等待、等待）。据此再来分析第一空，P1由运行态转变为就绪态，条件应该是时间片到，所以选择“时间片到”。","analysis":"C"},{"product_id":"201905281544317791473","ans":"计算机字长为64位，那么利用位示图表示时每个字能够表示64个物理块的存储情况；磁盘的容量为1024GB，物理块的大小为4MB，则共有1024GB/4MB=（256*1024）个物理块。（注意单位转换）256*1024个物理块，每64个物理块占用一个字，所以需要256*1024/64=4096个字。","analysis":"C"},{"product_id":"201905281544318105424","ans":"绝对路径从根目录\\开始，本题book2.doc的绝对路径为\\MyDrivers\\user2\\；相对路径从当前目录下一级开始，本题book2.doc的相对路径为user2\\。","analysis":"C"},{"product_id":"201905281544319048177","ans":"PV操作利用信号量机制，是一种有效的进程同步与互斥工具，可以实现资源的互斥使用，所以“实现资源的互斥使用”正确。","analysis":"B"},{"product_id":"201905281544319821348","ans":"嵌入式操作系统的特点：（1）微型化，从性能和成本角度考虑，希望占用的资源和系统代码量少；（2）可定制，从减少成本和缩短研发周期考虑，要求嵌入式操作系统能运行在不同的微处理器平台上，能针对硬件变化进行结构与功能上的配置，以满足不同应用的需求；（3）实时性，嵌入式操作系统主要应用于过程控制、数据采集、传输通信、多媒体信息及关键要害领域需要迅速响应的场合，所以对实时性要求较高；（4）可靠性，系统构件、模块和体系结构必须达到应有的可靠性，对关键要害应用还要提供容错和防故障措施；（5）易移植性，为了提高系统的易移植性，通常采用硬件抽象层和板级支撑包的底层设计技术。","analysis":"A"},{"product_id":"201905281544321075824","ans":"1、原型方法适用于用户需求不清、需求经常变化的情况，可以帮助导出系统需求并验证需求的有效性；2、探索型原型的目的是弄清目标的要求，确定所希望的特性，并探讨多种方案的可行性，可以用来探索特殊的软件解决方案；3、原型法能够迅速地开发出一个让用户看得见的系统框架，可以用来支持用户界面设计。原型法不能用来指导代码优化。","analysis":"C"},{"product_id":"201905281544322635823","ans":"极限编程应该遵循测试先行","analysis":"B"},{"product_id":"201905281544322951036","ans":"功能性特性的质量子特性包括适合性、准确性、互用性、依从性和安全性。","analysis":"A"},{"product_id":"201905281544323267603","ans":"数据耦合：一个模块访问另一个模块时，彼此之间是通过简单数据参数(不是控制参数、公共数据结构或外部变量)来交换输入、输出信息的。公共耦合：若一组模块都访问同一个公共数据环境，则它们之间的耦合就称为公共耦合。公共的数据环境可以是全局数据结构、共享的通信区、内存的公共覆盖区等。外部耦合：一组模块都访问同一全局简单变量而不是同一全局数据结构，而且不是通过参数表传递该全局变量的信息，则称之为外部耦合。标记耦合：一组模块通过参数表传递记录信息，就是标记耦合。这个记录是某一数据结构的子结构，而不是简单变量。本题描述的是标记耦合。","analysis":"D"},{"product_id":"201905281544323578913","ans":"人机交互“黄金三原则”包括：置于用户控制之下、减少用户的记忆负担、保持界面的一致性。","analysis":"B"},{"product_id":"201905281544324822923","ans":"一个高效的测试是指用少量的测试用例，发现被测软件尽可能多的错误。软件测试不能说明软件中不存在错误，不能用穷举法来进行测试。经验表明，测试中存在集群规律，即未发现的错误数量与已发现的错误数量成正比，已发现的错误数量越多，则该模块未被发现的错误也就越多。软件测试的目的就是在软件投入生产性运行之前，尽可能多地发现软件产品（主要是指程序）中的错误和缺陷。“白盒测试技术中，路径覆盖法往往能比语句覆盖法发现更多的错误”选项的描述是正确的，白盒测试中语句覆盖是覆盖度最弱的，所以路径覆盖往往能比语句覆盖发现更多的错误。","analysis":"D"},{"product_id":"201905281544325136678","ans":"在设计测试用例时，一个好的无效等价类，应该只从一个角度违反规则。选项“（18，大专，电子工程）”有2个维度错误，不能直接定位到错误的位置。","analysis":"C"},{"product_id":"201905281544326703685","ans":"在系统运行过程中，软件需要维护的原因是多样的，根据维护的原因不同，可以将软件维护分为以下四种：（1）改正性维护。为了识别和纠正软件错误、改正软件性能上的缺陷、排除实施中的误使用，应当进行的诊断和改正错误的过程就称为改正性维护。（2）适应性维护。在使用过程中，外部环境（新的硬、软件配置）、数据环境（数据库、数据格式、数据输入/输出方式、数据存储介质）可能发生变化。为使软件适应这种变化，而去修改软件的过程就称为适应性维护。（3）完善性维护。在软件的使用过程中，用户往往会对软件提出新的功能与性能要求。为了满足这些要求，需要修改或再开发软件，以扩充软件功能、增强软件性能、改进加工效率、提高软件的可维护性。这种情况下进行的维护活动称为完善性维护。（4）预防性维护。这是指预先提高软件的可维护性、可靠性等，为以后进一步改进软件打下良好基础。本题中“使其运行速度得到提升”是对性能的提升。","analysis":"C"},{"product_id":"201905281544328104342","ans":"重载，简单说，就是函数或者方法有同样的名称，但是参数列表不相同的情形，这样的同名不同参数的函数或者方法之间，互相称之为重载函数或者方法。","analysis":"C"},{"product_id":"201905281544328268863","ans":"Composition组成关系，即组合关系，指的是整体与部分的关系，并且整体与部分的生命周期并不相同。本题中“汽车和座位”、“汽车和车窗”、“汽车和发动机”选项中，将汽车作为一个系统，当汽车报废后，座位、车窗、发动机都可以再次利用，而音乐系统不可以。","analysis":"D"},{"product_id":"201905281544329209767","ans":"单一职责原则：设计目的单一的类；开放-封闭原则：对扩展开放，对修改封闭；李氏（Liskov）替换原则：子类可以替换父类；接口隔离原则：使用多个专门的接口比使用单一的总接口要好。","analysis":"A"},{"product_id":"201905281544329514656","ans":"","analysis":"C"},{"product_id":"201905281544329821143","ans":"类图（ClassDiadram）展现了一组对象、接口、协作和它们之间的关系。在面向对象系统的建模中，最常见的就是类图，它给出系统的静态设计视图。组件图（ComponentDiagram）展现了一组组件之间的组织和依赖。通信图（communicationdiagram）。通信图也是一种交互图，它强调收发消息的对象或参与者的结构组织。部署图（DeployDiagram）是用来对面向对象系统的物理方面建模的方法，展现了运行时处理结点以及其中构件（制品）的配置。","analysis":"D"},{"product_id":"201905281544330764657","ans":"顺序图（sequencediagram，序列图）。顺序图是一种交互图（interactiondiagram），交互图展现了一种交互，它由一组对象或参与者以及它们之间可能发送的消息构成。交互图专注于系统的动态视图。顺序图是强调消息的时间次序的交互图。本题图示为序列图。序列图展示了1个用例和多个对象的行为。","analysis":"C"},{"product_id":"201905281544331541964","ans":"顺序图（sequencediagram，序列图）。顺序图是一种交互图（interactiondiagram），交互图展现了一种交互，它由一组对象或参与者以及它们之间可能发送的消息构成。交互图专注于系统的动态视图。顺序图是强调消息的时间次序的交互图。本题图示为序列图。序列图展示了1个用例和多个对象的行为。","analysis":"B"},{"product_id":"201905281544331707110","ans":"责任链模式（ChainofResponsibility）：通过给多个对象处理请求的机会，减少请求的发送者与接收者之间的耦合。将接收对象链接起来，在链中传递请求，直到有一个对象处理这个请求。迭代器模式（Iterator）：提供一种方法来顺序访问一个聚合对象中的各个元素，而不需要暴露该对象的内部表示。命令模式（Command）：将一个请求封装为一个对象，从而可用不同的请求对客户进行参数化，将请求排队或记录请求日志，支持可撤销的操作。解释器模式（Interpreter）：给定一种语言，定义它的文法表示，并定义一个解释器，该解释器用来根据文法表示来解释语言中的句子。责任链模式和迭代器模式都是行为型对象模式。","analysis":"A"},{"product_id":"201905281544332012235","ans":"责任链模式（ChainofResponsibility）：通过给多个对象处理请求的机会，减少请求的发送者与接收者之间的耦合。将接收对象链接起来，在链中传递请求，直到有一个对象处理这个请求。迭代器模式（Iterator）：提供一种方法来顺序访问一个聚合对象中的各个元素，而不需要暴露该对象的内部表示。命令模式（Command）：将一个请求封装为一个对象，从而可用不同的请求对客户进行参数化，将请求排队或记录请求日志，支持可撤销的操作。解释器模式（Interpreter）：给定一种语言，定义它的文法表示，并定义一个解释器，该解释器用来根据文法表示来解释语言中的句子。责任链模式和迭代器模式都是行为型对象模式。","analysis":"D"},{"product_id":"201905281544332328510","ans":"责任链模式（ChainofResponsibility）：通过给多个对象处理请求的机会，减少请求的发送者与接收者之间的耦合。将接收对象链接起来，在链中传递请求，直到有一个对象处理这个请求。迭代器模式（Iterator）：提供一种方法来顺序访问一个聚合对象中的各个元素，而不需要暴露该对象的内部表示。命令模式（Command）：将一个请求封装为一个对象，从而可用不同的请求对客户进行参数化，将请求排队或记录请求日志，支持可撤销的操作。解释器模式（Interpreter）：给定一种语言，定义它的文法表示，并定义一个解释器，该解释器用来根据文法表示来解释语言中的句子。责任链模式和迭代器模式都是行为型对象模式。","analysis":"C"},{"product_id":"201905281544333573248","ans":"观察者模式（Observer）：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动更新。","analysis":"D"},{"product_id":"201905281544334675170","ans":"在词法分析阶段，其任务是从左到右逐个字符地读入源程序，对构成源程序的字符流进行扫描和分解，从而识别出一个个单词（也称单词符号或符号）。这里所谓的单词是指逻辑上紧密相连的一组字符，这些字符组合在一起才表示某一含义。","analysis":"A"},{"product_id":"201905281544335295388","ans":"本题可以直接以实例方式排除错误选项。本题给出的NFA，能够识别字符串000，010等，以这两个字符串为例进行分析。与之等价的DFA，也必须能够识别这样的串。A选项不能识别000，B选项不能识别010，D选项不能识别010。只有C选项能够同时识别这2个串。","analysis":"C"},{"product_id":"201905281544335452407","ans":"执行y=f(2)，即传参x=2至f(x)。首先la=x+1=2+1=3。（1）g(la)采用引用调用时，在g(la)函数中，将x记为x'以区分函数，x'=x'*x'+1=la*la+1=10，由于是引用调用，会影响形参la的取值，此时la=10，接下来计算la*x=10*2=20。（2）g(la)采用值调用，在g(la)函数中，将x记为x'以区分函数，x'=x'*x'+1=la*la+1=10，由于是值调用，不会影响形参la的取值，此时la仍然为3，接下来计算la*x=3*2=6。","analysis":"B"},{"product_id":"201905281544337632988","ans":"自然连接的结果以左侧R为主，右侧关系S去除重复列。因此最终结果为R的5个属性列，以及S的非重复列。答案为“R.A,R.B,R.C,R.D,R.E,S.F,S.G”选项。","analysis":"B"},{"product_id":"201905281544338573120","ans":"首先判断候选码，先找入度为0的结点，本题中A1没有在函数依赖右侧出现，因此体现在图示中，即入度为0，候选码必定包含属性A1。根据选项，只有选项“有2个候选关键字A1A2和A1A3”符合。","analysis":"C"},{"product_id":"201905281544338735866","ans":"候选码必定包含A1，并且根据候选码为A1A2、A1A3，可以得出主属性有A1A2A3，非主属性有A4。","analysis":"A"},{"product_id":"201905281544338884992","ans":"本题为SQL固定语句。授权语句格式：GRANT<权限>[，…n][ON<对象类型><对象名>]TO<用户>[，…n][WITHGRANTOPTION]，其中WITHGRANTOPTION，将授予用户相关权限外，用户还被授予了将相关权限授予其他用户的权利。","analysis":"C"},{"product_id":"201905281544339208072","ans":"共享锁（S锁）：又称读锁，若事务T对数据对象A加上S锁，其他事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁。排他锁（X锁）：又称写锁。若事务T对数据对象A加上X锁，其他事务不能再对A加任何锁，直到T释放A上的锁。","analysis":"D"},{"product_id":"201905281544339983270","ans":"DDBS的基本特点：（1）物理分布性：数据不是存储在一个场地上，而是存储在计算机网络的多个场地上。（2）逻辑整体性：数据物理分布在各个场地，但逻辑上是一个整体，它们被所有用户（全局用户）共享，并由一个DDBMS统一管理。（3）场地自治性：各场地上的数据由本地的DBMS管理，具有自治处理能力，完成本场地的应用（局部应用）。（4）场地之间协作性：各场地虽然具有高度的自治性，但是又相互协作构成一个整体。","analysis":"D"},{"product_id":"201905281544340136056","ans":"这类题型可以直接用实例来排除错误选项。a1,1存储在M[1]，将i=1，j=1带入选项，则“i+2j”，“2i+j”均不正确。然后根据题干描述按行存储，下一个元素应该是a1,2，存放在M[2]中，将i=1，j=2带入选项，只有选项“2i+j-2”符合题意。","analysis":"D"},{"product_id":"201905281544340296348","ans":"题干给出具有3个结点的二叉树有5种，多增加一个根节点之后，可以有左右不同的3结点二叉树，所以左右分别有单个3结点子树的二叉树有2*5=10种；除此之外，3个结点可以构造成2结点子树和单节点子树，所有不同共有4种。综上，具有4个结点的二叉树有14种。","analysis":"C"},{"product_id":"201905281544340763101","ans":"a、b从A端口进入，c、d从B端口进入，如下图所示：根据题意：从A端进入的元素必须从A端出、从B端进入的元素必须从B端出；则出队顺序中b在a前面，d在c前面。只有选项“d、a、b、c”不满足。","analysis":"A"},{"product_id":"201905281544341549071","ans":"本题主要考查的是哈希表的线性探测法。首先根据关键码序列，分别求取H(Key)=key%11。得到如下所示关键字散列值：","analysis":"B"},{"product_id":"201905281544341703115","ans":"将有序表放入数组如下：根据二分法的查找过程：（1）第一轮比较对象（0+8）/2=4，即与序号为4的关键字26进行比较；（2）第二轮如果选择左侧较小列，则下一个比较对象应该为（0+3）/2=1（向下取整），即与序号为1的关键字15比较，没有对应的选项；（3）第二轮如果选择右侧较大列，则下一个比较对象应该为（5+8）/2=6（向下取整），即与序号为6的关键字40进行比较。所以应该选择“26,40,65”选项。","analysis":"C"},{"product_id":"201905281544341854424","ans":"","analysis":"B"},{"product_id":"201905281544342172952","ans":"","analysis":"C"},{"product_id":"201905281544342952899","ans":"","analysis":"A"},{"product_id":"201905281544343107207","ans":"","analysis":"D"},{"product_id":"201905281544343733137","ans":"启用无痕浏览模式，下载文件仍然会被保留。","analysis":"C"},{"product_id":"201905281544344511792","ans":"","analysis":"C"},{"product_id":"201905281544344672563","ans":"TCP和UDP均提供了端口寻址功能。UDP是一种不可靠的、无连接的协议，没有连接管理能力，不负责重新发送丢失或出错的数据消息，也没有流量控制的功能。","analysis":"D"},{"product_id":"201905281544344983234","ans":"ipconfig显示信息；ipconfig/all显示详细信息，可查看DHCP服务是否已启用；ipconfig/renew更新所有适配器；ipconfig/release释放所有匹配的连接。","analysis":"B"},{"product_id":"201905281544345132973","ans":"ZigBee，也称紫蜂，是一种低速短距离传输的无线网上协议，常见对讲机使用。蓝牙覆盖范围在十米左右，增加功率可达到100米左右。ZigBee在10-100左右，增加功率可达一公里。","analysis":"A"},{"product_id":"201905281544346079244","ans":"一个项目是一个[临时的]（）独特、复杂、相互关联的活动，有一个目标或目的必须在特定的时间内、在预算内和根据（）完成。task(尤指艰巨或令人厌烦的)任务，工作;sequence一系列；一连串；work做体力(或脑力)工作;工作;职业;activity活动;热闹状况;活跃;(为兴趣、娱乐或达到一定目的而进行的)活动","analysis":"C"},{"product_id":"201905281544346231739","ans":"一个项目是一个[临时的]（）独特、复杂、相互关联的活动，有一个目标或目的必须在特定的时间内、在预算内，根据（）完成。specifications规格;规范;明细单;说明书rules规则;规章;条例;建议;estimates(对数量、成本等的)估计;估价;估计的成本designs设计;制图;构思;计划;筹划;","analysis":"A"},{"product_id":"201905281544347955666","ans":"项目管理是于指定的时间范围内以最低的成本，界定、计划、人员配置、组织、指导和控制开发一个（）系统的过程。perfect完备的;完美的;完全的;acceptable可接受的;令人满意的;controlled控制的，管制的;completed完成;结束;","analysis":"B"},{"product_id":"201905281544348267643","ans":"对于任何系统开发项目，有效的项目管理都是必要的，以确保项目满足（）的要求，在可接受的预算内开发，并满足客户的期望和规范。deadline最后期限;截止日期；基线specification规格;规范;expectation预料;预期;requirement必要条件;必备的条件","analysis":"A"},{"product_id":"201905281544349205121","ans":"","analysis":"D"}]},{"paperId":"592","field":"20182","question_list":[{"product_id":"201811151131515534454","ans":"本题考查计算机系统硬件基础知识。当CPU执行一条指令时，先把它从内存储器取到缓冲寄存器中，再送入指令寄存器(IR)暂存，指令译码器根据IR的内容产生各种微操作指令，控制其他的组成部件工作，完成所需的功能。程序计数器（PC)具有寄存信息和计数两种功能，又称为指令计数器。程序的执行分两种情况，一是顺序执行，二是转移执行。在程序开始执行前，将程序的起始地址送入PC,该地址在程序加载到内存时确定，因此PC的内容即是程序第一条指令的地址。执行指令时，CPU自动修改PC的内容，以便使其保持的总是将要执行的下一条指令的地址。由于大多数指令都是按顺序来执行的，所以修改的过程通常只是简单地对PC加“1”。当遇到转移指令时，后继指令的地址根据当前指令的地址加上一个向前或向后转移的位移量得到，或者根据转移指令给出的直接转移的地址得到。","analysis":"B"},{"product_id":"201811151131518667098","ans":"本题考查计算机系统硬件知识。BIOS(基本输入输出系统）是装在计算机硬件系统中最基本的软件代码，为计算机提供最底层最直接的硬件设置和控制，即使关机或掉电，其内容也不会丢失，它保存在主板上的ROM(只读存储芯片）中。","analysis":"A"},{"product_id":"201811151131519285962","ans":"本题考查计算机系统硬件知识。采用n位补码（包含一个符号位）表示数据时，用1位（最高位）表示数的符号（0正1负），其余n-1位表示数值部分。若表示整数，可表示的最大整数的二进制形式为n-1个1(即2n-1-1)，可表示的最小整数为2n-1，即二进制形式为1之后跟n-1个0，此时最高位的1即表示符号也表示数值。","analysis":"D"},{"product_id":"201811151131519447245","ans":"本题考查计算机系统可靠性知识。并联系统中，设每个子系统的可靠性分别以R1，R2，……，RN表示，则整个系统的可靠性R可由下式求得：R=1-(1-R1)(1-R2)……(1-RN)假设一个系统由/V个子系统组成，当且仅当所有的子系统都能正常工作时系统才能正常工作，这种系统称为串联系统。若串联系统中各个子系统的可靠性分别用以R1，R2，……，RN表示，则系统的可靠性R可由下式求得：R=R1R2，……RN题中图示的系统有两个子系统串联得到，第一个子系统是三个子系统构成的并联系统，第二个子系统是由两个子系统构成的并联系统，综合上面的并联和串联系统可靠性计算方式，整个系统的可靠性为（1-（1-R）3）（1-（1-R）2）。","analysis":"C"},{"product_id":"201811151131519609176","ans":"本题考查计算机系统中数据表示基础知识。奇偶校验（ParityCodes)是一种简单有效的校验方法。这种方法通过在编码中增加一位校验位来使编码中1的个数为奇数（奇校验）或者为偶数（偶校验），从而使码距变为2。对于奇校验或偶校验方法，它可以检测代码中奇数位出错的编码，但不能发现偶数位出错的情况，即当合法编码中的奇数位发生了错误时，编码中的1变成0;或0变成1，则该编码中1的个数的奇偶性就发生了变化，从而可以发现错误，但是不能确定出错的数据位置，从而无法纠正错误。","analysis":"C"},{"product_id":"201811151131520537811","ans":"本题考查计算机系统硬件基础知识。流水（pipelimng)技术是把并行性或并发性嵌入到计算机系统里的一种形式，它把重复的顺序处理过程分解为若干子过程，每个子过程能在专用的独立模块上有效地并发工作。显然，对于单条指令而言，其执行过程中的任何一步都不能省却且需按顺序执行，所以“流水线方式可提高单条指令的执行速度”的说法是错误的。","analysis":"A"},{"product_id":"201811151131520857295","ans":"本题考查加密算法的基础知识。DES全称为DataEncryptionStandard,即数据加密标准，是一种使用密钥加密的块算法，1977年被美国联邦政府的国家标准局确定为联邦资料处理标准（FIPS)，并授权在非密级政府通信中使用，随后该算法在国际上广泛流传开来。DES是对称的，也就是说它使用同一个密钥来加密和解密数据。DES还是一种分组加密算法，该算法每次处理固定长度的数据段，称之为分组。DES分组的大小是64位，如果加密的数据长度不是64位的倍数，可以按照某种具体的规则来填充位。从本质上来说，DES的安全性依赖于虚假表象，从密码学的术语来讲就是依赖于“混乱和扩散”的原则。混乱的目的是为隐藏任何明文同密文、或者密钥之间的关系，而扩散的目的是使明文中的有效位和密钥一起组成尽可能多的密文。两者结合到一起就使得安全性变得相对较高。三重DES也叫3DES(即TripleDES)，是向AES过渡的加密算法，它使用3条56位的密钥对数据进行三次加密。是DES的一个更安全的变形。它以DES为基本模块，通过组合分组方法设计出分组加密算法。比起最初的DES,3DES更为安全。DES是使用DES加密算法对明文进行三次加密/解密的算法，密钥长度增加，提高了加密的强度。","analysis":"B"},{"product_id":"201811151131521167356","ans":"本题考查电脑病毒的相关知识。计算机病毒是编制者在计算机程序中插入的破坏计算机功能或者数据的代码，能影响计算机使用，能自我复制的一组计算机指令或者程序代码。计算机病毒具有传播性、隐蔽性、感染性、潜伏性、触发性、破坏性等特性。","analysis":"D"},{"product_id":"201811151131521317088","ans":"本题考查摘要算法的基础知识。消息摘要算法的主要特征是加密过程不需要密钥，并且经过加密的数据无法被解密，目前可以解密逆向的只有CRC32算法，只有输入相同的明文数据经过相同的消息摘要算法才能得到相同的密文。消息摘要算法不存在密钥的管理与分发问题，适合于分布式网络上使用。消息摘要算法主要应用在“数字签名”领域，作为对明文的摘要算法。著名的摘要算法有RSA公司的MD5算法和SHA-1算法及其大量的变体。消息摘要算法存在以下特点：①消息摘要算法是将任意长度的输入，产生固定长度的伪随机输出的算法，例如应用MD5算法摘要的消息长度为128位，SHA-1算法摘要的消息长度为160位，SHA-1的变体可以产生192位和256位的消息摘要。②消息摘要算法针对不同的输入会产生不同的输出，用相同的算法对相同的消息求两次摘要，其结果是相同的。因此消息摘要算法是一种“伪随机”算法。③输入不同，其摘要消息也必不相同；但相同的输入必会产生相同的输出。即使两条相似的消息的摘要也会大相径庭。④消息摘要函数是无陷门的单向函数，即只能进行正向的信息摘要，而无法从摘要中恢复出任何的消息。","analysis":"B"},{"product_id":"201811151131521943417","ans":"本题考查摘要算法的基础知识。消息摘要算法的主要特征是加密过程不需要密钥，并且经过加密的数据无法被解密，目前可以解密逆向的只有CRC32算法，只有输入相同的明文数据经过相同的消息摘要算法才能得到相同的密文。消息摘要算法不存在密钥的管理与分发问题，适合于分布式网络上使用。消息摘要算法主要应用在“数字签名”领域，作为对明文的摘要算法。著名的摘要算法有RSA公司的MD5算法和SHA-1算法及其大量的变体。消息摘要算法存在以下特点：①消息摘要算法是将任意长度的输入，产生固定长度的伪随机输出的算法，例如应用MD5算法摘要的消息长度为128位，SHA-1算法摘要的消息长度为160位，SHA-1的变体可以产生192位和256位的消息摘要。②消息摘要算法针对不同的输入会产生不同的输出，用相同的算法对相同的消息求两次摘要，其结果是相同的。因此消息摘要算法是一种“伪随机”算法。③输入不同，其摘要消息也必不相同；但相同的输入必会产生相同的输出。即使两条相似的消息的摘要也会大相径庭。④消息摘要函数是无陷门的单向函数，即只能进行正向的信息摘要，而无法从摘要中恢复出任何的消息。","analysis":"B"},{"product_id":"201811151131522106021","ans":"使用Web方式收发电子邮件时，必须输入账号密码才能登录。Web方式无须设置简单邮件传输协议。电子邮件可以插入多个附件，未发送的邮件也可以保存到草稿箱。","analysis":"B"},{"product_id":"201811151131522419246","ans":"本题考查知识产权。其中商标权可以通过续注延长拥有期限，而著作权、专利权和设计权的保护期限都是有限期的。","analysis":"C"},{"product_id":"201811151131522561816","ans":"本题考查知识产权。由国家版权局颁布的《中华人民共和国著作权法》和中华人民共和国国务院令公布的《计算机软件保护条例》是构成我国保护计算机软件著作权的两个基本法律文件。","analysis":"B"},{"product_id":"201811151131522721723","ans":"本题考査知识产权。软件著作权人享有发表权、署名权、修改权、复制权、发行权、出租权、信息网络传播权、翻译权和应当由软件著作权人享有的其他权利。题中的软件程序员虽然是该软件的开发者，但不是软件著作权人，其行为构成侵犯软件著作权人的权利。","analysis":"D"},{"product_id":"201811151131523038445","ans":"本题考查结构化分析与设计的基础知识。结构化分析方法是一种建模技术，其建立的分析模型的核心是数据字典，描述了所有在目标系统中使用的和生成的数据对象。围绕这个核心有三个图：数据流图，描述数据在系统中如何被传送或变换以及描述如何对数据流进行变换的功能（子功能），用于功能建模；实体联系图，描述数据对象及数据对象之间的关系，用于数据建模；状态迁移图，描述系统对外部事件如何响应，如何动作，用于行为建模。而结构图是结构化设计的输出。","analysis":"D"},{"product_id":"201811151131523194417","ans":"本题考查结构化分析的基础知识。数据流图是结构化分析的重要模型，需要考生熟练掌握数据流图建模的内容、组成要素以及如何对实际问题建立数据流图。外部实体、数据存储、加工和数据流是数据流图的四要素。其中外部实体是指存在于软件系统之外的人员、组织或其他系统。对于该系统而言，信用卡管理系统是一个外部实体。","analysis":"A"},{"product_id":"201811151131523354911","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-D-F-H-J,其长度为46。","analysis":"D"},{"product_id":"201811151131523667856","ans":"活动FG最早从第19天开始，最晚第37天开始，因此其松弛时间为18天。或者计算出活动FG所在的最长路径的长度为28天，即路径A-D-F-G-J，而根据前面计算关键路径长度为46天，因此该活动的松弛时间为46-28=18天。","analysis":"C"},{"product_id":"201811151131523818812","ans":"本题考查软件项目管理中风险的基本概念。风险是一种具有负面后果的、可能会发生、人们不希望发生的事件。风险具有多种类型，包括技术风险、管理风险、人员风险等等。","analysis":"B"},{"product_id":"201811151131523979335","ans":"本题考査程序语言基础知识。a为真时，无论b、c、d的值如何，表达式“aor((c<d)andb)”的值都为真，因此可进行短路计算，即不需要再求解b、c和d及表达式中其他子表达式的值。","analysis":"B"},{"product_id":"201811151131524448299","ans":"本题考查程序语言基础知识。用二叉树表示由二元运算构造的算术表达式时，父结点表示运算符，左孩子表示第一个操作数，右孩子表示第二个操作数。对于题图中的二叉树，根结点表示减运算，其被减数由乘运算给出，其减数为40;而对于乘运算，其被乘数为10,其乘数由加运算的结果提供，因此表达式为10*（20+30)-40。","analysis":"C"},{"product_id":"201811151131524603023","ans":"本题考查程序语言基础知识。由于整数和实数在机器层面采用不同的方式表示，因此进行运算或赋值时，若数据类型不同则需要进行转换。一般规则是将低精度或占用位数少的数值转换为高精度或占用位数多的数值形式。","analysis":"C"},{"product_id":"201811151131524911311","ans":"本题对于R资源可用数为8，分配到3个进程中，为了让最后的i值最小，所以每个进程尽量平均分配，可以得到3、3、2的分配情况，此时如果假设i的取值为3，则必定不会形成死锁。当i>3时系统会形成死锁，此时取整，即最小i值为4。","analysis":"D"},{"product_id":"201811151131525061463","ans":"本题考查的是利用PV操作控制进程的并发执行。根据前驱图，P1进程运行完需要利用V操作V(S1)、V(S2)分别通知P2、P3进程，所以空①应填V(S2)。P2进程需要等待P1进程的通知，故需要利用P(S1)操作测试P1进程是否运行完，由于P3进程执行前已经用P(S2)，所以空②应填P(S1)。根据上述分析，用PV操作控制这6个进程的同步与互斥的程序如下：","analysis":"D"},{"product_id":"201811151131525229101","ans":"本题考查的是利用PV操作控制进程的并发执行。根据前驱图，P3进程需要等待P1和P2进程的通知，需要执行2个P操作，即P(S2)、P(S3)。由于P3进程的程序中执行前有1个P操作P(S2)，故空③应为填写P(S3)。P3进程运行结束需要利用1个V操作通知P5进程，故空④应为1个V操作V(S5)。根据上述分析，用PV操作控制这6个进程的同步与互斥的程序如下：","analysis":"B"},{"product_id":"201811151131525382493","ans":"本题考查的是利用PV操作控制进程的并发执行。根据前驱图，P4进程执行完需要通知P5进程，故P4进程应该执行1个V操作，即空⑤应填V(S6)。P5进程运行前需要等待P3和P4进程的通知，需要执行2个P操作，故空⑥应填写P(S5)和P(S6)。根据上述分析，用PV操作控制这6个进程的同步与互斥的程序如下：","analysis":"C"},{"product_id":"201811151131525696184","ans":"本题考査操作系统内存管理方面的基本知识。由于系统中字长为32位，所以每个字可以表示32个物理块的使用情况。又因为文件存储器上的物理块依次编号为：0,1,2,…，因此2056号物理块应该在位示图的第64个字中描述。","analysis":"C"},{"product_id":"201811151131525859701","ans":"本题考查操作系统文件管理方面的基础知识。根据题意，磁盘索引块为1KB，每个地址项大小为4B节，故每个磁盘索引块可存放1024/4=256个物理块地址。又因为文件索引节点中有8个地址项，分直接直接地址、一级间接地址和二级间接地址索引。①直接地址索引文件索引节点中有5个地址项为直接地址索引，这意味着文件逻辑块号为0〜4的为直接地址索引②一级间接地址索引文件索引节点中有2个地址项为一级间接地址索引，地址项指出的两个物理块分别存放两张一级间接地址索引表。其中一张间接地址索引表指出文件逻辑块号为5〜260对应的物理块号，另一张间接地址索引表指出文件逻辑块号为261〜516对应的物理块号。③二级间接地址索引文件索引节点中有1个地址项为二级间接地址索引，该地址项指出的物理块存放了256个间接索引表的地址，这256个间接索引表存放逻辑块号为517〜66052的物理块号。综上分析不难得出，若要访问文件的逻辑块号分别为5和518,则系统应分别采用直接地址索引和二级间接地址索引。","analysis":"B"},{"product_id":"201811151131526003764","ans":"本题考查软件开发过程模型的基础知识。瀑布模型将开发阶段描述为从一个阶段瀑布般地转换到另一个阶段。原型模型中，开发人员快速地构造整个系统或者系统的一部分以理解或澄清问题。演化（迭代）模型：演化模型主要针对事先不能完整定义需求的软件开发，是在快速开发一个原型的基础上，根据用户在使用原型的过程中提出的意见和建议对原型进行改进，获得原型的新版本。重复这一过程，最终可得到令用户满意的软件产品。螺旋模型将开发活动和风险管理结合起来，以减小风险。在这几种开发过程模型中，演化模型可以快速地提交一个可以使用的软件版本，并同时不断地改善系统的功能和性能。","analysis":"C"},{"product_id":"201811151131526162429","ans":"本题考查软件过程和过程改进的基础知识。CL0（未完成的）：过程域未执行或未得到CL1中定义的所有目标。CL1（已执行的）：其共性目标是过程将可标识的输入工作产品转换成可标识的输出工作产品，以实现支持过程域的特定目标。CL2（已管理的）：其共性目标是集中于已管理的过程的制度化。根据组织级政策规定过程的运作将使用哪个过程，项目遵循已文档化的计划和过程描述，所有正在工作的人都有权使用足够的资源，所有工作任务和工作产品都被监控、控制、和评审。CL3（已定义级的）：其共性目标集中于已定义的过程的制度化。过程是按照组织的裁剪指南从组织的标准过程中裁剪得到的，还必须收集过程资产和过程的度量，并用于将来对过程的改进。CL4（定量管理的）：其共性目标集中于可定量管理的过程的制度化。使用测量和质量保证来控制和改进过程域，建立和使用关于质量和过程执行的质量目标作为管理准则。CL5（优化的）：使用量化（统计学）手段改变和优化过程域，以满足客户的改变和持续改进计划中的过程域的功效。","analysis":"D"},{"product_id":"201811151131526474851","ans":"本题考查软件质量的基础知识。ISO/IEC9126软件质量模型由三个层次组成：第一层是质量特性，第二层是质量子特性，第三层是度量指标。其中可靠性质量特性（reliability)是指与在规定的一段时间内和规定的条件下，软件维持在其性能水平有关的能力。可靠性质量特性包括三个子特性。成熟性（maturity):与由软件故障引起失效的频度有关的软件属性。容错性（faulttolerance):与在软件错误或违反指定接口的情况下，维持指定的性能水平的能力有关的软件属性。易恢复性（recoverability):与在故障发生后，重新建立其性能水平并恢复直接受影响数据的能力，以及为达到此目的所需的时间和努力有关的软件属性。","analysis":"A"},{"product_id":"201811151131526636676","ans":"本题考查软件设计的基础知识。模块化是指解决一个复杂问题时自顶向下逐层把软件系统划分成若干模块的过程。每个模块完成一个特定的子功能，所有的模块按某种方法组装起来，成为一个整体，完成整个系统所要求的功能。将一个待开发的软件系统划分成多个模块，有一些指导原则，如：①划分模块时，尽量做到高内聚、低耦合，保持模块的相对独立性，并以此原则优化初始的软件结构。②一个模块的作用范围应在其控制范围之内，且判定所在的模块应与受其影响的模块在层次上尽量靠近。③软件结构的深度、宽度、扇入和扇出应适当。④模块的大小要适中。","analysis":"B"},{"product_id":"201811151131527107628","ans":"本题考查软件设计基础知识。模块独立是指每个模块完成换一个相对独立的特定子功能，并且与其他模块之间的联系简单。衡量模块独立程度的标准有两个：耦合性和内聚性。耦合是模块之间的相对独立性（互相连接的紧密程度）的度量。耦合取决于各个模块之间接口的复杂程度、调用模块的方式以及通过接口的信息类型等。选项中的四种耦合是指：数据耦合：指两个模块之间有调用关系，传递的是简单的数据值，相当于高级语言中的值传递。标记耦合：指两个模块之间传递的是数据结构。控制耦合：指一个模块调用另一个模块时，传递的是控制变量，被调用模块通过该控制变量的值有选择地执行模块内的某一功能。因此，被调用模块内应具有多个功能，哪一个功能起作用受调用模块控制。外部耦合：模块间通过软件之外的环境联结（如I/O将模块耦合到特定的设备、格式、通信协议上）时称为外部耦合。根据题干描述，采购子系统传递给财务子系统采购金额、收款方和采购日期等信息时，应将这些信息包装在数据结构中，因此两个子系统传递的是数据结构。","analysis":"B"},{"product_id":"201811151131527257065","ans":"本题考查软件测试的相关知识，要求考生能够熟练掌握典型的白盒测试和黑盒测试方法。路径覆盖就是设计若干个测试用例，运行被测程序，使得程序中每条路径至少运行一次。画出上述伪代码的流程图如下：从图中很容易看出有四条路径：路径1:输入x,y→语句1→判断x>0→语句2→判断y>0→语句3→输出；路径2:输入x,y→语句1→判断x>0→语句2→判断y>0→语句4→输出；路径3:输入x,y→语句1→判断x>0→语句5→判断z>0→语句6→输出；路径4:输入x,y→语句1→判断x>0→语句5→判断z>0→语句7→输出。因此设计4个测试用例分别运行上述四个路径即可满足路径覆盖。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V(G)=m-n+2,图中m=14,n=12,V(G)=14-12+2=4。","analysis":"B"},{"product_id":"201811151131527413355","ans":"本题考查软件测试的相关知识，要求考生能够熟练掌握典型的白盒测试和黑盒测试方法。路径覆盖就是设计若干个测试用例，运行被测程序，使得程序中每条路径至少运行一次。画出上述伪代码的流程图如下：从图中很容易看出有四条路径：路径1:输入x,y→语句1→判断x>0→语句2→判断y>0→语句3→输出；路径2:输入x,y→语句1→判断x>0→语句2→判断y>0→语句4→输出；路径3:输入x,y→语句1→判断x>0→语句5→判断z>0→语句6→输出；路径4:输入x,y→语句1→判断x>0→语句5→判断z>0→语句7→输出。因此设计4个测试用例分别运行上述四个路径即可满足路径覆盖。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V(G)=m-n+2，图中m=14,n=12,V(G)=14-12+2=4。","analysis":"C"},{"product_id":"201811151131527561464","ans":"本题考查软件维护的基础知识。在系统运行过程中，软件需要维护的原因是多样的，根据维护的原因不同，可以将软件维护分为以下四种：（1）改正性维护。为了识别和纠正软件错误、改正软件性能上的缺陷、排除实施中的误使用，应当进行的诊断和改正错误的过程就称为改正性维护。（2）适应性维护。在使用过程中，外部环境（新的硬、软件配置）、数据环境（数据库、数据格式、数据输入/输出方式、数据存储介质）可能发生变化。为使软件适应这种变化，而去修改软件的过程就称为适应性维护。（3）完善性维护。在软件的使用过程中，用户往往会对软件提出新的功能与性能要求。为了满足这些要求，需要修改或再开发软件，以扩充软件功能、增强软件性能、改进加工效率、提高软件的可维护性。这种情况下进行的维护活动称为完善性维护。（4）预防性维护。这是指预先提高软件的可维护性、可靠性等，为以后进一步改进软件打下良好基础。本题中，由于信用卡公司信息系统的数据格式发生变化，需要对销售系统做相应的修改，该行为属于适应性维护。","analysis":"B"},{"product_id":"201811151131527888211","ans":"本题考查面向对象的基本知识。继承是面向对象技术的一个重要特征，描述父类和子类之间共享数据（属性）和方法（行为）的机制。在定义一个类时，可以在一个已经存在的类的基础上，通过继承关系将这个已经存在的类所定义的内容作为自己内容加以使用（所创建的新类是一种已存在的类的子类)，并可以在不需要改变原有父类的情况下扩充添加新的内容(即更具体)。添加的这些内容既包括属性，也包括行为。","analysis":"A"},{"product_id":"201811151131528035732","ans":"本题考查面向对象技术的基本知识。多态分为参数多态、包含多态、过载多态和强制多态四种不同形式。参数多态采用参数化模板，通过给出不同的类型参数，使得一个结构有多种类型；包含多态是指同样的操作可用于一个类型及其子类型，即子类型化；过载多态是指同一个名字在不同上下文中可代表不同的含义，在继承关系的支持下，可以实现把具有通用功能的消息存放在高层次，而实现这一功能的不同行为放在较低层次，在这些低层次上生成的对象能够给通用消息以不同的响应；强制多态是指通过语义操作把一个变量的类型加以变换。","analysis":"C"},{"product_id":"201811151131528351844","ans":"本题考查面向对象技术的基本知识。类定义了一组大体上相似的对象，一个类所包含的方法和数据描述一组对象的共同行为和属性。类可以分为实体类、接口类（边界类）和控制类三类。实体类的对象表示现实世界中真实的实体，如人、物等，销售系统中的客户类即属于实体类。接口类（边界类）的对象为用户提供一种与系统合作交互的方式，分为人和系统两大类，其中人的接口可以是显示屏、窗口、Web窗体、对话框、菜单、列表框、其他显示控制、条形码、二维码或者用户与系统交互的其他方法，销售系统中客户通过二维码进行支付，二维码类即属于接口类。系统接口涉及到把数据发送到其他系统，或者从其他系统接收数据。控制类的对象用来控制活动流，充当协调者。","analysis":"B"},{"product_id":"201811151131528506179","ans":"本题考查面向对象技术的基本知识。类定义了一组大体上相似的对象，一个类所包含的方法和数据描述一组对象的共同行为和属性。类可以分为实体类、接口类（边界类）和控制类三类。实体类的对象表示现实世界中真实的实体，如人、物等，销售系统中的客户类即属于实体类。接口类（边界类）的对象为用户提供一种与系统合作交互的方式，分为人和系统两大类，其中人的接口可以是显示屏、窗口、Web窗体、对话框、菜单、列表框、其他显示控制、条形码、二维码或者用户与系统交互的其他方法，销售系统中客户通过二维码进行支付，二维码类即属于接口类。系统接口涉及到把数据发送到其他系统，或者从其他系统接收数据。控制类的对象用来控制活动流，充当协调者。","analysis":"A"},{"product_id":"201811151131528665741","ans":"本题考查统一建模语言（UML)的基本知识。UML类图、组件图、通信图和部署图各自刻画系统的不同方面。其中，类图展现了一组对象、接口、协作及其之间的关系；组件图展示一组组件之间的组织和依赖，它与类图相关，通常可以把组件映射为一个或多个类、接口或协作；通信图强调收发消息的对象的结构组织；部署图展现了运行时处理结点以及其中构件（制品）的配置。题图所示即为UML组件图，其中：表示组件，组件OrderSystem所接处CustomerLookup表示OrderSystem对CustomerLoopup接口的依赖，CustomerRepository处表示CustomerRepository提供的CustomerLookup接口。接口之间表示依赖关系。","analysis":"B"},{"product_id":"201811151131528973381","ans":"本题考查统一建模语言（UML)的基本知识。UML类图、组件图、通信图和部署图各自刻画系统的不同方面。其中，类图展现了一组对象、接口、协作及其之间的关系；组件图展示一组组件之间的组织和依赖，它与类图相关，通常可以把组件映射为一个或多个类、接口或协作；通信图强调收发消息的对象的结构组织；部署图展现了运行时处理结点以及其中构件（制品）的配置。题图所示即为UML组件图，其中：表示组件，组件OrderSystem所接处CustomerLookup表示OrderSystem对CustomerLoopup接口的依赖，CustomerRepository处表示CustomerRepository提供的CustomerLookup接口。接口之间表示依赖关系。","analysis":"C"},{"product_id":"201811151131529289991","ans":"本题考查统一建模语言（UML)的基本知识。UML类图、组件图、通信图和部署图各自刻画系统的不同方面。其中，类图展现了一组对象、接口、协作及其之间的关系；组件图展示一组组件之间的组织和依赖，它与类图相关，通常可以把组件映射为一个或多个类、接口或协作；通信图强调收发消息的对象的结构组织；部署图展现了运行时处理结点以及其中构件（制品）的配置。题图所示即为UML组件图，其中：表示组件，组件OrderSystem所接处CustomerLookup表示OrderSystem对CustomerLoopup接口的依赖，CustomerRepository处表示CustomerRepository提供的CustomerLookup接口。接口之间表示依赖关系。","analysis":"C"},{"product_id":"201811151131529441488","ans":"本题考查设计模式的基本概念。按照设计模式的目的可以分为创建型模式、结构型模式以及行为型模式三大类。结构型模式涉及如何组合类和对象以获得更大的结构，行为模式涉及算法和对象间职责的分配。桥接器模式属于结构型设计模式，观察者模式、访问者模式和策略模式均为行为设计模式。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式的主要意图是：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。此模式的结构图如下所示。其中，Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。访问者（Viskor)模式的主要意图是：表示一个作用于某对象结构中的各元素的操作。它允许在不改变各元素的类的前提下定义作用于这些元素的新操作。其结构图如下所示。其中，Visitor(访问者）为该对象结构中ConcreteElement的每一个类声明一个Visit操作。Element(元素）定义以一个访问者为参数的Accept操作。策略（Strategy)模式的主要意图是：定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化。其结构图如下所示。其中，Strategy(策略）定义所有支持的算法的公共接口。Context使用这个接口来调用某ConcreteStrategy定义的算法。Bridge(桥接）模式的主要意图是：将抽象部分与其实现部分分离，使它们都可以独立地变化。其结构图如下所示。其中，客户程序（Client)使用的主要接口是Abstraction，它定义抽象类的接口，维护一个指向Implementor类型对象的指针（引用）；RefinedAbstraction扩充由Abstraction定义的接口；Implementor定义实现类的接口，该接口不一定要与Abstraction的接口完全一致;事实上这两个接口可以完全不同。一般来说，Implementor接口仅提供基本操作，而Abstraction定义了基于这些基本操作的较高层次的操作；Concretelmplementor实现Implementor接口并定义它的具体实现。本题描述简单超市销售系统在结账时在收银台（Checkout)采用人工（Manual)或自动（Auto)对购物车（Shopping_Cart)中的每个物品（Item)进行访问汇总价格后结账，所以适合采用访问者模式。题图所示的类图中，物品（Item)对应前述访问者模式结构图中的Element(元素），Checkout对应Visitor(访问者），所以Item定义以一个访问者为参数的accept操作，由子类实现此accept操作。访问者模式属于行为型对象模式，适用于：①一个对象结构包含很多类对象，它们有不同的接口，而用户想对这些对象实施一些依赖于其具体类的操作；②需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而又想要避免这些操作“污染”这些对象的类；③定义对象结构的类很少改变，但经常需要在此结构上定义新的操作。","analysis":"B"},{"product_id":"201811151131529606532","ans":"本题考查设计模式的基本概念。按照设计模式的目的可以分为创建型模式、结构型模式以及行为型模式三大类。结构型模式涉及如何组合类和对象以获得更大的结构，行为模式涉及算法和对象间职责的分配。桥接器模式属于结构型设计模式，观察者模式、访问者模式和策略模式均为行为设计模式。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式的主要意图是：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。此模式的结构图如下所示。其中，Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。访问者（Viskor)模式的主要意图是：表示一个作用于某对象结构中的各元素的操作。它允许在不改变各元素的类的前提下定义作用于这些元素的新操作。其结构图如下所示。其中，Visitor(访问者）为该对象结构中ConcreteElement的每一个类声明一个Visit操作。Element(元素）定义以一个访问者为参数的Accept操作。策略（Strategy)模式的主要意图是：定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化。其结构图如下所示。其中，Strategy(策略）定义所有支持的算法的公共接口。Context使用这个接口来调用某ConcreteStrategy定义的算法。Bridge(桥接）模式的主要意图是：将抽象部分与其实现部分分离，使它们都可以独立地变化。其结构图如下所示。其中，客户程序（Client)使用的主要接口是Abstraction，它定义抽象类的接口，维护一个指向Implementor类型对象的指针（引用）；RefinedAbstraction扩充由Abstraction定义的接口；Implementor定义实现类的接口，该接口不一定要与Abstraction的接口完全一致;事实上这两个接口可以完全不同。一般来说，Implementor接口仅提供基本操作，而Abstraction定义了基于这些基本操作的较高层次的操作；Concretelmplementor实现Implementor接口并定义它的具体实现。本题描述简单超市销售系统在结账时在收银台（Checkout)采用人工（Manual)或自动（Auto)对购物车（Shopping_Cart)中的每个物品（Item)进行访问汇总价格后结账，所以适合采用访问者模式。题图所示的类图中，物品（Item)对应前述访问者模式结构图中的Element(元素），Checkout对应Visitor(访问者），所以Item定义以一个访问者为参数的accept操作，由子类实现此accept操作。访问者模式属于行为型对象模式，适用于：①一个对象结构包含很多类对象，它们有不同的接口，而用户想对这些对象实施一些依赖于其具体类的操作；②需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而又想要避免这些操作“污染”这些对象的类；③定义对象结构的类很少改变，但经常需要在此结构上定义新的操作。","analysis":"A"},{"product_id":"201811151131529911284","ans":"本题考查设计模式的基本概念。按照设计模式的目的可以分为创建型模式、结构型模式以及行为型模式三大类。结构型模式涉及如何组合类和对象以获得更大的结构，行为模式涉及算法和对象间职责的分配。桥接器模式属于结构型设计模式，观察者模式、访问者模式和策略模式均为行为设计模式。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式的主要意图是：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。此模式的结构图如下所示。其中，Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。访问者（Viskor)模式的主要意图是：表示一个作用于某对象结构中的各元素的操作。它允许在不改变各元素的类的前提下定义作用于这些元素的新操作。其结构图如下所示。其中，Visitor(访问者）为该对象结构中ConcreteElement的每一个类声明一个Visit操作。Element(元素）定义以一个访问者为参数的Accept操作。策略（Strategy)模式的主要意图是：定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化。其结构图如下所示。其中，Strategy(策略）定义所有支持的算法的公共接口。Context使用这个接口来调用某ConcreteStrategy定义的算法。Bridge(桥接）模式的主要意图是：将抽象部分与其实现部分分离，使它们都可以独立地变化。其结构图如下所示。其中，客户程序（Client)使用的主要接口是Abstraction，它定义抽象类的接口，维护一个指向Implementor类型对象的指针（引用）；RefinedAbstraction扩充由Abstraction定义的接口；Implementor定义实现类的接口，该接口不一定要与Abstraction的接口完全一致;事实上这两个接口可以完全不同。一般来说，Implementor接口仅提供基本操作，而Abstraction定义了基于这些基本操作的较高层次的操作；Concretelmplementor实现Implementor接口并定义它的具体实现。本题描述简单超市销售系统在结账时在收银台（Checkout)采用人工（Manual)或自动（Auto)对购物车（Shopping_Cart)中的每个物品（Item)进行访问汇总价格后结账，所以适合采用访问者模式。题图所示的类图中，物品（Item)对应前述访问者模式结构图中的Element(元素），Checkout对应Visitor(访问者），所以Item定义以一个访问者为参数的accept操作，由子类实现此accept操作。访问者模式属于行为型对象模式，适用于：①一个对象结构包含很多类对象，它们有不同的接口，而用户想对这些对象实施一些依赖于其具体类的操作；②需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而又想要避免这些操作“污染”这些对象的类；③定义对象结构的类很少改变，但经常需要在此结构上定义新的操作。","analysis":"D"},{"product_id":"201811151131530069190","ans":"本题考查设计模式的基本概念。按照设计模式的目的可以分为创建型模式、结构型模式以及行为型模式三大类。结构型模式涉及如何组合类和对象以获得更大的结构，行为模式涉及算法和对象间职责的分配。桥接器模式属于结构型设计模式，观察者模式、访问者模式和策略模式均为行为设计模式。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式的主要意图是：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。此模式的结构图如下所示。其中，Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。访问者（Viskor)模式的主要意图是：表示一个作用于某对象结构中的各元素的操作。它允许在不改变各元素的类的前提下定义作用于这些元素的新操作。其结构图如下所示。其中，Visitor(访问者）为该对象结构中ConcreteElement的每一个类声明一个Visit操作。Element(元素）定义以一个访问者为参数的Accept操作。策略（Strategy)模式的主要意图是：定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化。其结构图如下所示。其中，Strategy(策略）定义所有支持的算法的公共接口。Context使用这个接口来调用某ConcreteStrategy定义的算法。Bridge(桥接）模式的主要意图是：将抽象部分与其实现部分分离，使它们都可以独立地变化。其结构图如下所示。其中，客户程序（Client)使用的主要接口是Abstraction，它定义抽象类的接口，维护一个指向Implementor类型对象的指针（引用）；RefinedAbstraction扩充由Abstraction定义的接口；Implementor定义实现类的接口，该接口不一定要与Abstraction的接口完全一致;事实上这两个接口可以完全不同。一般来说，Implementor接口仅提供基本操作，而Abstraction定义了基于这些基本操作的较高层次的操作；Concretelmplementor实现Implementor接口并定义它的具体实现。本题描述简单超市销售系统在结账时在收银台（Checkout)采用人工（Manual)或自动（Auto)对购物车（Shopping_Cart)中的每个物品（Item)进行访问汇总价格后结账，所以适合采用访问者模式。题图所示的类图中，物品（Item)对应前述访问者模式结构图中的Element(元素），Checkout对应Visitor(访问者），所以Item定义以一个访问者为参数的accept操作，由子类实现此accept操作。访问者模式属于行为型对象模式，适用于：①一个对象结构包含很多类对象，它们有不同的接口，而用户想对这些对象实施一些依赖于其具体类的操作；②需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而又想要避免这些操作“污染”这些对象的类；③定义对象结构的类很少改变，但经常需要在此结构上定义新的操作。","analysis":"C"},{"product_id":"201811151131530228661","ans":"本题考查计程序语言基础知识。在以阶段划分的编译器中，包括词法分析、语法分析、语义分析、中间代码生成、代码优化、目标代码生成等6个阶段，还涉及出错处理和符号表管理。其中，语法分析的任务是在词法分析的基础上，根据语言的语法规则将单词符号序列分解成各类语法单位，如“表达式”“语句”和“程序”等。语法规则就是各类语法单位的构成规则。通过语法分析确定整个输入串是否构成一个语法上正确的程序，对于语句而言，也就是分析语句的结构是否正确。","analysis":"B"},{"product_id":"201811151131530537890","ans":"本题考查程序语言基础知识。有限自动机识别字符串s的过程存在是从开始状态到接受状态的路径。对于0110，其识别路径为0->1->2->3->2->3->4->5，其中状态0到状态1的转移可识别出字符0,状态1转移到状态2识别空字符（即无需识别任何字符)，接下来从状态2到状态3转移可识别出字符1，从状态3到状态2的转移无须识别任何字符，再从状态2到状态3转移又识别出字符1，从状态3到状态4的转移无须识别任何字符，最后从状态4到状态5(接受状态）的转移识别出字符0,该过程中所识别的字符连接起来就是字符串0110。对于0101、1100、1010，则构造不出从状态0到状态5的识别路径。","analysis":"A"},{"product_id":"201811151131531005731","ans":"本题考査程序语言基础知识。在函数f中调用g时，其实参为a，引用调用方式下，g的形参x在函数g中可看作是f中a的别名，因此g执行时，其表达式“m=x*m”对应的计算为5*2赋值给m,m的值改为10,表达式“x=m-1”对应的计算为10-1赋值给X，x的值改为9(也就是f中a的值改为9)，g结束时返回x+m(即9+10)的值19。回到函数f后，c的值被改为调用函数g的结果19，f结束时a+c(即9+19)的结果28被返回。","analysis":"D"},{"product_id":"201811151131531167236","ans":"本题考查数据库的基本概念。数据库通常采用三级模式结构，其中：视图对应外模式、基本表对应模式、存储文件对应内模式。","analysis":"D"},{"product_id":"201811151131531479597","ans":"本题考查对分布式数据库基本概念的理解。逻辑透明（局部数据模型透明），是指用户或应用程序无须知道局部场地使用的是哪种数据模型。位置透明是指用户无须知道数据存放的物理位置。分片透明是指用户或应用程序无须知道逻辑上访问的表具体是怎么分块存储的。复制透明是指采用复制技术的分布方法，用户无须知道数据是复制到哪些节点，如何复制的。","analysis":"C"},{"product_id":"201811151131531631087","ans":"本题主要考查关系模式规范化方面的相关知识。根据函数依赖集F可知，属性A2和A5只出现在函数依赖的左部，故必为候选关键字属性，又因为A2A5可以决定关系R中的全部属性，故关系模式R的一个主键是A2A5。根据函数依赖集F可知，R中的每个非主属性完全函数依赖于A2A5，且该函数依赖集中存在传递依赖，所以R是2NF。","analysis":"B"},{"product_id":"201811151131531785306","ans":"本题主要考查关系模式规范化方面的相关知识。根据函数依赖集F可知，属性A2和A5只出现在函数依赖的左部，故必为候选关键字属性，又因为A2A5可以决定关系R中的全部属性，故关系模式R的一个主键是A2A5。根据函数依赖集F可知，R中的每个非主属性完全函数依赖于A2A5，且该函数依赖集中存在传递依赖，所以R是2NF。","analysis":"D"},{"product_id":"201811151131531946639","ans":"本题考查关系运算方面的基础知识。根据自然连接要求，两个关系中进行比较的分量必须是相同的属性组，并且在结果中将重复属性列S.C和S.D去掉，故R∞S后的属性列为R.A、R.B、R.C、R.D和S.E,即属性列数5。关系代数表达式的含义为：R∞S后选取第2个属性列等于第5个属性列的元组，即选取R.B等于与S.E的元组；然后再投影第1个属性列和第4个属性列，即投影R.A和R.D属性列。","analysis":"B"},{"product_id":"201811151131532257285","ans":"本题考查关系运算方面的基础知识。根据自然连接要求，两个关系中进行比较的分量必须是相同的属性组，并且在结果中将重复属性列S.C和S.D去掉，故R∞S后的属性列为R.A、R.B、R.C、R.D和S.E,即属性列数5。关系代数表达式的含义为：R∞S后选取第2个属性列等于第5个属性列的元组，即选取R.B等于与S.E的元组；然后再投影第1个属性列和第4个属性列，即投影R.A和R.D属性列。","analysis":"D"},{"product_id":"201811151131532416842","ans":"本题考查数据结构基础知识。线性表采用单链表存储的一般形式如下图所示，其中Head为头指针。栈被定义为只能在表尾（即栈顶）插入和删除运算的线性表。用单链表表示栈时，用top作为桟顶指针，如下图所示。入栈时令新元素所在结点的指针域取top的值，然后将top更新为指向新结点即可。出栈时，将top设置为指向其所指结点的后继结点（取其所指结点的指针域赋值给top即可）。这两种操作都在头指针所在的端点进行，无须遍历整个链表。","analysis":"A"},{"product_id":"201811151131532564669","ans":"本题考査数据结构基础知识。二叉树进行先序遍历的过程是首先访问根结点，接下来先序遍历左子树，最后再先序遍历右子树。显然，在先序遍历序列中，第一个元素表示根结点。二叉树进行中序遍历的过程是首先中序遍历左子树，然后访问根结点，最后再中序遍历右子树。一旦确定出根结点，就可以在中序遍历序列中搜索到根结点，从而以根结点为界，划分出左子树上的结点和右子树上的结点。之后再确定出左子树的先序序列和右子树的先序序列。对于左子树和右子树同理处理，就可以确定出每个子树的根结点，反复应用该方法，就可以确定出每个结点在二叉树中的位置。题图中的二叉树如下图所示，题中的4个选项中，只有“高度为4(即结点分布在4层上）\"的说法是正确的。","analysis":"B"},{"product_id":"201811151131532728203","ans":"本题考查数据结构基础知识。二叉排序树是通过依次输入数据元素并把它们插入到二叉树的适当位置构造起来的，具体的过程是：每读入一个元素，建立一个新结点。若二叉排序树非空，则将新结点的值与根结点的值相比较，如果小于根结点的值，则插入到左子树中，否则插入到右子树中；若二叉排序树为空，则新结点作为二叉排序树的根结点。按照二叉排序树的构造方式，具有父子关系的两个结点，在输入数据的序列中，一定是父结点的关键字在前，孩子结点的关键字在后。根据题图的二叉排序树，从根结点到每一个叶子结点形成输入数据需要满足的先后顺序关系序列，为：231710132317192340312723409165","analysis":"B"},{"product_id":"201811151131533193852","ans":"本题考査数据结构基础知识。图的邻接矩阵表示法是指用一个矩阵来表示图中顶点之间的关系。对于具有n个顶点的图G=(V，E),其邻接矩阵是一个n阶方阵，且满足：由邻接矩阵的定义可知，无向图的邻接矩阵是对称的，有向图的邻接矩阵则不一定对称。题图中的矩阵并不对称，因此选项A和C可排除。根据题图中的邻接矩阵，可得如下所示的图。强连通图是指图中任意两个顶点之间都存在路径的有向图，以顶点v4、v5为例，存在从v4到v5的路径，但是不存在v5到v4的路径，因此该图不是强连通图。从v0出发采用广度优先遍历的方式访问各顶点，过程如下：访问v0之后，接下来需访问v1和v2,这两者的访问顺序可交换。若先访问v1，则接下来需访问完v2,然后再访问v3和v4(这两者顺序可交换）。若先访问v2,则接下来需访问v1，然后访问v3，之后访问v4。最后访问的顶点是v5。","analysis":"B"},{"product_id":"201811151131533351589","ans":"本题考査数据结构基础知识。图的邻接矩阵表示法是指用一个矩阵来表示图中顶点之间的关系。对于具有n个顶点的图G=(V，E),其邻接矩阵是一个n阶方阵，且满足：由邻接矩阵的定义可知，无向图的邻接矩阵是对称的，有向图的邻接矩阵则不一定对称。题图中的矩阵并不对称，因此选项A和C可排除。根据题图中的邻接矩阵，可得如下所示的图。强连通图是指图中任意两个顶点之间都存在路径的有向图，以顶点v4、v5为例，存在从v4到v5的路径，但是不存在v5到v4的路径，因此该图不是强连通图。从v0出发采用广度优先遍历的方式访问各顶点，过程如下：访问v0之后，接下来需访问v1和v2,这两者的访问顺序可交换。若先访问v1，则接下来需访问完v2,然后再访问v3和v4(这两者顺序可交换）。若先访问v2,则接下来需访问v1，然后访问v3，之后访问v4。最后访问的顶点是v5。","analysis":"A"},{"product_id":"201811151131533507998","ans":"本题考查算法设计与分析的基础知识。根据题干描述，每次在未被覆盖的房子中选择最左端的房子，在其右侧20米处（覆盖范围）安装消防栓。这是典型的贪心策略求解问题的思路。因此算法设计采用的是贪心策略。在求解过程中，只需要遍历一次房子即可，因此算法的时间复杂度为O(n)。题干中的案例可以按如下图方式安装消防栓，黑点表示房子，圆圈表示消防栓的覆盖范围。由上图可见，安装5个消防栓就可以覆盖这10栋房子。该问题具有最优子结构，且具有贪心性质，因此用贪心算法求解可以得到一个最优解。问题可能存在多个不同的最优解，但是用贪心算法求解只能得到其中的一个最优解。","analysis":"C"},{"product_id":"201811151131533819776","ans":"本题考查算法设计与分析的基础知识。根据题干描述，每次在未被覆盖的房子中选择最左端的房子，在其右侧20米处（覆盖范围）安装消防栓。这是典型的贪心策略求解问题的思路。因此算法设计采用的是贪心策略。在求解过程中，只需要遍历一次房子即可，因此算法的时间复杂度为O(n)。题干中的案例可以按如下图方式安装消防栓，黑点表示房子，圆圈表示消防栓的覆盖范围。由上图可见，安装5个消防栓就可以覆盖这10栋房子。该问题具有最优子结构，且具有贪心性质，因此用贪心算法求解可以得到一个最优解。问题可能存在多个不同的最优解，但是用贪心算法求解只能得到其中的一个最优解。","analysis":"B"},{"product_id":"201811151131533979571","ans":"本题考查算法设计与分析的基础知识。根据题干描述，每次在未被覆盖的房子中选择最左端的房子，在其右侧20米处（覆盖范围）安装消防栓。这是典型的贪心策略求解问题的思路。因此算法设计采用的是贪心策略。在求解过程中，只需要遍历一次房子即可，因此算法的时间复杂度为O(n)。题干中的案例可以按如下图方式安装消防栓，黑点表示房子，圆圈表示消防栓的覆盖范围。由上图可见，安装5个消防栓就可以覆盖这10栋房子。该问题具有最优子结构，且具有贪心性质，因此用贪心算法求解可以得到一个最优解。问题可能存在多个不同的最优解，但是用贪心算法求解只能得到其中的一个最优解。","analysis":"B"},{"product_id":"201811151131534136657","ans":"本题考查算法设计与分析的基础知识。根据题干描述，每次在未被覆盖的房子中选择最左端的房子，在其右侧20米处（覆盖范围）安装消防栓。这是典型的贪心策略求解问题的思路。因此算法设计采用的是贪心策略。在求解过程中，只需要遍历一次房子即可，因此算法的时间复杂度为O(n)。题干中的案例可以按如下图方式安装消防栓，黑点表示房子，圆圈表示消防栓的覆盖范围。由上图可见，安装5个消防栓就可以覆盖这10栋房子。该问题具有最优子结构，且具有贪心性质，因此用贪心算法求解可以得到一个最优解。问题可能存在多个不同的最优解，但是用贪心算法求解只能得到其中的一个最优解。","analysis":"A"},{"product_id":"201811151131534441555","ans":"本题考查ADSL基础知识。使用ADSL接入Internet,用户端需要安装PPPoE协议。","analysis":"D"},{"product_id":"201811151131534914086","ans":"本题考查网络命令的基础知识。netstat命令的功能是显示网络连接、路由表和网络接口信息，可以让用户得知有哪些网络连接正在运作。使用时如果不带参数，netstat显示活动的TCP连接。nslookup(nameserverlookup,域名查询）是一个用于査询Internet域名信息或诊断DNS服务器问题的工具。ping是Windows、Unix和Linux系统下的一个命令。ping也属于一个通信协议，是TCP/IP协议的一部分。利用\"ping\"命令可以检査网络是否连通，可以很好地帮助我们分析和判定网络故障。tracert是路由跟踪实用程序，用于确定IP数据包访问目标所采取的路径。Tracert命令用IP生存时间（TTL)字段和ICMP错误消息来确定从一个主机到网络上其他主机的路由。根据以上分析，nslookup命令可用于诊断DNS的故障；ping命令可直接使用域名作为参数；tracert在跟踪数据包路径的过程中，亦可査看到对应地址的主机名，以上三个命令均可查看DNS的工作是否正常。","analysis":"A"},{"product_id":"201811151131535062110","ans":"本题考查TCP/IP协议簇和各协议的层次对应关系。选项A正确；选项B错在UDP、TCP协议下应为IP协议；选项C错在SMTP协议应封装在TCP协议中；选项D错在SMTP协议应封装在TCP协议中，UDP、TCP协议下应为IP协议。","analysis":"A"},{"product_id":"201811151131535227427","ans":"本题考查CSS样式表的基础知识。CSS(CascadingStyleSheets)层叠样式表，是一种用来表现HTML(标准通用标记语言的一个应用）或XML(标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。在HTML中使用CSS对文档元素进行格式化，有以下几种方式：①直接在DIV中使用CSS样式制作DIV+CSS网页。②html中使用style自带。③使用@import引用外部CSS文件。④使用link引用外部CSS文件推荐此方法。","analysis":"C"},{"product_id":"201811151131535858184","ans":"本题考查网管命令。使用ipconfig/all命令显示当前主机自动获取的IP地址；使用ipconfig/release命令释放当前主机自动获取的IP地址；使用ipconfig/renew命令重新申请IP地址。","analysis":"C"},{"product_id":"201811151131536008994","ans":"项目工作手册不是独立的一篇文档，它是对项目必须产出的一系列文档进行组织的一种结构。项目所有的文档都必须是该结构的一部分。这包括目的、外部规格说明、接口说明、技术标准、内部说明和管理备忘录。技术说明几乎是必不可少的。如果某人就硬件和软件的某部分去查看一系列相关的用户手册。他发现的不仅仅是思路，而且还有能追溯到最早备忘录的许多文字和章节，这辟备忘录对产品提出建议或者解释设计。对于技术作者而言，文章的剪裁粘贴与钢笔一样有用。基于上述理由，再加上“未来产品”的质量手册将诞生于“今天产品”的备忘录，所以正确的文档结构非常重要。事先将项目工作手册设计好，能保证文档的结构本身是规范的，而不是杂乱无章的。另外，有了文档结构，后来书写的文字就可以放置在合适的章节中。使用项目工作手册的第二个原因是控制信息发布。控制信息发布并不是为了限制信息，而是确保信息能到达所有需要它的人的手中。项目工作手册的第一步是对所有的备忘录编号，从而使每个工作人员可以通过标题列表来检索是否有他所需要的信息。还有一种更好的组织方法，就是使用树状的索引结构。而且如果需要的话，可以使用树结构中的子树来维护发布列表。","analysis":"A"},{"product_id":"201811151131536162728","ans":"项目工作手册不是独立的一篇文档，它是对项目必须产出的一系列文档进行组织的一种结构。项目所有的文档都必须是该结构的一部分。这包括目的、外部规格说明、接口说明、技术标准、内部说明和管理备忘录。技术说明几乎是必不可少的。如果某人就硬件和软件的某部分去查看一系列相关的用户手册。他发现的不仅仅是思路，而且还有能追溯到最早备忘录的许多文字和章节，这辟备忘录对产品提出建议或者解释设计。对于技术作者而言，文章的剪裁粘贴与钢笔一样有用。基于上述理由，再加上“未来产品”的质量手册将诞生于“今天产品”的备忘录，所以正确的文档结构非常重要。事先将项目工作手册设计好，能保证文档的结构本身是规范的，而不是杂乱无章的。另外，有了文档结构，后来书写的文字就可以放置在合适的章节中。使用项目工作手册的第二个原因是控制信息发布。控制信息发布并不是为了限制信息，而是确保信息能到达所有需要它的人的手中。项目工作手册的第一步是对所有的备忘录编号，从而使每个工作人员可以通过标题列表来检索是否有他所需要的信息。还有一种更好的组织方法，就是使用树状的索引结构。而且如果需要的话，可以使用树结构中的子树来维护发布列表。","analysis":"B"},{"product_id":"201811151131536471285","ans":"项目工作手册不是独立的一篇文档，它是对项目必须产出的一系列文档进行组织的一种结构。项目所有的文档都必须是该结构的一部分。这包括目的、外部规格说明、接口说明、技术标准、内部说明和管理备忘录。技术说明几乎是必不可少的。如果某人就硬件和软件的某部分去查看一系列相关的用户手册。他发现的不仅仅是思路，而且还有能追溯到最早备忘录的许多文字和章节，这辟备忘录对产品提出建议或者解释设计。对于技术作者而言，文章的剪裁粘贴与钢笔一样有用。基于上述理由，再加上“未来产品”的质量手册将诞生于“今天产品”的备忘录，所以正确的文档结构非常重要。事先将项目工作手册设计好，能保证文档的结构本身是规范的，而不是杂乱无章的。另外，有了文档结构，后来书写的文字就可以放置在合适的章节中。使用项目工作手册的第二个原因是控制信息发布。控制信息发布并不是为了限制信息，而是确保信息能到达所有需要它的人的手中。项目工作手册的第一步是对所有的备忘录编号，从而使每个工作人员可以通过标题列表来检索是否有他所需要的信息。还有一种更好的组织方法，就是使用树状的索引结构。而且如果需要的话，可以使用树结构中的子树来维护发布列表。","analysis":"C"},{"product_id":"201811151131536633065","ans":"项目工作手册不是独立的一篇文档，它是对项目必须产出的一系列文档进行组织的一种结构。项目所有的文档都必须是该结构的一部分。这包括目的、外部规格说明、接口说明、技术标准、内部说明和管理备忘录。技术说明几乎是必不可少的。如果某人就硬件和软件的某部分去查看一系列相关的用户手册。他发现的不仅仅是思路，而且还有能追溯到最早备忘录的许多文字和章节，这辟备忘录对产品提出建议或者解释设计。对于技术作者而言，文章的剪裁粘贴与钢笔一样有用。基于上述理由，再加上“未来产品”的质量手册将诞生于“今天产品”的备忘录，所以正确的文档结构非常重要。事先将项目工作手册设计好，能保证文档的结构本身是规范的，而不是杂乱无章的。另外，有了文档结构，后来书写的文字就可以放置在合适的章节中。使用项目工作手册的第二个原因是控制信息发布。控制信息发布并不是为了限制信息，而是确保信息能到达所有需要它的人的手中。项目工作手册的第一步是对所有的备忘录编号，从而使每个工作人员可以通过标题列表来检索是否有他所需要的信息。还有一种更好的组织方法，就是使用树状的索引结构。而且如果需要的话，可以使用树结构中的子树来维护发布列表。","analysis":"D"},{"product_id":"201811151131536784911","ans":"项目工作手册不是独立的一篇文档，它是对项目必须产出的一系列文档进行组织的一种结构。项目所有的文档都必须是该结构的一部分。这包括目的、外部规格说明、接口说明、技术标准、内部说明和管理备忘录。技术说明几乎是必不可少的。如果某人就硬件和软件的某部分去查看一系列相关的用户手册。他发现的不仅仅是思路，而且还有能追溯到最早备忘录的许多文字和章节，这辟备忘录对产品提出建议或者解释设计。对于技术作者而言，文章的剪裁粘贴与钢笔一样有用。基于上述理由，再加上“未来产品”的质量手册将诞生于“今天产品”的备忘录，所以正确的文档结构非常重要。事先将项目工作手册设计好，能保证文档的结构本身是规范的，而不是杂乱无章的。另外，有了文档结构，后来书写的文字就可以放置在合适的章节中。使用项目工作手册的第二个原因是控制信息发布。控制信息发布并不是为了限制信息，而是确保信息能到达所有需要它的人的手中。项目工作手册的第一步是对所有的备忘录编号，从而使每个工作人员可以通过标题列表来检索是否有他所需要的信息。还有一种更好的组织方法，就是使用树状的索引结构。而且如果需要的话，可以使用树结构中的子树来维护发布列表。","analysis":"C"}]},{"paperId":"553","field":"20181","question_list":[{"product_id":"201805311145366566039","ans":"本题考查数据结构基础知识。采用邻接矩阵存储时，对于每个顶点，都要扫描矩阵的一个行向量，以确定其邻接顶点有哪些，因此时间复杂度为O(n2)。","analysis":"A"},{"product_id":"201805311145369695333","ans":"本题考查数据表示和运算知识。浮点数的尾数和阶在表示时都规定了位数，而且尾数为纯小数，阶为纯整数。例如，若尾数为8位，阶为4位，设x的尾数为0.11010110、阶为0011，则表示数值0.11010110X23,也就是110.10110;设y的尾数为0.10101011，阶为0110，则表示0.10101011X26,即101010.11,那么x+y=110001.01110=0.11000101X26。两个浮点数进行相加或相减运算时，需要先对阶，也就是小数点对齐后进行运算。如果大阶向小阶对齐，以上面的y为例，则需要将其表示为101.01011X23,在尾数为纯小数的情况下，整数部分（权值高）的101会被丢弃，这在y的表示上造成较大的表示误差，相加运算后的结果误差也大。若是小阶向大阶对齐，则需将上例中的x表示为0.00011010110X26,则其中权值较低的末尾3位110会丢弃，相加运算后结果的误差也较小，所以对阶时令阶小的数向阶大的数对齐，方式为尾数向右移，也就是丢弃权值较低的位，在高位补0。","analysis":"D"},{"product_id":"201805311145369846368","ans":"本题考查计算机系统基础知识。中断是指处理机处理程序运行中出现的紧急事件的整个过程。程序运行过程中，系统外部、系统内部或者现行程序本身若出现紧急事件，处理机立即中止现行程序的运行，自动转入相应的处理程序（中断服务程序），待处理完后，再返回原来的程序运行，这整个过程称为程序中断。","analysis":"B"},{"product_id":"201805311145370311187","ans":"本题考查计算机系统基础知识。中断是指处理机处理程序运行中出现的紧急事件的整个过程。程序运行过程中，系统外部、系统内部或者现行程序本身若出现紧急事件，处理机立即中止现行程序的运行，自动转入相应的处理程序（中断服务程序），待处理完后，再返回原来的程序运行，这整个过程称为程序中断。","analysis":"C"},{"product_id":"201805311145372816715","ans":"本题考查计算机系统基础知识。海明码的构成方法是在数据位之间的特定位置上插入k个校验位，通过扩大码距来实现检错和纠错。设数据位是n位，校验位是k位，则n和k必须满足以下关系：2k-1≥n+k题中数据为32位，则k至少取6,才满足上述关系。海明码的编码规则如下。设k个校验位为Pk，Pk-1，……，P1，n个数据位为Dn-1，Dn-2，……，D1，D0，对应的海明码为Hn+k，Hn+k-1，……，H1，那么①Pi在海明码的第2i-1位置，即Hj=Pi，且j=2i-1，数据位则依序从低到高占据海明码中剩下的位置。②海明码中的任何一位都是由若干个校验位来校验的。其对应关系如下：被校验的海明位的下标等于所有参与校验该位的校验位的下标之和，而校验位由自身校验。题目中数据位D5由P4P2进行校验，因为D5自右至左数是第10位（10=8+2)，P4P2分别位于自右至左数的第8位和第2位。","analysis":"D"},{"product_id":"201805311145373129375","ans":"本题考查计算机系统基础知识。海明码的构成方法是在数据位之间的特定位置上插入k个校验位，通过扩大码距来实现检错和纠错。设数据位是n位，校验位是k位，则n和k必须满足以下关系：2k-1≥n+k题中数据为32位，则k至少取6,才满足上述关系。海明码的编码规则如下。设k个校验位为Pk，Pk-1，……，P1，n个数据位为Dn-1，Dn-2，……，D1，D0，对应的海明码为Hn+k，Hn+k-1，……，H1，那么①Pi在海明码的第2i-1位置，即Hj=Pi，且j=2i-1，数据位则依序从低到高占据海明码中剩下的位置。②海明码中的任何一位都是由若干个校验位来校验的。其对应关系如下：被校验的海明位的下标等于所有参与校验该位的校验位的下标之和，而校验位由自身校验。题目中数据位D5由P4P2进行校验，因为D5自右至左数是第10位（10=8+2)，P4P2分别位于自右至左数的第8位和第2位。","analysis":"B"},{"product_id":"201805311145373441719","ans":"本题考查计算机系统基础知识。吞吐率是指单位时间内流水线处理机流出的结果数。对指令而言，就是单位时间内执行的指令数。如果流水线的子过程所用时间不一样，则吞吐率p应为最长子过程的倒数，即","analysis":"C"},{"product_id":"201805311145373591757","ans":"本题考查M络管理时对路由器的基础操作。SSH是建立在应用层和传输层基础上的安全协议，SSH(SecureShell)服务使用tcp的22端口，客户端软件发起连接请求后从服务器接受公钥，协商加密方法，成功后所有的通信都经过加密。其他远程登录方式都不能保证远程管理过程中的信息泄露问题。","analysis":"D"},{"product_id":"201805311145373751318","ans":"本题考查数字签名方面的基础知识。数字签名与人们手写签名的作用一样，为通信的S、T双方提供服务，使得S向T发送签名消息P，以达到以下几个目的：①T可以验证消息P确实来源于S②S以后不能否认发送过P③T不能编造或者改变消息P基于公钥的数字签名技术，是通信的S、T双方，发送方S使用自己的私钥，对将所要发送的信息生成签名，接收方T使用S的公钥对信息进行解密验证，以确认消息确实是来源于发送方S。","analysis":"B"},{"product_id":"201805311145374065055","ans":"本题考查数字签名方面的基础知识。数字签名与人们手写签名的作用一样，为通信的S、T双方提供服务，使得S向T发送签名消息P，以达到以下几个目的：①T可以验证消息P确实来源于S②S以后不能否认发送过P③T不能编造或者改变消息P基于公钥的数字签名技术，是通信的S、T双方，发送方S使用自己的私钥，对将所要发送的信息生成签名，接收方T使用S的公钥对信息进行解密验证，以确认消息确实是来源于发送方S。","analysis":"A"},{"product_id":"201805311145374229014","ans":"本题考查校网络安全方面的基础知识。加强完善内部M络的安全要通过访问授权、安全策略、安全检査与行为审计等多种安全手段的综合应用来实现。终端接入数量与网络的规模、数据交换性能，出口带宽的相关性较大，不是内防内控关注的重点。","analysis":"D"},{"product_id":"201805311145374535101","ans":"本题目考查网络攻击的基础知识。重放攻击（ReplayAttacks)又称重播攻击、回放攻击，是指攻击者发送一个目的主机已接收过的包，来达到欺骗系统的目的，主要用于身份认证过程，破坏认证的正确性。重放攻击可以由发起者也可以由拦截并重发该数据的敌方进行。攻击者利用网络监听或者其他方式盗取认证凭据，之后再把它重新发给认证服务器。重放攻击在任何网络通信过程中都可能发生，是黑客常用的攻击方式之一。拒绝服务攻击即是攻击者想办法让目标机器停止提供服务，是黑客常用的攻击手段之一。其实对网络带宽进行的消耗性攻击只是拒绝服务攻击的一小部分，只要能够对目标造成麻烦，使某些服务被哲停甚至主机死机，都属于拒绝服务攻击。攻击者进行拒绝服务攻击，实际上让服务器实现两种效果：一是迫使服务器的缓冲区满，不接收新的请求；二是使用IP欺骗，迫使服务器把非法用户的连接复位，影响合法用户的连接。数据截获攻击也叫数据包截获攻击，是通过使用网络抓包技术，在局域网或者无线网络中，截获经过网络中的数据包，对其加以分析，以获取有价值信息的一种攻击方式。数据流分析攻击是一种被动攻击方式，攻击者通过对流经网络传输介质的数据流量的长期观察和分析，得出网络流量变化的规律，并综合外部的信息进行分析，以获取与之相关的情报信息。","analysis":"A"},{"product_id":"201805311145374693911","ans":"《计算机软件保护条例》第九条明确规定“软件著作权属于软件开发者”，即以软件开发的事实来确定著作权的归属，谁完成了计算机软件的开发工作，软件的著作权就归谁享有。根据《著作权法》和《计算机软件保护条例》的规定，计算机软件著作权的权利自软件开发完成之日起产生，保护期为50年。保护期满，除开发者身份权以外，其他权利终止。一旦计算机软件著作权超出保护期，软件就进入公有领域。","analysis":"C"},{"product_id":"201805311145374847401","ans":"根据提干所述，王某开发的软件属于职务软件作品，即在公司任职期间为执行本公司工作任务所开发的计算机软件作品。《计算机软件保护条例》第十三条做出了明确的规定，即公民在单位任职期间所开发的软件，如果是执行本职工作的结果，即针对本职工作中明确指定的开发目标所开发的，或者是从事本职工作活动所预见的结果或自然的结果；则该软件的著作权属于该单位。","analysis":"B"},{"product_id":"201805311145375157390","ans":"根据著作权法和《计算机软件保护条例》的规定，计算机软件著作权的权利自软件开发完成之日起产生，保护期为50年。保护期满，除幵发者身份权以外，其他权利终止。开发者身份权也称为署名权，是指作者为表明身份在软件作品中署自己名字的权利。署名可有多种形式，既可以署作者的姓名，也可以署作者的笔名，或者作者自愿不署名。对一部作品来说，通过署名即可对作者的身份给予确认。我国著作权法规定，如无相反证明，在作品上署名的公民、法人或非法人单位为作者。因此，作品的署名对确认著作权的主体具有重要意义。开发者的身份权不随软件开发者的消亡而丧失，且无时间限制。","analysis":"C"},{"product_id":"201805311145375315206","ans":"本题考查结构化分析与设计的相关知识。结构化分析的输出包括数据流图、数据字典和加工逻辑。其中数据字典用来描述DFD中的每个数据流、文件以及组成数据流或文件的数据项，包括4类条目：数据流、数据项、数据存储和基本加工。","analysis":"A"},{"product_id":"201805311145375473386","ans":"本题考查结构化分析与设计的相关知识。数据流图是结构化分析中的重要模型，数据流图模型本身没有对加工过程的描述，需要用结构化语言、判定表和判定树等方法描述。对具有多个条件和动作的加工，判定表和判定树是一种很好的描述方法。构造判定表的步骤主要包括：（1）列出与一个具体过程（或模块）有关的所有处理；（2）列出过程执行期间的所有条件（或所有判断)；（3）将特定条件取值组合与特定的处理相匹配，消去不可能发生的条件取值组合；（4）将右部每一纵列规定为一个处理规则，即对于某一条件取值组合将有什么动作。对于本题，根据上述步骤，可以构造如下的判定表。","analysis":"B"},{"product_id":"201805311145375788402","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-B-C-E-F-I-K-L和A-B-D-G-I-K-L,其长度为22天。假设活动AB的最早开始时间是从第1天开始，则活动EH的最早开始时间是第8天开始，最晚开始时间为第13天，因此松弛时间为5天。活动IJ的最早开始时间从第16天开始，最晚开始时间为19,因此松弛时间为3天。","analysis":"D"},{"product_id":"201805311145376258746","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-B-C-E-F-I-K-L和A-B-D-G-I-K-L,其长度为22天。假设活动AB的最早开始时间是从第1天开始，则活动EH的最早开始时间是第8天开始，最晚开始时间为第13天，因此松弛时间为5天。活动IJ的最早开始时间从第16天开始，最晚开始时间为19,因此松弛时间为3天。","analysis":"C"},{"product_id":"201805311145376723339","ans":"本题考查项目管理中工作量估算的相关知识。COCOMOII模型是一种重要的工作量估算模型，根据项目的阶段估算工作量。在应用组成分析阶段，采用原型化方法解决高风险用户界面相关问题，估算基于对象点进行；在早期设计阶段，探索可用的体系结构和概念，估算基于功能点进行；在后期体系结构阶段，开发工作已经开始，此时基于代码行进行估算。","analysis":"C"},{"product_id":"201805311145376871319","ans":"本题考査程序语言分类知识。采用不同类型的程序语言进行程序开发涉及不同的程序思维和开发方法。题目中所列举的程序语言中，Lisp是函数式编程语言，Prolog是逻辑式程序语言，Python支持过程式编程也支持面向对象编程，Java/C++是面向对象的编程语言。","analysis":"A"},{"product_id":"201805311145377039733","ans":"本题考查程序语言基础知识。在编译方式下，机器上运行的是与源程序等价的目标程序，源程序和编译程序都不再参与目标程序的执行过程；而在解释方式下，解释程序和源程序（或其某种等价表示）要参与到程序的运行过程中，运行程序的控制权在解释程序。简单来说，在解释方式下，翻译源程序时不生成独立的目标程序,而编译器则将源程序翻译成独立保存的目标程序。","analysis":"C"},{"product_id":"201805311145377194355","ans":"本题考查程序语言基础知识。后缀表达式的求值方式如下：从左向右扫描，若读到运算数，则压栈，若读到运算符，则从桟顶弹出运算数进行运算，结果再压栈，重复上述过程，直到表达式结束，运算结果就暂存在栈顶。对于题目中的后缀表达式，第一步运算是bc，第二步是相加，即a+(b-c)，第二步是相乘，即(a+(b-c))*d。选项A的二叉树表示运算((a-b)+c)*d。选项B的二叉树表示运算(a+(b~c))*d。选项C的二叉树表示运算(a+b)*(c-d)。选项D的二叉树表示运算a*(b+(c-d))。","analysis":"B"},{"product_id":"201805311145377506677","ans":"本题考査PV操作方面的基本知识。公共数据单元Tj是一个临界资源，最多允许1个终端进程使用，因此需要设置一个互斥信号量S，初值等于1。进入临界区时执行P操作，退出临界区时执行V操作。","analysis":"C"},{"product_id":"201805311145377817602","ans":"本题考査PV操作方面的基本知识。公共数据单元Tj是一个临界资源，最多允许1个终端进程使用，因此需要设置一个互斥信号量S，初值等于1。进入临界区时执行P操作，退出临界区时执行V操作。","analysis":"D"},{"product_id":"201805311145377971598","ans":"本题考查操作系统文件管理可靠性方面的基础知识。影响文件系统可靠性因素之一是文件系统的一致性问题。很多文件系统是先读取磁盘块到主存，在主存进行修改，修改完毕再写回磁盘。如果读取某磁盘块进行修改后再将信息写回磁盘前系统崩溃，则文件系统就可能会出现不一致状态。如果这些未被写回的磁盘块是索引节点块、目录块或空闲块，特别是系统目录文件那么对系统的影响相对较大，且后果也是不堪设想的。通常解决方案是采用文件系统的一致性检査，一致性检查包括块的一致性检査和文件的一致性检查。","analysis":"A"},{"product_id":"201805311145378125057","ans":"I/O设备管理软件一般分为4层：中断处理程序、设备驱动程序、与设备无关的系统软件和用户级软件。I/O软件的所有层次及每一层的主要功能如图所示。I/O系统具体分层时细节上的处理，是依赖于系统的，没有严格的划分，只要有利于设备独立这一目标，可以为了提高效率而设计不同的层次结构。上图中的箭头给出了I/O部分的控制流。这里举一个读硬盘文件的例子。当用户程序试图读一个硬盘文件时，需要通过操作系统实现这一操作。与设备无关软件检査高速缓存中有无要读的数据块。若没有，则调用设备驱动程序，向I/O硬件发出一个请求。然后，用户进程阻塞并等待磁盘操作的完成。当磁盘操作完成时，硬件产生一个中断，转入中断处理程序。中断处理程序检查中断的原因，认识到这时磁盘读取操作已经完成，于是唤醒用户进程取回从磁盘读取的信息，从而结束此次I/O请求。用户进程在得到了所需的硬盘文件内容之后继续运行。","analysis":"D"},{"product_id":"201805311145378443213","ans":"本题考查对操作系统文件管理方面的基础知识。路径名是指操作系统查找文件所经过的目录名以及目录名之间的分隔符构成的。通常，操作系统中全文件名是指路径名+文件名。按查找文件的起点不同可以将路径分为：绝对路径和相对路径。从根目录开始的路径称为绝对路径；从用户当前工作目录开始的路径称为相对路径，相对路径是随着当前工作目录的变化而改变的。","analysis":"C"},{"product_id":"201805311145378599878","ans":"本题考查对操作系统文件管理方面的基础知识。路径名是指操作系统查找文件所经过的目录名以及目录名之间的分隔符构成的。通常，操作系统中全文件名是指路径名+文件名。按查找文件的起点不同可以将路径分为：绝对路径和相对路径。从根目录开始的路径称为绝对路径；从用户当前工作目录开始的路径称为相对路径，相对路径是随着当前工作目录的变化而改变的。","analysis":"B"},{"product_id":"201805311145379066538","ans":"本题考査软件过程模型的相关知识。瀑布模型、原型化模型、增量或迭代的阶段化开发、螺旋模型等都是典型的软件过程模型，要求考生掌握这些模型的优缺点以及适用的场合。增量模型融合了瀑布模型的基本成分和原型实现的迭代特征，它假设可以将需求划分为一系列增量产品，每一增量可以分别地开发。增量模型具有一些很好的特点，该过程将需求分为增量产品，每个增量相对整个系统而言容易理解，管理成本低。另外，在开发过程中，核心产品的优先级高，往往在前面的增量中首先开发，因此很早就被用户使用，其中的问题也可以尽早暴露和修改。而且，增量开发模型中，第一个可交付版本可以很快交付，符合现在软件尽快投入市场的需求。但是增量开发模型本身并没有专门策略处理需求不清晰的问题。","analysis":"D"},{"product_id":"201805311145379227121","ans":"本题考查软件过程改进的相关知识。CMMI的连续式模型如下所述。CL0(未完成的）：过程域未执行或未得到CL1中定义的所有目标。CL1(已执行的）：其共性目标是过程将可标识的输入工作产品转换成可标识的输出工作产品，以实现支持过程域的特定目标。CL2(已管理的）：其共性目标集中于已管理的过程的制度化。根据组织级政策规定过程的运作将使用哪个过程，项目遵循已文档化的计划和过程描述，所有正在工作的人都有权使用足够的资源，所有工作任务和工作产品都被监控、控制和评审。CL3(已定义级的）：其共性目标集中于已定义的过程的制度化。过程是按照组织的剪裁指南从组织的标准过程集中剪裁得到的，还必须收集过程资产和过程的度量，并用于将来对过程的改进上。CL4(定量管理的）：其共性目标集中于可定量管理的过程的制度化。使用测量和质量保证来控制和改进过程域，建立和使用关于质量和过程执行的定量目标作为管理准则。CL5(优化的）：使用量化（统计学）手段改变和优化过程域，以对付客户要求的改变和持续改进计划中的过程域的功效。","analysis":"A"},{"product_id":"201805311145379373652","ans":"本题考査软件开发和维护的基础知识。软件开发和维护过程中涉及种类繁多的工具，可以分为软件开发工具、软件维护供具、软件管理和支持工具等。其中软件维护工具包括版本控制工具、文档分析工具、开发信息库工具、逆向工程工具和在再工程工具。","analysis":"B"},{"product_id":"201805311145379693689","ans":"本题考查软件设计的相关知识。软件设计一般包括两个阶段，即概要设计和详细设计。概要设计主耍进行软件体系结构设计，逻辑数据结构设计，数据库设计和模块之间的接口设计。而详细设计主要进行模块内部的数据结构和算法的设计。","analysis":"C"},{"product_id":"201805311145379842687","ans":"本题考査软件设计的相关知识。耦合和内聚是衡请模块独立性的重要方法，其中耦合是模块之间的相对独立性（凡相连接的紧密程度）的度量。耦合取决于各个模块之间接口的复杂程度、调用模块的方式以及通过接口的信息类型等。而模块的内聚类型则与模块内各部分功能之间的关系有关。","analysis":"D"},{"product_id":"201805311145380153800","ans":"本题考査软件测试的相关知识，要求考生能够熟练掌握典型的白盒测试和黑盒测试方法。判定覆盖就是设计若干个测试用例，运行被测程序，使得程序中每个判断的取真分支和取假分支至少运行一次。该流程图中：设计2个测试用例执行路径：①②③④⑦⑧⑨⑩;①②③⑤⑦⑥③或者①②③④⑦⑥③;①②③⑤⑦⑧⑨⑩即可满足判定覆盖。因此至少2个测试用例就可以满足判定覆盖。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V(G)=m-n+2,图中m=11,n=10,V(G)=11-10+2=3。","analysis":"A"},{"product_id":"201805311145380473753","ans":"本题考査软件测试的相关知识，要求考生能够熟练掌握典型的白盒测试和黑盒测试方法。判定覆盖就是设计若干个测试用例，运行被测程序，使得程序中每个判断的取真分支和取假分支至少运行一次。该流程图中：设计2个测试用例执行路径：①②③④⑦⑧⑨⑩;①②③⑤⑦⑥③或者①②③④⑦⑥③;①②③⑤⑦⑧⑨⑩即可满足判定覆盖。因此至少2个测试用例就可以满足判定覆盖。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V(G)=m-n+2,图中m=11,n=10,V(G)=11-10+2=3。","analysis":"B"},{"product_id":"201805311145380623561","ans":"本题考查软件调试的相关知识。目前常用的调试方法有如下几种。（1）试探法。根据错误的特点，猜测问题的所在位置，利用在程序中设置输出语句，分析寄存器、存储器的内容等手段来获得错误的线索，一步步地试探和分析出错误所在。（2）回溯法。从发现错误症状的位置开始，人工沿着程序的控制流积往回跟踪代码，直到找出错误根源为止。（3）对分查找法。在该方法中，如果已经知道程序中的变量在若干位置的正确取值，可以在这些位置上给这些变量以正确值，观察程序运行输出结果，如果没有发现问题，则说明从赋予变量一个正确值到输出结果之间的程序没有错误，问题可能在除此之外的程序中。否则，错误就在所考察的这部分程序中，对含有错误的程序段再使用这种方法，直到把故障范围缩小到比较容易诊断为止。（4）归纳法。从测试所暴露的问题出发，收集所有正确或不正确的数据，分析它们之间的关系，提出假想的错误原因，用这些数据来证明或反驳，从而查出错误所在。（5）演绎法。根据测试结果，列出所有可能的错误原因。分析已有的数据，排除不可能和彼此矛盾的原因。对其余的原因，选择可能性最大的，利用已有的数据完善该假设，使假设更具体。用假设来解释所有的原始测试结果，如果能解释这一切，则假设得以证实，也就找出错误；否则，要么是假设不完备或不成立，要么有多个错误同时存在，需要重新分析，提出新的假设，直到发现错误为止。","analysis":"C"},{"product_id":"201805311145380947929","ans":"本题考查面向对象的基本知识。在面向对象方法中，对象是基本的运行时实体，它既包括数据（属性），也包括作用于数据的操作（行为），即一个对象把属性和行为封装为一个整体。这一封装使得对象的使用者和生产者分离，对象的使用者需要使用对象中的属性和方法时，需要通过对象来进行。一个对象通常可由对象名、属性和方法3个部分组成。所有属性以及属性的当前值表示了对象所处的状态，而这些属性只能通过对象提供的方法来改变。","analysis":"A"},{"product_id":"201805311145381097179","ans":"本题考查面向对象的基本知识。消息是对象之间进行通信的一种构造。消息传递是对象之间的通信机制，即-个消息发送给某个对象时，包含要求接收对象去执行某些活动的信息。接收到信息的对象经过解释，然后予以响应。类型检查指验证操作接收的是否为合适的类型数据以及赋值是否合乎类型要求。把过程调用和响应调用所需执行的代码加以结合的过程称为绑定。在一般的程序设计语言中，绑定是在编译时进行的，叫作静态绑定。在运行时进行绑定的则称为动态绑定，即-个给定的过程调用和响应调用所需执行的代码直到运行时加以才结合。","analysis":"D"},{"product_id":"201805311145381258715","ans":"本题考查面向对象的基本知识。消息是对象之间进行通信的一种构造。消息传递是对象之间的通信机制，即-个消息发送给某个对象时，包含要求接收对象去执行某些活动的信息。接收到信息的对象经过解释，然后予以响应。类型检查指验证操作接收的是否为合适的类型数据以及赋值是否合乎类型要求。把过程调用和响应调用所需执行的代码加以结合的过程称为绑定。在一般的程序设计语言中，绑定是在编译时进行的，叫作静态绑定。在运行时进行绑定的则称为动态绑定，即-个给定的过程调用和响应调用所需执行的代码直到运行时加以才结合。","analysis":"C"},{"product_id":"201805311145381406490","ans":"本题考查面向对象的基本知识。在面向对象系统中，对象之间通过消息进行通信。在收到消息时，对象要予以响应。利用类继承的层次关系，把具有通用功能的消息存放在高层次，而这些放在较低层次的不同类来具体实现这一功能的行为。这样，用户可以发送同一通用的消息调用这些不同类的对象的方法，这些不同类的对象收到同一消息就可以产生完全不同的结果，这一现象称为多态（polymorphism)。映射是计算机领域中经常使用的概念，如电子电路中对电平的01映射，键值之间的映射，对象关系之间的映射。类型转换是当参与运算的操作数类型不同时，需要将操作数转换为所需要的类型。","analysis":"D"},{"product_id":"201805311145381564295","ans":"本题考查统一建模语言（UML)的基本知识。UML类图、组件图和部署图刻画系统的静态方面。类图展现了一组对象、接口、协作及其之间的关系。组件图展现了一组构件之间的组织和依赖。部署图（deploymentdiagram)是用来对面向对象系统的物理方面建模的方法，展现了运行时处理结点以及其中构件（制品）的配置。UML通信图是交互图的一种，刻画系统的动态交互方面，强调参与交互（收发消息）的对象的结构组织。通信图中，参加交互的对象作为图的顶点，连接这些对象的链表示为图的弧，用对象发送和接收的消息来修饰这些链。通信图有路径，能够体现出控制流的清晰的可视化轨迹。通信图还有顺序号，顺序号是为表示一个消息的时间顺序而给消息加的一个前缀。控制流中每个新消息的顺序号单调增加，如1、2、3等，嵌套消息采用带点的序号标号，如表示嵌套在消息1中的第一个消息1.1，第二个消息1.2等。如下图所示即为通信图的应用实例。所有顶点表示导航系统中参与交互的对象，连接这些对象之间的链表示对象之间的组织关系，以及对象之间交互的消息流及其顺序关系。消息采用带箭头的连线加上消息本身及其表示时间顺序的序号来表示，附着在链旁，如表示由UI对象发送给Mapping对象的第2条消息getCarPos()，用以获取汽车位置，而Mapping对象获取汽车当前位置(GPSLocation)的嵌套消息getCarLocation()加上嵌套消息序号标识为2.1:getCarL0cati0n()。沿同一个链可以显示多条消息，并且每个消息都有唯一的一个顺序号，如UI和Mapping对象之间1:getGraphic()和2:getCarPos()。","analysis":"C"},{"product_id":"201805311145381871203","ans":"本题考查统一建模语言（UML)的基本知识。UML类图、组件图和部署图刻画系统的静态方面。类图展现了一组对象、接口、协作及其之间的关系。组件图展现了一组构件之间的组织和依赖。部署图（deploymentdiagram)是用来对面向对象系统的物理方面建模的方法，展现了运行时处理结点以及其中构件（制品）的配置。UML通信图是交互图的一种，刻画系统的动态交互方面，强调参与交互（收发消息）的对象的结构组织。通信图中，参加交互的对象作为图的顶点，连接这些对象的链表示为图的弧，用对象发送和接收的消息来修饰这些链。通信图有路径，能够体现出控制流的清晰的可视化轨迹。通信图还有顺序号，顺序号是为表示一个消息的时间顺序而给消息加的一个前缀。控制流中每个新消息的顺序号单调增加，如1、2、3等，嵌套消息采用带点的序号标号，如表示嵌套在消息1中的第一个消息1.1，第二个消息1.2等。如下图所示即为通信图的应用实例。所有顶点表示导航系统中参与交互的对象，连接这些对象之间的链表示对象之间的组织关系，以及对象之间交互的消息流及其顺序关系。消息采用带箭头的连线加上消息本身及其表示时间顺序的序号来表示，附着在链旁，如表示由UI对象发送给Mapping对象的第2条消息getCarPos()，用以获取汽车位置，而Mapping对象获取汽车当前位置(GPSLocation)的嵌套消息getCarLocation()加上嵌套消息序号标识为2.1:getCarL0cati0n()。沿同一个链可以显示多条消息，并且每个消息都有唯一的一个顺序号，如UI和Mapping对象之间1:getGraphic()和2:getCarPos()。","analysis":"A"},{"product_id":"201805311145382036691","ans":"本题考查统一建模语言（UML)的基本知识。UML类图、组件图和部署图刻画系统的静态方面。类图展现了一组对象、接口、协作及其之间的关系。组件图展现了一组构件之间的组织和依赖。部署图（deploymentdiagram)是用来对面向对象系统的物理方面建模的方法，展现了运行时处理结点以及其中构件（制品）的配置。UML通信图是交互图的一种，刻画系统的动态交互方面，强调参与交互（收发消息）的对象的结构组织。通信图中，参加交互的对象作为图的顶点，连接这些对象的链表示为图的弧，用对象发送和接收的消息来修饰这些链。通信图有路径，能够体现出控制流的清晰的可视化轨迹。通信图还有顺序号，顺序号是为表示一个消息的时间顺序而给消息加的一个前缀。控制流中每个新消息的顺序号单调增加，如1、2、3等，嵌套消息采用带点的序号标号，如表示嵌套在消息1中的第一个消息1.1，第二个消息1.2等。如下图所示即为通信图的应用实例。所有顶点表示导航系统中参与交互的对象，连接这些对象之间的链表示对象之间的组织关系，以及对象之间交互的消息流及其顺序关系。消息采用带箭头的连线加上消息本身及其表示时间顺序的序号来表示，附着在链旁，如表示由UI对象发送给Mapping对象的第2条消息getCarPos()，用以获取汽车位置，而Mapping对象获取汽车当前位置(GPSLocation)的嵌套消息getCarLocation()加上嵌套消息序号标识为2.1:getCarL0cati0n()。沿同一个链可以显示多条消息，并且每个消息都有唯一的一个顺序号，如UI和Mapping对象之间1:getGraphic()和2:getCarPos()。","analysis":"D"},{"product_id":"201805311145382193239","ans":"本题考查设计模式的基本知识。按照设计模式的目的可以分为创建新模式、结构型模式以及行为型模式三大类。创建型模式与对象的创建有关；结构型模式处理类或对象的组合以获得更大的结构；行为型模式对类或对象怎样交互和怎样分配职责进行描述。观察者模式、策略模式和访问者模式均为行为设计模式。桥接模式是结构型对象模式。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式的主要意图是：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。此模式的结构图如下所示。其中，Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。策略（Strategy)模式的主要意图是：定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化。其结构如下图所示。其中，Strategy(策略）定义所有支持的算法的公共接口。Context使用这个接口来调用某ConcreteStrategy定义的算法。访问者（Visitor)模式的主要意图是：表示一个作用于某对象结构中的各元素的操作。它允许在不改变各元素的类的前提下定义作用于这些元素的新操作。其结构图如下所示。其中，Visitor(访问者）为该对象结构中ConcreteElement的每一个类声明一个Visit操作。Element(元素）定义以一个访问者为参数的Accept操作。Bridge(桥接）模式的主要意图是：将抽象部分与其实现部分分离，使它们都可以独立地变化，其结构图如下所示。其中，客户程序（Client)使用的主要接口是Abstraction，它定义抽象类的接口，维护一个指向implementor类型对象的指针(引用）;RefinedAbstraction扩充由Abstraction定义的接口；Implementor定义实现类的接口，该接口不一定要与Abstraction的接口完全一致；事实上这两个接口可以完全不同。一般来说，Implementor接口仅提供基本操作，而Abstraction定义了基于这些基本操作的较高层次的操作；Concretelmplementor实现Implementor接口并定义它的具体实现。本题描述创建一个Web应用框架并可以为每个Web应用创建不同的主题样式适合采用桥接模式，属于结构型对象模式。题图中，Web应用框架（WebApplication)对应Abstraction抽象类接口，是客户程序使用的主要接口，并维护对Theme(对应Implementor)定义主题实现类的接口，由Light和Dark具体实现类实现。Blog、Store和NewsSite对应RefinedAbstraction，扩充由Abstraction定义的接口。","analysis":"D"},{"product_id":"201805311145382343923","ans":"本题考查设计模式的基本知识。按照设计模式的目的可以分为创建新模式、结构型模式以及行为型模式三大类。创建型模式与对象的创建有关；结构型模式处理类或对象的组合以获得更大的结构；行为型模式对类或对象怎样交互和怎样分配职责进行描述。观察者模式、策略模式和访问者模式均为行为设计模式。桥接模式是结构型对象模式。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式的主要意图是：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。此模式的结构图如下所示。其中，Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。策略（Strategy)模式的主要意图是：定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化。其结构如下图所示。其中，Strategy(策略）定义所有支持的算法的公共接口。Context使用这个接口来调用某ConcreteStrategy定义的算法。访问者（Visitor)模式的主要意图是：表示一个作用于某对象结构中的各元素的操作。它允许在不改变各元素的类的前提下定义作用于这些元素的新操作。其结构图如下所示。其中，Visitor(访问者）为该对象结构中ConcreteElement的每一个类声明一个Visit操作。Element(元素）定义以一个访问者为参数的Accept操作。Bridge(桥接）模式的主要意图是：将抽象部分与其实现部分分离，使它们都可以独立地变化，其结构图如下所示。其中，客户程序（Client)使用的主要接口是Abstraction，它定义抽象类的接口，维护一个指向implementor类型对象的指针(引用）;RefinedAbstraction扩充由Abstraction定义的接口；Implementor定义实现类的接口，该接口不一定要与Abstraction的接口完全一致；事实上这两个接口可以完全不同。一般来说，Implementor接口仅提供基本操作，而Abstraction定义了基于这些基本操作的较高层次的操作；Concretelmplementor实现Implementor接口并定义它的具体实现。本题描述创建一个Web应用框架并可以为每个Web应用创建不同的主题样式适合采用桥接模式，属于结构型对象模式。题图中，Web应用框架（WebApplication)对应Abstraction抽象类接口，是客户程序使用的主要接口，并维护对Theme(对应Implementor)定义主题实现类的接口，由Light和Dark具体实现类实现。Blog、Store和NewsSite对应RefinedAbstraction，扩充由Abstraction定义的接口。","analysis":"A"},{"product_id":"201805311145382658880","ans":"本题考查设计模式的基本知识。按照设计模式的目的可以分为创建新模式、结构型模式以及行为型模式三大类。创建型模式与对象的创建有关；结构型模式处理类或对象的组合以获得更大的结构；行为型模式对类或对象怎样交互和怎样分配职责进行描述。观察者模式、策略模式和访问者模式均为行为设计模式。桥接模式是结构型对象模式。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式的主要意图是：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。此模式的结构图如下所示。其中，Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。策略（Strategy)模式的主要意图是：定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化。其结构如下图所示。其中，Strategy(策略）定义所有支持的算法的公共接口。Context使用这个接口来调用某ConcreteStrategy定义的算法。访问者（Visitor)模式的主要意图是：表示一个作用于某对象结构中的各元素的操作。它允许在不改变各元素的类的前提下定义作用于这些元素的新操作。其结构图如下所示。其中，Visitor(访问者）为该对象结构中ConcreteElement的每一个类声明一个Visit操作。Element(元素）定义以一个访问者为参数的Accept操作。Bridge(桥接）模式的主要意图是：将抽象部分与其实现部分分离，使它们都可以独立地变化，其结构图如下所示。其中，客户程序（Client)使用的主要接口是Abstraction，它定义抽象类的接口，维护一个指向implementor类型对象的指针(引用）;RefinedAbstraction扩充由Abstraction定义的接口；Implementor定义实现类的接口，该接口不一定要与Abstraction的接口完全一致；事实上这两个接口可以完全不同。一般来说，Implementor接口仅提供基本操作，而Abstraction定义了基于这些基本操作的较高层次的操作；Concretelmplementor实现Implementor接口并定义它的具体实现。本题描述创建一个Web应用框架并可以为每个Web应用创建不同的主题样式适合采用桥接模式，属于结构型对象模式。题图中，Web应用框架（WebApplication)对应Abstraction抽象类接口，是客户程序使用的主要接口，并维护对Theme(对应Implementor)定义主题实现类的接口，由Light和Dark具体实现类实现。Blog、Store和NewsSite对应RefinedAbstraction，扩充由Abstraction定义的接口。","analysis":"B"},{"product_id":"201805311145382974689","ans":"本题考查设计模式的基本知识。按照设计模式的目的可以分为创建新模式、结构型模式以及行为型模式三大类。创建型模式与对象的创建有关；结构型模式处理类或对象的组合以获得更大的结构；行为型模式对类或对象怎样交互和怎样分配职责进行描述。观察者模式、策略模式和访问者模式均为行为设计模式。桥接模式是结构型对象模式。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式的主要意图是：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。此模式的结构图如下所示。其中，Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。策略（Strategy)模式的主要意图是：定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化。其结构如下图所示。其中，Strategy(策略）定义所有支持的算法的公共接口。Context使用这个接口来调用某ConcreteStrategy定义的算法。访问者（Visitor)模式的主要意图是：表示一个作用于某对象结构中的各元素的操作。它允许在不改变各元素的类的前提下定义作用于这些元素的新操作。其结构图如下所示。其中，Visitor(访问者）为该对象结构中ConcreteElement的每一个类声明一个Visit操作。Element(元素）定义以一个访问者为参数的Accept操作。Bridge(桥接）模式的主要意图是：将抽象部分与其实现部分分离，使它们都可以独立地变化，其结构图如下所示。其中，客户程序（Client)使用的主要接口是Abstraction，它定义抽象类的接口，维护一个指向implementor类型对象的指针(引用）;RefinedAbstraction扩充由Abstraction定义的接口；Implementor定义实现类的接口，该接口不一定要与Abstraction的接口完全一致；事实上这两个接口可以完全不同。一般来说，Implementor接口仅提供基本操作，而Abstraction定义了基于这些基本操作的较高层次的操作；Concretelmplementor实现Implementor接口并定义它的具体实现。本题描述创建一个Web应用框架并可以为每个Web应用创建不同的主题样式适合采用桥接模式，属于结构型对象模式。题图中，Web应用框架（WebApplication)对应Abstraction抽象类接口，是客户程序使用的主要接口，并维护对Theme(对应Implementor)定义主题实现类的接口，由Light和Dark具体实现类实现。Blog、Store和NewsSite对应RefinedAbstraction，扩充由Abstraction定义的接口。","analysis":"A"},{"product_id":"201805311145383122554","ans":"本题考查程序语言基础知识。对于∑中的任何字符串ω，若存在一条从初态到某一终止状态的路径，且这条路径上所有弧的标记符连接成的字符串等于ω，则称ω可由NFAM识别（接受或读出）。若一个NFAM的初态结点同时又是终态结点，则空字ε可由该NFA识别（或接受)。题中NFA弧上标记的字符为a、b以及ε，该NFA的∑={a,b}。从初态0到达终态5的路径主要有两条：一条是0->1->4->5，所标识的字符串为aa;另一条是0->1->2->3->4->5，所标识的字符串为aba。其中，2->3可重复，每重复1次就多1个a。综合来看，从初态0到终态5的所有路径的表示字符串都是以一个a开头和结尾中间含有若干个b(可以是0个），因此对应的正规式为ab*a。","analysis":"A"},{"product_id":"201805311145383286569","ans":"本题考查程序语言基础知识。可以文法起始符号推导出的句子就是符合该文发的。推导是从文法的开始符号出发，用产生式右部的文法符号进行替换的过程。用最左推导方式推出2+-3*4的过程如下：E=>E+T=>T+T=>F+T=>2+T=>2+T*F=>2+F*F=>2+-F*F=>2+-3*F=>2+-3*4由于文法中没有二元的运算，所以推导不出2--3*4、2*4-3,文法中也没有括号，所以推导不出(2+3)*4。","analysis":"B"},{"product_id":"201805311145383444560","ans":"本题考查程序语言基础知识。程序语言翻译过程中，词法分析和语法分析都是对程序的结构进行分析，有相应的算法，而语义分析比较复杂。语法分析分为自上而下和自下而上两类分析方法，递归下降分析法和预测分析法属于自上而下的分析方法，算符优先分析法和LR分析法属于自下而上的语法分析方法。有多种语义分析方法，语法制导翻译是一种静态语义分析方法(编译过程中的语义分析都是静态语义，运行时才有动态语义）。","analysis":"C"},{"product_id":"201805311145383753400","ans":"从已知的一些函数依赖，可以推导出另外一些函数依赖，这就需要一系列推理规则。函数依赖的推理规则最早出现在1974年W.W.Armstrong的论文里，这些规则常被称作“Armstrong公理”。设U是关系模式R的属性集，F是R上成立的只涉及U中属性的函数依赖集。函数依赖的推理规则有以下三条：自反律：若属性集Y包含于属性集X，属性集X包含于U，则X→Y在R上成立。(此处X→Y是平凡函数依赖)增广律：若X→Y在R上成立，且属性集Z包含于属性集U，则XZ→YZ在R上成立。传递律：若X→Y和Y→Z在R上成立，则X→Z在R上成立。根据上面三条推理规则，又可推出下面三条推理规则：合并规则：若X→Y，X→Z，则X→YZ为F所蕴含；伪传递规则：若X→Y，WY→Z，则XW→Z为F所蕴含；分解规则：若X→Y，Z⊆Y，则X→Z为F所蕴含。","analysis":"B"},{"product_id":"201805311145384065883","ans":"本题考查SQL函数定义的基本知识。SQL函数定义语法结构如下：根据SQL函数定义语法结构不难得出答案。完整的SQL语句如下：","analysis":"A"},{"product_id":"201805311145384228852","ans":"本题考查SQL函数定义的基本知识。SQL函数定义语法结构如下：根据SQL函数定义语法结构不难得出答案。完整的SQL语句如下：","analysis":"D"},{"product_id":"201805311145384372018","ans":"本题考查数据仓库的基础知识。ETL(Extract-Transform-Load)用来描述将数据从来源端经过抽取（extract)、转换(transform)、加载（load)至目的端的过程。ETL是构建数据仓库的重要一环，用户从数据源抽取出所需的数据，经过数据清洗，最终按照预先定义好的数据仓库模型，将数据加载到数据仓库中去。联机事务处理过程（On-LineTransactionProcessing,OLTP)也称为面向交易的处理过程，其基本特征是前台接收的用户数据可以立即传送到计算中心进行处理，并在很短的时间内给出处理结果，是对用户操作快速响应的方式之一。数据挖掘（DataMining,DM)和联机分析处理（On-LineAnalyticalProcessing,OLAP)同为分析工具，其差别在于OLAP提供用户一个便利的多维度观点和方法，以有效率地对数据进行复杂的查询动作，其预设查询条件由用户预先设定，而数据挖掘则能由资讯系统主动发掘资料来源中未曾被察觉的隐藏资讯，透过用户的认知以产生信息。","analysis":"B"},{"product_id":"201805311145384537050","ans":"本题考查数据结构基础知识。设某队列包含4个元素e1、e2、e3、e4，e1为队头元素、e4为队尾元素，用循环单链表式如下。入队列是在表尾插入元素、出队列是在表头删除元素，将队列尾指针设置在表尾，可以快速得到表头信息，所以入队列和出队列都不需要遍历链表。","analysis":"A"},{"product_id":"201805311145384846253","ans":"本题考查数据结构基础知识。n阶三对角矩阵如下图所示。在元素ai,y之前共有i行（行号从0到i-1)，除了第一行外，其余每行都是3个元素,因此这i行上的元素个数为(3*i-1);在行号为i时，排列在ai,y之前的元素个数为j-i+1,合计2i+j个元素，因此元素ai,y存储在B[]中的下标为2i+j+1(因数组B是从下标1开始存放元素的）。","analysis":"C"},{"product_id":"201805311145385005115","ans":"本题考查数据结构基础知识。对二叉树进行顺序存储时，若某结点的编号为i，其左孩子结点存在时，则左孩子结点的编号为2i，其右孩子结点存在时，右孩子结点的编号为2i+1。由于结点C的编号为3，因此D和E的编号分别为6和7,E的编号为14。","analysis":"D"},{"product_id":"201805311145385155535","ans":"本题考查数据结构基础知识。构造哈希表时，关键字序列中两个不同的元素被哈希函数映射到同一个哈希单元时，称为冲突。","analysis":"B"},{"product_id":"201805311145385317703","ans":"本题考查算法设计与分析技术的相关知识。要求考生掌握几个基本的算法设计技术，包括分治法、动态规划、贪心法、问溯法和分支限界法等，并熟悉几个典型的应用实例。能根据求解问题的方法来推测采用的算法设计技术以及分析算法的时间复杂度和空间复杂度等。快速排序算法是一个常用的排序算法，要求考生熟悉常用的排序、查找等算法的设计方法、基本思路和时空复杂度。快速排序算法师一种分治算法。对活动排序之后，根据上述步骤将活动安排到场地，每次取出最先开始的活动将安排到现在讨用的场地中，若没有可用的场地，则申请一个新的场地，这是一种贪心策略，在上述几个步骤中，第一步快速排序算法的时间复杂度为O(n2)，后面的步骤需要遍历活动序列和场地序列，时间复杂度为O(n2)，整个算法的时间复杂度为O(n2)。对于该实例，由于活动已经根据其开始时间从小到大排序，现在只需要根据贪心策略安排活动即可：活动a1安排到场地P1，活动a2不能安排到场地P1，申请一个新场地安排活动a2……对于活动a6，能安排到场地P1，继续考虑下一个场地P2，可以安排活动a6，因此将其安排到P2……依此循环，一直到所有的活动安排完成，得到如下表所示的安排。因此可以看到最少需要5个场地。","analysis":"A"},{"product_id":"201805311145385786244","ans":"本题考查算法设计与分析技术的相关知识。要求考生掌握几个基本的算法设计技术，包括分治法、动态规划、贪心法、问溯法和分支限界法等，并熟悉几个典型的应用实例。能根据求解问题的方法来推测采用的算法设计技术以及分析算法的时间复杂度和空间复杂度等。快速排序算法是一个常用的排序算法，要求考生熟悉常用的排序、查找等算法的设计方法、基本思路和时空复杂度。快速排序算法师一种分治算法。对活动排序之后，根据上述步骤将活动安排到场地，每次取出最先开始的活动将安排到现在讨用的场地中，若没有可用的场地，则申请一个新的场地，这是一种贪心策略，在上述几个步骤中，第一步快速排序算法的时间复杂度为O(n2)，后面的步骤需要遍历活动序列和场地序列，时间复杂度为O(n2)，整个算法的时间复杂度为O(n2)。对于该实例，由于活动已经根据其开始时间从小到大排序，现在只需要根据贪心策略安排活动即可：活动a1安排到场地P1，活动a2不能安排到场地P1，申请一个新场地安排活动a2……对于活动a6，能安排到场地P1，继续考虑下一个场地P2，可以安排活动a6，因此将其安排到P2……依此循环，一直到所有的活动安排完成，得到如下表所示的安排。因此可以看到最少需要5个场地。","analysis":"C"},{"product_id":"201805311145385947035","ans":"本题考查算法设计与分析技术的相关知识。要求考生掌握几个基本的算法设计技术，包括分治法、动态规划、贪心法、问溯法和分支限界法等，并熟悉几个典型的应用实例。能根据求解问题的方法来推测采用的算法设计技术以及分析算法的时间复杂度和空间复杂度等。快速排序算法是一个常用的排序算法，要求考生熟悉常用的排序、查找等算法的设计方法、基本思路和时空复杂度。快速排序算法师一种分治算法。对活动排序之后，根据上述步骤将活动安排到场地，每次取出最先开始的活动将安排到现在讨用的场地中，若没有可用的场地，则申请一个新的场地，这是一种贪心策略，在上述几个步骤中，第一步快速排序算法的时间复杂度为O(n2)，后面的步骤需要遍历活动序列和场地序列，时间复杂度为O(n2)，整个算法的时间复杂度为O(n2)。对于该实例，由于活动已经根据其开始时间从小到大排序，现在只需要根据贪心策略安排活动即可：活动a1安排到场地P1，活动a2不能安排到场地P1，申请一个新场地安排活动a2……对于活动a6，能安排到场地P1，继续考虑下一个场地P2，可以安排活动a6，因此将其安排到P2……依此循环，一直到所有的活动安排完成，得到如下表所示的安排。因此可以看到最少需要5个场地。","analysis":"D"},{"product_id":"201805311145386096049","ans":"本题考查算法设计与分析技术的相关知识。要求考生掌握几个基本的算法设计技术，包括分治法、动态规划、贪心法、问溯法和分支限界法等，并熟悉几个典型的应用实例。能根据求解问题的方法来推测采用的算法设计技术以及分析算法的时间复杂度和空间复杂度等。快速排序算法是一个常用的排序算法，要求考生熟悉常用的排序、查找等算法的设计方法、基本思路和时空复杂度。快速排序算法师一种分治算法。对活动排序之后，根据上述步骤将活动安排到场地，每次取出最先开始的活动将安排到现在讨用的场地中，若没有可用的场地，则申请一个新的场地，这是一种贪心策略，在上述几个步骤中，第一步快速排序算法的时间复杂度为O(n2)，后面的步骤需要遍历活动序列和场地序列，时间复杂度为O(n2)，整个算法的时间复杂度为O(n2)。对于该实例，由于活动已经根据其开始时间从小到大排序，现在只需要根据贪心策略安排活动即可：活动a1安排到场地P1，活动a2不能安排到场地P1，申请一个新场地安排活动a2……对于活动a6，能安排到场地P1，继续考虑下一个场地P2，可以安排活动a6，因此将其安排到P2……依此循环，一直到所有的活动安排完成，得到如下表所示的安排。因此可以看到最少需要5个场地。","analysis":"B"},{"product_id":"201805311145386408876","ans":"本试题考査网络连接设备知识。网络设备属于哪一层主要看其处理的PDU是哪一层。交换机依据帧中的目的地址进行交换，属于链路层设备；中继器对物理层传输的信号进行放大或再生，属于物理层设备；路由器依据分组中的目的IP地址进行分组的转发，属于网络层设备；网桥依据帧中目的地址进行交换，属于链路层设备。","analysis":"B"},{"product_id":"201805311145386564878","ans":"本题考查URL的基本知识。URL(UniformResourceLocator),统一资源定位符是对可以从互联网上得到的资源的位置和访问方法的一种简洁的表示，是互联网标准资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。基本URL包含模式（或称协议）、服务器名称（或IP地址）、路径和文件名。","analysis":"B"},{"product_id":"201805311145386728974","ans":"本题考查URL的基本知识。URL(UniformResourceLocator),统一资源定位符是对可以从互联网上得到的资源的位置和访问方法的一种简洁的表示，是互联网标准资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。基本URL包含模式（或称协议）、服务器名称（或IP地址）、路径和文件名。","analysis":"C"},{"product_id":"201805311145386873251","ans":"本题测试Linux操作系统中有关文件访问权限管理命令的概念和知识。Linux对文件的访问设定了3级权限：文件所有者、同组用户和其他用户。对文件的访问设定了3种处理操作：读取、写入和执行。chmod命令用于改变文件或目录的访问权限，这是Linux系统管理员最常用到的命令之一。默认情况下，系统将新创建的普通文件的权限设置为-rw-r-r--，将每一个用户所有者录的权限都设置为drwx----。根据需要可以通过命令修改文件和目录的默认存取权限。只存文件所有者或超级用户root才有权用chmod改变文件或目录的访问权限。","analysis":"C"},{"product_id":"201805311145387196967","ans":"本试题考查域名解析相关知识。主域名服务器在接收到域名请求后，查询顺序是本地缓存、本地hosts文件、本地数据库、转发域名服务器。","analysis":"C"},{"product_id":"201805311145387342654","ans":"本题考查关系代数运算与SQL查询方面的基础知识。在中，自然联结R∞S运算后去掉右边重复的属性列名S.B.S.C后为：R.A,R.B.R.C,R.D,R.E,S.F,S.G,表达式的含义是从R∞S结果集中选取R.B<S.G的元组，再进行R.B.R.D,R.E,S.F,S.G投影。","analysis":"A"},{"product_id":"201805311145387819803","ans":"","analysis":"C"},{"product_id":"201805311145387972383","ans":"创建一个清晰的项目进展地图是重要的第一步。它可以让您识别风险，明确目标，并确定项目是否有意义。唯一比发布计划更重要的是不要太认真。发布计划是为您的Web项目创建一个游戏计划，概述您认为和希望您的Web站点是什么。该计划是向公众、合作伙伴或内部发布的网站的内容、设计元素和功能的指南。它还估计了项目需要多长时间以及需要多少费用。计划不是一个详细定义项目或预算产生多少收益的功能规范。本质上，您使用发布计划对项目的可行性和价值进行初步的健全性检查。发布计划是有用的路线图，但不要将它们视为洲际公路系统的导航。相反，将它们视为早期探险家使用的地图—一半谣言和猜测加一半希望和期待。拥有一个项目前进方向的地图总是一个好主意。","analysis":"D"},{"product_id":"201805311145388123377","ans":"创建一个清晰的项目进展地图是重要的第一步。它可以让您识别风险，明确目标，并确定项目是否有意义。唯一比发布计划更重要的是不要太认真。发布计划是为您的Web项目创建一个游戏计划，概述您认为和希望您的Web站点是什么。该计划是向公众、合作伙伴或内部发布的网站的内容、设计元素和功能的指南。它还估计了项目需要多长时间以及需要多少费用。计划不是一个详细定义项目或预算产生多少收益的功能规范。本质上，您使用发布计划对项目的可行性和价值进行初步的健全性检查。发布计划是有用的路线图，但不要将它们视为洲际公路系统的导航。相反，将它们视为早期探险家使用的地图—一半谣言和猜测加一半希望和期待。拥有一个项目前进方向的地图总是一个好主意。","analysis":"C"},{"product_id":"201805311145388447538","ans":"创建一个清晰的项目进展地图是重要的第一步。它可以让您识别风险，明确目标，并确定项目是否有意义。唯一比发布计划更重要的是不要太认真。发布计划是为您的Web项目创建一个游戏计划，概述您认为和希望您的Web站点是什么。该计划是向公众、合作伙伴或内部发布的网站的内容、设计元素和功能的指南。它还估计了项目需要多长时间以及需要多少费用。计划不是一个详细定义项目或预算产生多少收益的功能规范。本质上，您使用发布计划对项目的可行性和价值进行初步的健全性检查。发布计划是有用的路线图，但不要将它们视为洲际公路系统的导航。相反，将它们视为早期探险家使用的地图—一半谣言和猜测加一半希望和期待。拥有一个项目前进方向的地图总是一个好主意。","analysis":"A"},{"product_id":"201805311145388591104","ans":"创建一个清晰的项目进展地图是重要的第一步。它可以让您识别风险，明确目标，并确定项目是否有意义。唯一比发布计划更重要的是不要太认真。发布计划是为您的Web项目创建一个游戏计划，概述您认为和希望您的Web站点是什么。该计划是向公众、合作伙伴或内部发布的网站的内容、设计元素和功能的指南。它还估计了项目需要多长时间以及需要多少费用。计划不是一个详细定义项目或预算产生多少收益的功能规范。本质上，您使用发布计划对项目的可行性和价值进行初步的健全性检查。发布计划是有用的路线图，但不要将它们视为洲际公路系统的导航。相反，将它们视为早期探险家使用的地图—一半谣言和猜测加一半希望和期待。拥有一个项目前进方向的地图总是一个好主意。","analysis":"C"},{"product_id":"201805311145388755281","ans":"创建一个清晰的项目进展地图是重要的第一步。它可以让您识别风险，明确目标，并确定项目是否有意义。唯一比发布计划更重要的是不要太认真。发布计划是为您的Web项目创建一个游戏计划，概述您认为和希望您的Web站点是什么。该计划是向公众、合作伙伴或内部发布的网站的内容、设计元素和功能的指南。它还估计了项目需要多长时间以及需要多少费用。计划不是一个详细定义项目或预算产生多少收益的功能规范。本质上，您使用发布计划对项目的可行性和价值进行初步的健全性检查。发布计划是有用的路线图，但不要将它们视为洲际公路系统的导航。相反，将它们视为早期探险家使用的地图—一半谣言和猜测加一半希望和期待。拥有一个项目前进方向的地图总是一个好主意。","analysis":"B"}]},{"paperId":"519","field":"20172","question_list":[{"product_id":"201711150901365572922","ans":"本题考查防火墙的基础知识。防火墙最重要的特性就是利用设置的条件，监测通过的包的特征来决定放行或者阻止数据，同时防火墙一般架设在提供某些服务的服务器前，具备网关的能力，用户对服务器或内部网络的访问请求与反馈都需要经过防火墙的转发，相对外部用户而言防火墙隐藏了内部网络结构。防火墙作为一种网络安全设备，安装有网络操作系统，可以对流经防火墙的流量信息进行详细的日志和审计。","analysis":"D"},{"product_id":"201711150901375265444","ans":"本题考查计算机系统基础知识。高速缓存（Cache）的出现有两个因素：首先是因为CPU性能和速度提高很快而主存速度较慢且价格高，其次是程序执行的局部性特点。因此才将速度比较快且容量有限的静态存储芯片构成Cache，尽可能发挥CPU的高速度。因此必须要用硬件来实现Cache的全部功能。","analysis":"C"},{"product_id":"201711150901375572673","ans":"本题考查计算机系统基础知识。指令流水线的操作周期应为“瓶颈”段所需时间，因此至少为9ns。","analysis":"C"},{"product_id":"201711150901376204077","ans":"本题考查计算机系统基础知识。存储单元数为DFFFF-AOOOO+1=40000H(即218)个，需要的芯片数为218/215=23，即8个。","analysis":"B"},{"product_id":"201711150901376662587","ans":"本题考査计算机系统基础知识。随机访问存储器（RAM)有两类：静态的（SRAM)和动态的（DRAM),SRAM比DRAM速度更快，但也贵得多。SRAM用来作为高速缓冲存储器（Cache),DRAM用来作为主存及图形系统的帧缓冲区。SRAM将每个位存储在一个双稳态的存储器单元中，DRAM将每个位存储为对一个电容的充电，由于电容非常小，在10〜l00ms时间内会失去电荷，所以需要周期性地刷新充电以保持信息。EEPROM是电可擦除可编程只读存储器。","analysis":"A"},{"product_id":"201711150901377138440","ans":"本题考查计算机系统基础知识。海明码能检测并纠正一位错误。海明码是一个多重校验码，也就是码字中的信息码位同时被多个校验码进行校验，然后通过这些码位对不同校验码的联动影响最终可以找出是哪一位出错了。海明码的编码方式如下：设数据有n位，校验码有x位。则校验码一共有2x种取值方式。其中需要一种取值方式表示数据正确，剩下2x—1种取值方式表示有一位数据出错。因为编码后的二进制串有n+x位，因此x应该满足2x-1≥n+x。校验码在二进制串中的位置为2的整数幂，剩下的位置为数据。","analysis":"A"},{"product_id":"201711150901377459766","ans":"本题考查计算机系统基础知识。程序查询和中断方式都需要CPU来执行程序指令进行数据的输入和输出，DMA方式则不同，这是一种不经过CPU而直接从内存存取数据的数据交换模式。程序查询方式是由CPU主动查询外设的状态，在外设准备好时传输数据。中断方式是在外设准备好时给CPU发中断信号，之后再进行数据传输。在外设未发中断信号之前，CPU可以执行其他任务。在DMA模式下，CPU只需向DMA控制器下达指令，让DMA控制器来处理数据的传送，数据传送完毕再把信息反馈给CPU即可。","analysis":"B"},{"product_id":"201711150901377766220","ans":"本题考查的是HTTPS的基本知识。HTTPS协议是经过使用SSL技术将索要传输的数据进行加密之后传输的安全的超文本传输协议，使用TCP协议443号端口。HTTP协议使用明文来传输超文本数据，安全性较差。","analysis":"C"},{"product_id":"201711150901378543085","ans":"本题考查的是HTTPS的基本知识。HTTPS协议是经过使用SSL技术将索要传输的数据进行加密之后传输的安全的超文本传输协议，使用TCP协议443号端口。HTTP协议使用明文来传输超文本数据，安全性较差。","analysis":"B"},{"product_id":"201711150901378857587","ans":"本题考查网络攻击的基本知识。网络攻击分为主动攻击和被动攻击两种。主动攻击包含攻击者访问他所需信息的故意行为。比如通过远程登录到特定机器的邮件端口以找出企业的邮件服务器的信息；伪造无效IP地址去连接服务器，使接受到错误IP地址的系统浪费时间去连接那个非法地址。攻击者是在主动地做一些不利于你或你的公司系统的事情。主动攻击包括拒绝服务攻击（DoS)、分布式拒绝服务（DDoS)、信息篡改、资源使用、欺骗、伪装、重放等攻击方法。主要是收集信息而不是进行访问，数据的合法用户对这种活动一点也不会觉察到。被动攻击包括嗅探、信息收集等攻击方法。","analysis":"B"},{"product_id":"201711150901379014732","ans":"本题考查入侵检测技术。入侵检测技术包括专家系统、模型检测、简单匹配；漏洞扫描不是入侵检测的内容。","analysis":"D"},{"product_id":"201711150901379322130","ans":"本题考查知识产权知识。程序员在所属公司完成文档撰写工作是职务行为，该软件文档著作权应由其所在公司享有。","analysis":"C"},{"product_id":"201711150901379638723","ans":"本题考查知识产权知识。青岛、海口和长沙都属于县级以上行政区的地名，而黄山不是。","analysis":"B"},{"product_id":"201711150901379795156","ans":"本题考查知识产权知识。李某购买了一张有注册商标的应用软件光盘，他享有该光盘的所有权。","analysis":"B"},{"product_id":"201711150901380105181","ans":"本题考查结构化分析方法的基础知识。数据流图是结构化分析的一个重要模型，描述数据在系统中如何被传送或变换，以及描述如何对数据流进行变换的功能，用于功能建模。数据流图中有四个要素：①外部实体，也称为数据源或数据汇点，表示要处理的数据的输入来源或处理结果要送往何处，不属于目标系统的一部分，通常为组织、部门、人、相关的软件系统或者硬件设备；②数据流表示数据沿箭头方向的流动；③加工是对数据对象的处理或变换；④数据存储在数据流中起到保存数据的作用，可以是数据库文件或者任何形式的数据组织。根据上述定义和题干说明，患者是外部实体。实体联系图也是一个常用的数据模型，用于描述数据对象及数据对象之间的关系。实体联系图有三个要素:①实体是目标系统所需要的复合信息的表示，也称为数据对象;②属性定义数据对象的特征；③联系是不同数据对象之间的关系。在该系统中患者是一个数据对象，即实体，具有多种属性。","analysis":"A"},{"product_id":"201711150901380419046","ans":"本题考查结构化分析方法的基础知识。数据流图是结构化分析的一个重要模型，描述数据在系统中如何被传送或变换，以及描述如何对数据流进行变换的功能，用于功能建模。数据流图中有四个要素：①外部实体，也称为数据源或数据汇点，表示要处理的数据的输入来源或处理结果要送往何处，不属于目标系统的一部分，通常为组织、部门、人、相关的软件系统或者硬件设备；②数据流表示数据沿箭头方向的流动；③加工是对数据对象的处理或变换；④数据存储在数据流中起到保存数据的作用，可以是数据库文件或者任何形式的数据组织。根据上述定义和题干说明，患者是外部实体。实体联系图也是一个常用的数据模型，用于描述数据对象及数据对象之间的关系。实体联系图有三个要素:①实体是目标系统所需要的复合信息的表示，也称为数据对象;②属性定义数据对象的特征；③联系是不同数据对象之间的关系。在该系统中患者是一个数据对象，即实体，具有多种属性。","analysis":"A"},{"product_id":"201711150901380734516","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-B-C-E-F-J和A-B-D-G-F-J,其长度为18。活动BC和BD由一个工作人员完成，而这两个活动都在关键路径上，松弛时间为0。若先完成活动BC，则活动BD要晚3天才能开始，完成该项目的最少时间是18+3=21天;若先完成活动BD，则活动BC要晚2天才能开始，完成该项目的最少时间为18+2=20天。因此选择先完成活动BD,再完成活动BC,此时完成项目的最少时间为20天。","analysis":"B"},{"product_id":"201711150901385102706","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-B-C-E-F-J和A-B-D-G-F-J,其长度为18。活动BC和BD由一个工作人员完成，而这两个活动都在关键路径上，松弛时间为0。若先完成活动BC，则活动BD要晚3天才能开始，完成该项目的最少时间是18+3=21天;若先完成活动BD，则活动BC要晚2天才能开始，完成该项目的最少时间为18+2=20天。因此选择先完成活动BD,再完成活动BC,此时完成项目的最少时间为20天。","analysis":"C"},{"product_id":"201711150901386517715","ans":"本题考查软件开发中需求的基本概念。软件需求包括功能需求和非功能需求。功能需求是根据要求的活动来描述需要的行为。每个月特定的时间发放员工工资是一个功能需求，系统的响应时间不超过3秒是系统的性能需求，系统的计算精度符合财务规则的要求是精度要求，系统可以允许100个用户同事查询自己的工资是性能需求。","analysis":"A"},{"product_id":"201711150901387454725","ans":"本题考查程序语言知识。C/C++是编译型程序设计语言，常用于进行系统级软件的开发。Java、Python和JavaScript都是解释型程序设计语言，其中Python和JavaScript是脚本语言。","analysis":"A"},{"product_id":"201711150901396353290","ans":"本题考查程序语言知识。用脚本语言编程时也会使用变量以及定义和调用函数。","analysis":"A"},{"product_id":"201711150901397131896","ans":"本题考查程序语言知识。在对源程序进行编译的过程中，常生成与源程序等价的中间代码，以利于进行优化，常见的中间代码有后缀式、三地址码和树等。","analysis":"B"},{"product_id":"201711150901397912185","ans":"本题考查操作系统基本概念。计算机系统由硬件和软件两部分组成。通常把未配置软件的计算机称为裸机。直接使用裸机不仅不方便，而且将严重降低工作效率和机器的利用率。操作系统(OperatingSystem)目的是为了填补人与机器之间的鸿沟，即建立用户与计算机之间的接口，而为裸机配置的一种系统软件。操作系统在计算机系统中的地位如下图所示。从图中可见，操作系统是裸机上的第一层软件，是对硬件系统功能的首次扩充。它在计算机系统中占据重要而特殊的地位，所有其他软件，如编辑程序、汇编程序、编译程序、数据库管理系统等系统软件，以及大量的应用软件都是建立在操作系统基础上的，并得到它的支持和取得它的服务。从用户角度看，当计算机配置了操作系统后，用户不再直接使用计算机系统硬件，而是利用操作系统所提供的命令和服务去操纵计算机，操作系统己成为现代计算机系统中必不可少的最重要的系统软件，因此把操作系统看作是用户与计算机之间的接口。","analysis":"C"},{"product_id":"201711150901398073062","ans":"本题考査操作系统进程管理方面的基础知识。常用的进程控制块的组织方式有链接方式和索引方式,，采用链接方式是把具有同一状态的PCB,用其中的链接字链接成一个队列。这样，可以形成就绪队列、若干个阻塞队列和空白队列等。对其中的就绪队列常按进程优先级的高低排列，把优先级高的进程的PCB排在队列前面。此外，也可根据阻塞原因的不同而把处于阻塞状态的进程的PCB排成等待I/O操作完成的认列和等待分配内存的队列等。采用索引方式是系统根据所有进程的状态建立若干索引表。例如，就绪索引表、阻塞索引表等，并把各索引表在内存的首地址记录在内存的一些专用单元中。在每个索引表的表目中，记录具有相应状态的某个PCB在PCB表中的地址。","analysis":"B"},{"product_id":"201711150901398381809","ans":"本题考査操作系统进程管理方面的基础知识。常用的进程控制块的组织方式有链接方式和索引方式,，采用链接方式是把具有同一状态的PCB,用其中的链接字链接成一个队列。这样，可以形成就绪队列、若干个阻塞队列和空白队列等。对其中的就绪队列常按进程优先级的高低排列，把优先级高的进程的PCB排在队列前面。此外，也可根据阻塞原因的不同而把处于阻塞状态的进程的PCB排成等待I/O操作完成的认列和等待分配内存的队列等。采用索引方式是系统根据所有进程的状态建立若干索引表。例如，就绪索引表、阻塞索引表等，并把各索引表在内存的首地址记录在内存的一些专用单元中。在每个索引表的表目中，记录具有相应状态的某个PCB在PCB表中的地址。","analysis":"C"},{"product_id":"201711150901398701863","ans":"本题考查操作系统中文件管理的基本知识。根据题意，磁盘块的大小为1KB，每个块号需占3B，因此一个磁盘物理块可存放1024/3=341个块号（取整）。采用一级索引时的文件最大长度为：341X1024/1024=341KB采用二级索引时的文件最大长度为：341X341X1024/1024=116281KB","analysis":"C"},{"product_id":"201711150901398858074","ans":"本题考查操作系统存储管理方面的基础知识。逻辑地址是从0开始编址的，本题物理页的大小为1KB，而进程A逻辑地址为1024的变量的逻辑页号为1，对应的物理页号为3。根据题意，进程A的逻辑页4与进程B的逻辑页5要共享的物理页4,那么应该在进程A页表的逻辑页4对应的物理页处填4,进程B页表的逻辑页5对应的物理页处也填4。","analysis":"B"},{"product_id":"201711150901399161180","ans":"本题考查操作系统存储管理方面的基础知识。逻辑地址是从0开始编址的，本题物理页的大小为1KB，而进程A逻辑地址为1024的变量的逻辑页号为1，对应的物理页号为3。根据题意，进程A的逻辑页4与进程B的逻辑页5要共享的物理页4,那么应该在进程A页表的逻辑页4对应的物理页处填4,进程B页表的逻辑页5对应的物理页处也填4。","analysis":"A"},{"product_id":"201711150901399484286","ans":"本题考查软件测试的相关知识。要求考生能够熟练掌握典型的白盒测试和黑盒测试方法。分支覆盖是一种白盒测试方法，是指设计若干测试用例，使得所有判断框的Y和N分支至少走一次。该流程图有两个判断框，因此可以设计测试用例走第一个判断框的Y或N和第二个判断框的Y或N，对这些情况组合，至少需要2个测试用例，即YY和NN或者YN和NY或者NY和YN，这样可以满足分支覆盖。","analysis":"B"},{"product_id":"201711150901399791139","ans":"本题考查软件测试的相关知识。要求考生能够熟练掌握典型的白盒测试和黑盒测试方法。分支覆盖是一种白盒测试方法，是指设计若干测试用例，使得所有判断框的Y和N分支至少走一次。该流程图有两个判断框，因此可以设计测试用例走第一个判断框的Y或N和第二个判断框的Y或N，对这些情况组合，至少需要2个测试用例，即YY和NN或者YN和NY或者NY和YN，这样可以满足分支覆盖。","analysis":"B"},{"product_id":"201711150901399957577","ans":"配置管理是软件开发过程的重要内容，贯穿软件开发的整个过程。其内容包括：软件配置标识、变更管理、版本控制、系统建立、配置审核和配置状态报告。","analysis":"B"},{"product_id":"201711150901400263078","ans":"本题考查敏捷开发方法中极限编程（XP)的基础知识。敏捷开发方法是一个较主流的开发方法，敏捷宣言给出了所有敏捷开发方法的基本理念。XP是一种主要的敏捷开发方法，其十二个最佳实践包括：计划游戏、小的发布、系统隐喻、简单设计、测试驱动、重构、结对编程、集体所有权、持续集成、每周工作40小时、现场客户和编码标准。","analysis":"D"},{"product_id":"201711150901400575580","ans":"本题考查软件体系结构的基础知识。管道过滤器体系结构是一种传统的体系结构风格，该体系结构由一组称为过滤器的构件以及连接构件的管道组成，管道将数据从一个过滤器传送到另一个过滤器。该风格具有以下优点：①软件构件具有良好的隐蔽性和高内聚、低耦合的特点；②允许设计者将整个系统的输入输出行为看成是多个过滤器的行为的简单合成；③支持软件复用；④系统维护和增强系统性能简单；⑤允许对一些如吞吐量、死锁等属性的分析；⑥支持并行执行。","analysis":"D"},{"product_id":"201711150901400888400","ans":"本题考查软件设计的相关知识。耦合和内聚是衡量软件模块独立性的重要指标。其中，耦合是模块之间的相对独立性（互相连接的紧密程度）的度量。耦合取决于各个模块之间接口的复杂程度、调用模块的方式以及通过接口的信息类型等。①数据耦合：指两个模块之间有调用关系，传递的是简单的数据值，相当于高级语言中的值传递。②标记耦合：指两个模块之间传递的是数据结构。③控制耦合：指一个模块调用另一个模块时，传递的是控制变量，被调用模块通过该控制变量的值有选择的执行模块内的某一功能。因此，被调用模块内应具有多个功能，哪个功能起作用受调用模块控制。④内容耦合：当一个模块直接使用另一个模块的内部数据，或通过非正常入口转入另一个模块内部时，这种模块之间的耦合称为内容耦合。","analysis":"B"},{"product_id":"201711150901401208603","ans":"本题考察软件设计的相关知识。耦合和内聚是衡量软件模块独立性的重要指标。其中，内聚是一个模块内部各个元素彼此结合的紧密程度的度量。①时间内聚：把需要同时执行的动作组合在一起形成的模块。②过程内聚：指一个模块完成多个任务，这些任务必须按指定的过程执行。③信息内聚：指模块内的所有处理元素都在同一个数据结构上操作，或者各处理使用相同的输入数据或产生相同的输出数据。④功能内聚：指模块内的所有元素共同作用完成一个功能，缺一不可。","analysis":"B"},{"product_id":"201711150901401354141","ans":"本题考查的是软件维护的基本概念，软件维护一般分为四种类型。①改正性维护：是指改正在系统开发阶段已发生而系统测试阶段尚未发现的错误的修改行为。②适应性维护：是指使应用软件适应信息技术变化和管理需求变化而进行的修改。③完善性维护：为扩展功能和改善性能而进行的修改。④预防性维护：改变系统的某些方面，以预防失效的发生的修改行为。","analysis":"C"},{"product_id":"201711150901401666024","ans":"本题考查面向对象的基本知识。在面向对象方法中，对象是基本的运行时实体，它既包括数据（属性），也包括作用于数据的操作（行为），即一个对象把属性和行为封装为一个整体。这一封装使得对象的使用者和生产者分离，对象的使用者需要使用对象中的属性和方法时，需要通过对象来进行。封装是面向对象的特征之一。对象中的属性和方法的可访问性由访问权限修饰关键字来指定，C++和Java均支持private、protected和public关键字，分别说明类中属性或行为是私有的、保护的还是公有的。其中private表示对内可见，只有类内部所定义的方法才可以访问；protected对外不可见，对继承子类可见，在使用继承时具有继承关系的子类可以访问；public对外对内均可见，所有类使用者均可以访问。在Java中，缺省的访问权限指定默认访问权限是不采用任何访问权限修饰关键字，指定在同一个package中或子类中访问的成员。","analysis":"C"},{"product_id":"201711150901401982187","ans":"本题考查面向对象的基本知识。在面向对象方法中，对象是基本的运行时实体，它既包括数据（属性），也包括作用于数据的操作（行为），即一个对象把属性和行为封装为一个整体。这一封装使得对象的使用者和生产者分离，对象的使用者需要使用对象中的属性和方法时，需要通过对象来进行。封装是面向对象的特征之一。对象中的属性和方法的可访问性由访问权限修饰关键字来指定，C++和Java均支持private、protected和public关键字，分别说明类中属性或行为是私有的、保护的还是公有的。其中private表示对内可见，只有类内部所定义的方法才可以访问；protected对外不可见，对继承子类可见，在使用继承时具有继承关系的子类可以访问；public对外对内均可见，所有类使用者均可以访问。在Java中，缺省的访问权限指定默认访问权限是不采用任何访问权限修饰关键字，指定在同一个package中或子类中访问的成员。","analysis":"B"},{"product_id":"201711150901402456190","ans":"本题考查面向对象技术的基本知识。继承是面向对象技术的一个重要特征，描述父类和子类之间共享数据（属性）和方法（行为）的机制。在定义一个类时，可以在一个已经存在的类的基础上，通过继承关系将这个已经存在的类所定义的内容作为自己内容加以使用，并可以在无须改变原有父类的情况下扩充添加新的内容。这些内容既包括属性，又包括行为。在使用继承时，需要注意这两个类之间应该是属于关系，如假设有Person类，Teacher是一个人，Student也是一个人，由此Teacher和Student均可以继承Person类。在UML图中采用实线带空心三角形的箭头来表示继承关系，如下图所示。","analysis":"D"},{"product_id":"201711150901403859141","ans":"本题考查面向对象的基本知识。采用面向对象方法进行软件开发时，主要分为面向对象分析、面向对象设计、面向对象程序设计和面向对象测试。面向对象分析一般包含认定对象、组织对象、描述对象之间的相互作用、确定对象的操作和定义对象的内部信息等5个活动。认定对象是在定义域的需求描述中将自然存在的“名词”或“名称短语”作为一个对象。然后分析对象间的关系，将相关对象抽象成类，利用类的继承性建立具有继承层次的类结构，从而组织对象。再将各对象在应用系统中的通信关系加以描述。之后，确定对象的操作，这些操作有从对象直接标识的简单操作，也有更复杂的操作。最后，再定义对象的内部，对象内部定义包括其内部数据信息、信息存储方法、继承关系以及可能生成的实例数等属性。","analysis":"B"},{"product_id":"201711150901405268140","ans":"本题考查统一建模语言（UML)的基本知识。UML类图刻画系统的静态方面，展现了一组对象、接口、协作及其之间的关系。类图中包括的主要内容有类、接口、协作以及依赖、泛化和关联关系，也可以包含注解和约束。其中：①依赖是两个事务间的语义关系，其中一个事物发生变化时会影响了一个事务的语义。②泛化是一种特殊/一般关系，特殊元素（子元素）的对象可以替代一般元素（父元素）的对象，达到子元素可以共享父元素的结构和行为的目的。③关联是一种结构关系，描述一组对象之间连接的链，有单向关联、双向关联和自身关联（只涉及一个类）等。链上可以添加多重度、角色名称说明关联的对象数量以及行为。关联关系又有特殊类型，聚合和组合，用于描述部分和整体之间的结构关系，聚合暗示子类型独立于父类型而存在，比如班级和学生，班级删除之后，学生仍然可以存在。组合暗示没有父类型,子类型无法独立存在，比如题目所示Magazine和Page之间，Magazine被删除之后，Page无法独立存在。使用类图情况的方式通常有以下三种。①对系统的词汇进行建模。决定哪些抽象是考虑中的系统的一部分，哪些抽象处于系统边界之外，并详细描述这些抽象和它们的职责。②对简单协作进行建模。协作是一些共同工作的类、接口和其他元素的群体，提供一些合作行为强于所有这些因素的行为之和，要有相互协作的一组类来实现这些协作的语义。③对逻辑数据库模式建模。将模式看作是数据库的概念设计的蓝图，类图对这些数据库模式进行建模，有时也称为领域类图。对象快照采用对象图进行建模。","analysis":"A"},{"product_id":"201711150901405412556","ans":"本题考查统一建模语言（UML)的基本知识。UML类图刻画系统的静态方面，展现了一组对象、接口、协作及其之间的关系。类图中包括的主要内容有类、接口、协作以及依赖、泛化和关联关系，也可以包含注解和约束。其中：①依赖是两个事务间的语义关系，其中一个事物发生变化时会影响了一个事务的语义。②泛化是一种特殊/一般关系，特殊元素（子元素）的对象可以替代一般元素（父元素）的对象，达到子元素可以共享父元素的结构和行为的目的。③关联是一种结构关系，描述一组对象之间连接的链，有单向关联、双向关联和自身关联（只涉及一个类）等。链上可以添加多重度、角色名称说明关联的对象数量以及行为。关联关系又有特殊类型，聚合和组合，用于描述部分和整体之间的结构关系，聚合暗示子类型独立于父类型而存在，比如班级和学生，班级删除之后，学生仍然可以存在。组合暗示没有父类型,子类型无法独立存在，比如题目所示Magazine和Page之间，Magazine被删除之后，Page无法独立存在。使用类图情况的方式通常有以下三种。①对系统的词汇进行建模。决定哪些抽象是考虑中的系统的一部分，哪些抽象处于系统边界之外，并详细描述这些抽象和它们的职责。②对简单协作进行建模。协作是一些共同工作的类、接口和其他元素的群体，提供一些合作行为强于所有这些因素的行为之和，要有相互协作的一组类来实现这些协作的语义。③对逻辑数据库模式建模。将模式看作是数据库的概念设计的蓝图，类图对这些数据库模式进行建模，有时也称为领域类图。对象快照采用对象图进行建模。","analysis":"C"},{"product_id":"201711150901406208449","ans":"本题考查统一建模语言（UML)的基本知识。UML类图刻画系统的静态方面，展现了一组对象、接口、协作及其之间的关系。类图中包括的主要内容有类、接口、协作以及依赖、泛化和关联关系，也可以包含注解和约束。其中：①依赖是两个事务间的语义关系，其中一个事物发生变化时会影响了一个事务的语义。②泛化是一种特殊/一般关系，特殊元素（子元素）的对象可以替代一般元素（父元素）的对象，达到子元素可以共享父元素的结构和行为的目的。③关联是一种结构关系，描述一组对象之间连接的链，有单向关联、双向关联和自身关联（只涉及一个类）等。链上可以添加多重度、角色名称说明关联的对象数量以及行为。关联关系又有特殊类型，聚合和组合，用于描述部分和整体之间的结构关系，聚合暗示子类型独立于父类型而存在，比如班级和学生，班级删除之后，学生仍然可以存在。组合暗示没有父类型,子类型无法独立存在，比如题目所示Magazine和Page之间，Magazine被删除之后，Page无法独立存在。使用类图情况的方式通常有以下三种。①对系统的词汇进行建模。决定哪些抽象是考虑中的系统的一部分，哪些抽象处于系统边界之外，并详细描述这些抽象和它们的职责。②对简单协作进行建模。协作是一些共同工作的类、接口和其他元素的群体，提供一些合作行为强于所有这些因素的行为之和，要有相互协作的一组类来实现这些协作的语义。③对逻辑数据库模式建模。将模式看作是数据库的概念设计的蓝图，类图对这些数据库模式进行建模，有时也称为领域类图。对象快照采用对象图进行建模。","analysis":"D"},{"product_id":"201711150901406514279","ans":"本题考查设计模式的基本概念。按照设计模式的目的可以分为创建新模式、结构型模式以及行为型模式三大类。行为模式涉及算法和对象间职责的分配。行为模式不仅描述对象或类的模式，还描述它们之间的通信模式。观察者模式、状态模式、策略模式和访问者模式均为行为设计模式。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式的主要意图是：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。此模式的结构图如下所示。其中，Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。状态（State)模式的主要意图是：允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。其结构图如下所示。其中，Context(上下文）定义客户感兴趣的接口；State(状态）定义一个接口以封装与Context的一个特定状态相关的行为。策略（Strategy)模式的主要意图是：定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化。其结构图如下所示。其中，Strategy(策略）定义所有支持的算法的公共接口。Context使用这个接口来调用某ConcreteStrategy定义的算法。访问者（Visitor)模式的主要意图是：表示一个作用于某对象结构中的各元素的操作。它允许在不改变各元素的类的前提下定义作用于这些元素的新操作。其结构图如下所示。其中，Visitor(访问者）为该对象结构中ConcreteElement的每一个类声明一个Visit操作。Element(元素）定义以一个访问者为参数的Accept操作。本题描述的自动售货机适合釆用状态模式，属于行为型对象模式。自动售货机根据库存、存放货币量、找零能力、所选项目等项目不同而具有不同状态，这些内部状态的改变会使自动售货机的行为也发生改变。在用户存入货币并选择购买时，自动售货机根据状态的不同会有以下几种不同行为：交付产品，不找零钱；交付产品并找零；因存入钱数不足而不交付产品；因库存不足而不交付产品。题图所示的类图中，VendingMachineState接口定义了所有具体状态的公共接口handle(),封装与特定状态相关的所有行为。VendingDepositState、VendingStockState和ChangeAvailableState是实现VendingMachineState接口的具体状态类，各自实现自己的handle()行为。当Buy发送请求并改变状态时，这些具体状态类中相关的那个进行响应。此模式中，状态的变化发生在运行时，而非由客户端来决定。客户程序感兴趣和使用的主要接口定义在Buy中，即对应于状态模式结构图中的Context,可用状态来对其进行配置。","analysis":"B"},{"product_id":"201711150901406822009","ans":"有State关键词状态模式：允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。在很多情况下，一个对象的行为取决于一个或多个动态变化的属性，这样的属性叫做状态，这样的对象叫做有状态的(stateful)对象，这样的对象状态是从事先定义好的一系列值中取出的。当一个这样的对象与外部事件产生互动时，其内部状态就会改变，从而使得系统的行为也随之发生变化。是整个状态模式的基类也是对外的接口实现关系：是一种类与接口的关系，表示类是接口所有特征和行为的实现.箭头指向：带三角箭头的虚线，箭头指向接口","analysis":"B"},{"product_id":"201711150901406981173","ans":"有State关键词状态模式：允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。在很多情况下，一个对象的行为取决于一个或多个动态变化的属性，这样的属性叫做状态，这样的对象叫做有状态的(stateful)对象，这样的对象状态是从事先定义好的一系列值中取出的。当一个这样的对象与外部事件产生互动时，其内部状态就会改变，从而使得系统的行为也随之发生变化。是整个状态模式的基类也是对外的接口.","analysis":"D"},{"product_id":"201711150901407297181","ans":"有State关键词状态模式：允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。在很多情况下，一个对象的行为取决于一个或多个动态变化的属性，这样的属性叫做状态，这样的对象叫做有状态的(stateful)对象，这样的对象状态是从事先定义好的一系列值中取出的。当一个这样的对象与外部事件产生互动时，其内部状态就会改变，从而使得系统的行为也随之发生变化。是整个状态模式的基类也是对外的接口","analysis":"C"},{"product_id":"201711150901407767769","ans":"本题考查程序语言基础知识。编译过程一般分为词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成，以及出错处理和符号表管理。其中，语法分析是在词法分析的基础上分析短语（表达式)、句子（语句）的结构是否正确。","analysis":"C"},{"product_id":"201711150901407913024","ans":"本题考查程序语言基础知识。有限自动机（确定或非确定的）识别字符串的过程都是从初态出发，找出到达终态的一条路径，使得路径上的字符序列与所识别的字符串相同。在题中所给的有限自动机上，可以在路径0->1->3->3->4上形成字符序列aaab，所以aaab可被该自动机识别。对于abab，从状态0出发，首先识别出第一个字符a到达状态1，接下来不存在识别第二个字符b的状态转移，所以不能识别abab。对于bbba，从状态0出发识别出第一个字符b到达状态2,再识别出第二个字符b到达状态3,随后识别出第三个字符仍然转移到状态3,之后不存在能识别第四个字符a的状态转移，所以该自动机不能识别bbba。对于abba,从状态0出发，首先识别出第一个字符a到达状态1，接下来不存在识别第二个字符b的状态转移，所以不能识别abba。","analysis":"A"},{"product_id":"201711150901408234277","ans":"本题考查程序语言基础知识。实现函数调用时，形参具有独立的存储空间。在传值方式下，是将实参的值拷贝给形参；在传引用方式下，是将实参的地址传递给形参，或者理解为被调用函数中形参名为实参的别名，因此，对形参的修改实质上就是对实参的修改。题中main函数中的变量x为局部变量，调用函数f时，f的第一个形参x是函数f的局部量，其初始值为实参传过来的10,经过运算“x=2*x-1\"后修改为19(函数f的第二个形参为引用参数，在f中访问a本质上是对main函数中x的访问，经过运算“a=a+x”后，将a修改为10+19=29，也就是main函数的局部变量x被改为了29。","analysis":"D"},{"product_id":"201711150901408543334","ans":"本题考查数据库设计方面的相关知识。在数据库系统中，如果对数据库的一张表创建聚簇索引，意味着重新确定表中数据的物理顺序，即需要改变的是数据库的内模式。聚簇索引对于那些经常要搜索范围值的列特别有效。使用聚簇索引找到包含第一个值的行后，便可以确保包含后续索引值的行在物理相邻。例如，如果应用程序执行的一个查询经常检索某一日期范围内的记录，则使用聚集索引可以迅速找到包含开始日期的行，然后检索表中所有相邻的行，直到到达结束日期。这样有助于提高此类查询的性能。同样，如果对从表中检索的数据进行排序时经常要用到某一列，则可以将该表在该列上聚簇（物理排序），避免每次查询该列时都进行排序，从而节省成本。","analysis":"D"},{"product_id":"201711150901408701517","ans":"本题主要考核关系模式规范化方面的相关知识。根据函数依赖集F可知(时间，学生)可以决定关系R中的全部属性，故关系模式R的一个主键是(时间，学生)。根据函数依赖集F可知，R中的每个非主属性完全函数依赖于(时间，学生)，所以R是2NF。","analysis":"D"},{"product_id":"201711150901409014920","ans":"本题主要考核关系模式规范化方面的相关知识。根据函数依赖集F可知(时间，学生)可以决定关系R中的全部属性，故关系模式R的一个主键是(时间，学生)。根据函数依赖集F可知，R中的每个非主属性完全函数依赖于(时间，学生)，所以R是2NF。","analysis":"B"},{"product_id":"201711150901409327540","ans":"","analysis":"D"},{"product_id":"201711150901409633083","ans":"","analysis":"D"},{"product_id":"201711150901409951652","ans":"本题考查基于Web的应用的基本知识。JDBC是Java技术中访问数据库的方式，也是目前用Java技术实现的基于Web的应用的数据库访问方式。COM是一种组件技术，CGI是一种网络应用技术，而XML是一种数据格式定义，它们均不是访问数据库的方式。","analysis":"A"},{"product_id":"201711150901410263527","ans":"本题考查数据结构基础知识。按照子串长度考虑，长度为1的子串为n个，长度为2的子串为n-1个，以此类推,长度为n-1的子串为2个，合计n+n-1+...+3+2=(n+2)(n-1)/2。","analysis":"D"},{"product_id":"201711150901410572965","ans":"本题考查数据结构基础知识。根据各字符出现的次数用哈夫曼算法构造的哈夫曼树（不唯一，但各对应叶子结点所在层次相同）如下图所示，从树根到叶子的路径长度即为叶子结点的编码长度。","analysis":"A"},{"product_id":"201711150901410737316","ans":"本题考查数据结构基础知识。当二叉树包含k个结点时，链表中每个结点有两个孩子指针，共2k个，每个指针表示了一个父子关系。非空二叉树中除了跟结点外，每个结点都有唯一的父结点，因此2k个孩子指针中用k-1个表示了结点的父子关系，其余的k+1个孩子指针都为空指针。","analysis":"C"},{"product_id":"201711150901411041068","ans":"本题考查数据结构基础知识。错误的说法是G中任意两个顶点之间均有边存在，无向连通图只保证每对结点间都有路径。","analysis":"A"},{"product_id":"201711150901411201018","ans":"","analysis":"A"},{"product_id":"201711150901411513612","ans":"本题考查算法设计与分析的基本知识。要求考生熟悉典型的算法设计技术及其典型的问题的求解。应用蛮力法求解最长公共子序列时，其思路在题干已经给出。对X的每一个子序列，判断其是否也是Y的子序列，那么长度为n的序列X的子序列数是2n，而判断一个子序列是否也是Y的子序列的时间是n，因此时间复杂度为O(n2n)。而采用动态规划自底向上的方法求解时，题干也给出了最优子结构和递归式的定义，因此很容易看出算法的时间复杂度实际上就是i和j的两重循环，时间复杂度为O(n2)。","analysis":"D"},{"product_id":"201711150901412458832","ans":"本题考查算法设计与分析的基本知识。要求考生熟悉典型的算法设计技术及其典型的问题的求解。应用蛮力法求解最长公共子序列时，其思路在题干已经给出。对X的每一个子序列，判断其是否也是Y的子序列，那么长度为n的序列X的子序列数是2n，而判断一个子序列是否也是Y的子序列的时间是n，因此时间复杂度为O(n2n)。而采用动态规划自底向上的方法求解时，题干也给出了最优子结构和递归式的定义，因此很容易看出算法的时间复杂度实际上就是i和j的两重循环，时间复杂度为O(n2)。","analysis":"A"},{"product_id":"201711150901413239225","ans":"本题考查基本算法的时间复杂度分析，要求考生对典型的算法能熟练掌握。插入排序在输入数据基本有序的情况下，是其计算时间的最好情况，复杂度为O(n)，其他情况下时间复杂度为O(n2)。快速排序在输入数据有序或者逆序的情况下，是其计算时间的最坏情况，复杂度为O(n2)，其他情况下时间复杂度为O(nlgn)。而归并排序和堆排序算法在所有情况下的时间复杂度均为O(nlgn)。","analysis":"A"},{"product_id":"201711150901413542714","ans":"本题考查基本算法的时间复杂度分析，要求考生对典型的算法能熟练掌握。插入排序在输入数据基本有序的情况下，是其计算时间的最好情况，复杂度为O(n)，其他情况下时间复杂度为O(n2)。快速排序在输入数据有序或者逆序的情况下，是其计算时间的最坏情况，复杂度为O(n2)，其他情况下时间复杂度为O(nlgn)。而归并排序和堆排序算法在所有情况下的时间复杂度均为O(nlgn)。","analysis":"A"},{"product_id":"201711150901413855437","ans":"本试题考查传输层协议的基本原理。主要的传输层协议为TCP和UDP。TCP协议的是现较为复杂，采用3次握手建立连接，传输过程中能实现可靠传输、流量控制以及拥塞控制，因而也带来了较大开销。UDP协议主要通过端口号实现传输层级的寻址，开销也小。","analysis":"B"},{"product_id":"201711150901414016500","ans":"本题考查的是传输层的基本知识。传输层协议TCP和UDP，对应不同的端口就可以标识不同应用层协议。应用层协议代表着服务器上的服务，服务器上的服务如果对客户端提供服务，必须在TCP或UDP端口侦听客户端的请求。邮件服务使用两个协议，一个是SMTP(简单邮件传送协议）和POP3(邮局协议)协议，SMTP协议用于发送邮件，使用25号端口，POP3协议用于接收邮件，使用110号端口，这两种协议均是基于TCP协议的应用层协议。","analysis":"A"},{"product_id":"201711150901414325467","ans":"本题考查的是SNMP协议的功能。SNMP采用UDP协议进行封装。","analysis":"D"},{"product_id":"201711150901419796183","ans":"本题考查本地回送地址。127.0.0.1是本地回送地址，当网络连接不可用时，为了测试编写好的网络程序，通常使用的目的主机IP地址为127.0.0.1。","analysis":"B"},{"product_id":"201711150901420104878","ans":"本题考查网络检测的基础知识。备选项命令的作用分别是：Netstat用于显示网络相关信息；Ping用于检查网络是否连通；Msconfig用于Windows配置的应用程序；Cmd称为命令提示符，在操作系统中进行命令输入的工作提示符。","analysis":"B"},{"product_id":"201711150901420262120","ans":"语义网（SemanticWeb)的发展需要逐步推进，每一步都在前一层之上建立一层。这样做的务实理由是，小步骤达成共识比较容易，而如果尝试过多，要让所有人都达成共识则要困难得多。通常，会有多个研究团队沿着不同方向研究同一问题，由此产生的不同想法之间的竞争是科学进步的主要驱动力。然而，从工程化的角度而言，标准是必要的。如果大多数研究者在某些方面达成一致而在另一些方面不一致，将有助于确立哪些是共同点。这样的话，即使更宏伟的研究目标失败了，至少也能得到部分积极成果。标准一旦建立之后，更多的团体和公司就会采纳这个标准，而不是继续观望哪个研究方案将最终胜出。语义网的本质促使公司和个人用户必须构建工具，添加内容并使用该内容。我们不能坐等语义网愿景全部实现——那可能还需要十年的时间（当然这是现在的设想)。conflicts冲突consensus共同意见success成功disagreement意见不一","analysis":"B"},{"product_id":"201711150901420572335","ans":"语义网（SemanticWeb)的发展需要逐步推进，每一步都在前一层之上建立一层。这样做的务实理由是，小步骤达成共识比较容易，而如果尝试过多，要让所有人都达成共识则要困难得多。通常，会有多个研究团队沿着不同方向研究同一问题，由此产生的不同想法之间的竞争是科学进步的主要驱动力。然而，从工程化的角度而言，标准是必要的。如果大多数研究者在某些方面达成一致而在另一些方面不一致，将有助于确立哪些是共同点。这样的话，即使更宏伟的研究目标失败了，至少也能得到部分积极成果。标准一旦建立之后，更多的团体和公司就会采纳这个标准，而不是继续观望哪个研究方案将最终胜出。语义网的本质促使公司和个人用户必须构建工具，添加内容并使用该内容。我们不能坐等语义网愿景全部实现——那可能还需要十年的时间（当然这是现在的设想)。competition竞赛agreement一致cooperation合作collaboration合作","analysis":"A"},{"product_id":"201711150901422137969","ans":"语义网（SemanticWeb)的发展需要逐步推进，每一步都在前一层之上建立一层。这样做的务实理由是，小步骤达成共识比较容易，而如果尝试过多，要让所有人都达成共识则要困难得多。通常，会有多个研究团队沿着不同方向研究同一问题，由此产生的不同想法之间的竞争是科学进步的主要驱动力。然而，从工程化的角度而言，标准是必要的。如果大多数研究者在某些方面达成一致而在另一些方面不一致，将有助于确立哪些是共同点。这样的话，即使更宏伟的研究目标失败了，至少也能得到部分积极成果。标准一旦建立之后，更多的团体和公司就会采纳这个标准，而不是继续观望哪个研究方案将最终胜出。语义网的本质促使公司和个人用户必须构建工具，添加内容并使用该内容。我们不能坐等语义网愿景全部实现——那可能还需要十年的时间（当然这是现在的设想)。total总的complete完全的partial部分的entire全部的","analysis":"C"},{"product_id":"201711150901422453302","ans":"语义网（SemanticWeb)的发展需要逐步推进，每一步都在前一层之上建立一层。这样做的务实理由是，小步骤达成共识比较容易，而如果尝试过多，要让所有人都达成共识则要困难得多。通常，会有多个研究团队沿着不同方向研究同一问题，由此产生的不同想法之间的竞争是科学进步的主要驱动力。然而，从工程化的角度而言，标准是必要的。如果大多数研究者在某些方面达成一致而在另一些方面不一致，将有助于确立哪些是共同点。这样的话，即使更宏伟的研究目标失败了，至少也能得到部分积极成果。标准一旦建立之后，更多的团体和公司就会采纳这个标准，而不是继续观望哪个研究方案将最终胜出。语义网的本质促使公司和个人用户必须构建工具，添加内容并使用该内容。我们不能坐等语义网愿景全部实现——那可能还需要十年的时间（当然这是现在的设想)。technology技术standard标准pattern模式model模型","analysis":"B"},{"product_id":"201711150901422768338","ans":"语义网（SemanticWeb)的发展需要逐步推进，每一步都在前一层之上建立一层。这样做的务实理由是，小步骤达成共识比较容易，而如果尝试过多，要让所有人都达成共识则要困难得多。通常，会有多个研究团队沿着不同方向研究同一问题，由此产生的不同想法之间的竞争是科学进步的主要驱动力。然而，从工程化的角度而言，标准是必要的。如果大多数研究者在某些方面达成一致而在另一些方面不一致，将有助于确立哪些是共同点。这样的话，即使更宏伟的研究目标失败了，至少也能得到部分积极成果。标准一旦建立之后，更多的团体和公司就会采纳这个标准，而不是继续观望哪个研究方案将最终胜出。语义网的本质促使公司和个人用户必须构建工具，添加内容并使用该内容。我们不能坐等语义网愿景全部实现——那可能还需要十年的时间（当然这是现在的设想)。area地区goal目标object物体extent范围","analysis":"D"}]},{"paperId":"485","field":"20171","question_list":[{"product_id":"201706011135276369517","ans":"本题考查计算机系统基础知识。CPU中常设置多个寄存器，其中，程序计数器的作用是保存待读取指令在内存中的地址，累加器是算逻运算单元中用来暂存源操作数和计算结果的寄存器，指令寄存器暂存从内存读取的指令，地址寄存器暂存要访问的内存单元的地址。","analysis":"B"},{"product_id":"201706011135279026013","ans":"本题考查计算机系统基础知识。在位级表示中，将x与y进行“逻辑与”“逻辑或”和“逻辑异或”的结果如下所示。将整数a与0x000F4进行“逻辑与”运算，则运算结果中高12位都为0,而位则完全是a的低4位，所以“逻辑与”运算的结果为0,则说明a的低4位为0。将整数a与0x000F4进行“逻辑或”运算，则运算结果中高12位都保留的是高12位，而低4位则全为1，所以“逻辑或”运算的结果不能判定a的低4位是否为1。将整数a与0xFFF0进行“逻辑异或”运算，则运算结果中高12位是将a的高12取反，而低4位则保留了a的低4位,所以“逻辑异或”运算的结果不能判定a的低4位是否为0，因为高12位中可能有0有1。将整数a与0xFFF0进行“逻辑或”运算，则运算结果中高12位全是1，而低4位则保留了a的低4位，所以“逻辑或”运算的结果不能判定a的低4位是否为0,因为高12位全是1。","analysis":"A"},{"product_id":"201706011135279182221","ans":"本题考查计算机系统基础知识。中断方式、程序查询方式和无条件传逵方式都是通过CPU执行程序指令来传送数据的，DMA方式下是由DMA控制器直接控制数据的传送过程，CPU需要让出对总线的控制权，并不需要CPU执行程序指令来传送数据。","analysis":"D"},{"product_id":"201706011135279492965","ans":"本题考查计算机系统基础知识。可靠度为R1和R2的两个部件并联后的可靠度为（1一(1-R1)(1-R2）），这两个部件串联后的可靠度为R1R2，因此图中所示系统的节的（1-(1-R)3）(1-(1-R)2)。","analysis":"B"},{"product_id":"201706011135279801812","ans":"本题考查计算机系统基础知识。设数据位是n位，校验位是k位，则海明码中n和k必须满足以下关系：2k-1≥n+k。若n=16，则k为5时可满足25≥16+5。海明码的编码规则如下。设k个校验位为Pk，Pk-1，.…，P1，n个数据位为Dn-1，Dn-2，…，D1，D0，对应的海明码为Hn+k，Hn+k-1，…，H1，那么：①Pi在海明码的第2i-1位置，即Hj=Pi，且j=2i-1；数据位则依序从低到高占据海明码中剩下的位置。②海明码中的任一位都是由若干个校验位来校验的。其对应关系如下：被校验的海明位的下标等于所有参与校验该位|的校验位的下标之和，而校验位则由自身校验。","analysis":"C"},{"product_id":"201706011135280278668","ans":"本题考查计算机系统基础知识。高速缓存（Cache)是随着CPU与主存之间的性能差距不断增大而引入的，其速度比主存快得多，所存储的内容是CPU近期可能会需要的信息，是主存内容的副本，因此CPU需要访问数据和读取指令时要一访问Cache,若命中则直接访问，若不命中再去访问主存。评价Cache性能的关键指标是Cache的命中率，影响命中率的因素有其容量、替换算法、其组织方式等。Cache的命中率随容量的增大而提高，其关系如下图所示。Cache的设置不以扩大主存容量为目的，事实上也并没有扩大主存的容量。","analysis":"A"},{"product_id":"201706011135280745904","ans":"本题考查HTTPS基础知识。HTTPS(HyperTextTransferProtocoloverSecureSocketLayer)是以安全为目标的HTTP通道，即使用SSL加密算法的HTTP。","analysis":"B"},{"product_id":"201706011135281055675","ans":"本题考查加密算法的基本知识。根据题意，要求选出适合对大量明文进行加密传输的加密算法。备选项中的4种加密算法均能够对明文进行加密。RSA是一种非对称加密算法，由于加密和解密的密钥不同，因此便于密钥管理和分发，同时在用户或者机构之间进行身份认证方面有较好的应用；SHA-1是一种安全散列算法，常用宁对接收到的明文输入产生固定长度的输出，来确保明文在传输过程中不会被篡改；MD5是一种使用最为广泛的报文摘要算法；RC5是一种用于对明文进行加密的算法，在加密速度和强度上，均较为合适，适用于大量明文进行加密并传输。","analysis":"D"},{"product_id":"201706011135281369141","ans":"本题考查证书认证的基本知识。用户可在一定的认证机构（CA)处取得各自能够认证自身身份的数字证书，与该用户在同一机构取得的数字证书可通过相互的公钥认证彼此的身份；当两个用户所使用的证书来自于不同的认证机构时，用户双方要相互确定对方的身份之前，首先需要确定彼此的证书颁发机构的可信度。即两个CA之间的身份认证，需交换两个CA的公钥以确定CA的合法性，然后再进行用户的身份认证。","analysis":"D"},{"product_id":"201706011135281521001","ans":"本题考查知识产权相关知识。依照《计算机软件保护条例》的相关规定，计算机软件著作权的归属可以分为以下情况。①独立开发这种开发是最普遍的情况。此时，软件著作权当然属于软件开发者，即实际组织开发、直接进行开发，并对开发完成的软件承担责任的法人或者其他组织；或者依照自己具有的条件独立完成软件开发，并对软件承担责任的自然人。②合作开发由两个以上的自然人、法人或者其他组织合作开发的软件，一般是合作开发者签定书面合同约定软著作权归属。如果没有书面合同或者合同并未明确约定软件著作权的归属，合作开发的软件如果可以分割使用的，开发者对各自开发的部分可以单独享有著作权；但是行使著作权时，不得扩展到合作开发的软件整体的著作权。如果合作开发的软件不能分割使用，其著作权由各合作开发者共同享有，通过协商一致行使；不能协商一致，又无正当理由的，任何一方不得阻止他方行使除转让权以外的其他权利，但是所提收益应当合理分配给所有合作开发。③委托开发接受他人委托开发的软件，一般也是由委托人与受托人签订书面合同约定该软件著作权的归属；如无书面合同或者合同未作明确约定的，则著作权人由受托人享有。④国家机关下达任务开发由国家机关下达任务开发的软件，一般是由国家机关与接受任务的法人或者其他组织依照项目任务书或者合同规定来确定著作权的归属与行使。这里需要注意的是，国家机关下达任务开发，接受任务的人不能是自然人，只能是法人或者其他组织。但如果项目任务书或者合同中未作明确规定的，软件著作权由接受任务的法人或者其他组织享有。⑤职务开发自然人在法人或者其他组织中任职期间所开发的软件有下列情形之一的，该软件著作权由该法人或者其他组织享有。（一）针对本职工作中明确指定的开发目标所开的软件;(二）开发的软件是从事本职工作活动所预见的结果或者自然的结果；（三）主要使用了法人或者其他组织的资金、专用设备、未公开的专门信息等物质技术条件所开发并由法人或者其他组织承担责任的软件。但该法人或者其他组织可以对开发软件的自然人进行奖励。⑥继承和转让软件著作权是可以继承的。软件寒作权是属于自然人的，该自然人死亡后，在软件著作权的保护期内，软件著作权法的雄承人可以依照继承法的有关规定，继承除署名权以外的其他软件著作权权利，包括人身权利和财产权利。软件著作权属于法人或者其他组织的，法人或者其他组织变更、终止其著作权在条例规定的保护期内由承受其权利义务的法人或者其他组织享有；没有承受其权利义务的法人或者其他组织的，由国家享有。","analysis":"A"},{"product_id":"201706011135281998037","ans":"本题考查法律法规知识。我国商标法第六条规定：“国家规定必须使用注册商标的商品，必须申请商标注册，未经核准注册的，不得在市场销售。”目前根据我国法律法规的规定必须使用注册商标的是烟草类商品。","analysis":"D"},{"product_id":"201706011135282302487","ans":"本题考查知识产权知识。专利权是一种具有财产权属性的独占权以及由其衍生出来和相应处理权。专利权人的权利包括独占实施权、转让权、实施许可权、放弃权和标记权等。专利权人对其拥有的专利权享有独占或排他的权利，未经其许可或者出现法律规定的特殊情况，任何人不得使用，否则即构成侵权。这是，利权（知识产权）最重要的法律特点之一。","analysis":"D"},{"product_id":"201706011135282466693","ans":"本题考查多媒体基础知识。语音信号频率范围是300Hz〜3.4kHz，也就是不超过4kHz，按照奈奎斯特定律，要保持话音抽样以后再恢复时不失真，最低抽样频率是2倍的最高频率，即8kHz就可以保证信号能够正确恢复，因此将，字语音的采样频率定义为8kHz。","analysis":"A"},{"product_id":"201706011135282771847","ans":"本题考查多媒体基础知识。300*3*300*4=900*1200","analysis":"D"},{"product_id":"201706011135283087228","ans":"本题考查结构化分析与设计的相关知识。结构化分析的输出是结构化设计的输入，设计活动依据分析结果进行。接口设计是描述软件与外部环境之间的交互关系，软件内模块之间的调用关系，而这些关系的依据主要是分析阶段的数据流图。","analysis":"A"},{"product_id":"201706011135283407924","ans":"本题考查结构化分析与设计的相关知识。结构化分析的输出是结构化设计的输入，设计活动依据分析结果进行。接口设计是描述软件与外部环境之间的交互关系，软件内模块之间的调用关系，而这些关系的依据主要是分析阶段的数据流图。","analysis":"C"},{"product_id":"201706011135283552859","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-B-D-I-J-L，其长度为20。活动弧BD对应的活动的最早开始时间为第4天。活动弧HK对应活动的最早开始时间为第11天。","analysis":"D"},{"product_id":"201706011135283864168","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-B-D-I-J-L，其长度为20。活动弧BD对应的活动的最早开始时间为第4天。活动弧HK对应活动的最早开始时间为第11天。","analysis":"B"},{"product_id":"201706011135284029915","ans":"本题考查项目管理中人员管理的相关知识。无主程序员组的开发小组，每两十开发人员之间都有沟通路径，因此，8人组成的开发小组沟通路径为完全连通无向图的边数，即m=n(n-1)/2,其中n和m分另表示图的顶点数和边数。当n=8时，m==28。主程序员组中，除了主程序员外的每个开发人员只能和主程序员沟通，因此8人组成的开发小组的沟通路径8-1=7。","analysis":"D"},{"product_id":"201706011135284336718","ans":"本题考查程序语言基础知识。在源程序中，可由用户（程序员)为变量、函数和数据类型等命名。","analysis":"B"},{"product_id":"201706011135284659212","ans":"本题考查程序语言基础知识。(b|ab)*b表示的字符串集合为{b，bb,abb,bbb,abab,bbbb,abbb,babb,...}，除了以b结尾，还要求每个a后面至少有1个b。(ab*)*b表示的字符串集合为{b，ab,abb,aab,abbb,aaab,abab,...},除了以b结尾，还要求以a开头（除了仅有1个b的情形)。a*b*b表示的字符串集合为{b，ab,bb,abb,aab,bbb,abbb,aabb,aaab,bbbb,...},除了以b结尾，还要求若干个a之后连接若干个b，b只能出现在a之后。(a|b)*b表示的字符串集合为{b，ab,bb,aab,abb,bab,bbb,aaab,aabb,aba),abbb,baab,babb,bbab，...}","analysis":"D"},{"product_id":"201706011135284964599","ans":"本题考查程序语言基础知识。程序语言中的词（符号）的构成规则可由正规式描述，词法分析的基本任务就是识别出源程序中的每个词。语法分析是分析语句及程序的结构是否符合语言定义的规范，对于语法正确的语句，语义分析是判断语句的含义是否正确，因此判断语句的形式是否正确是语法分析阶段的工作。","analysis":"B"},{"product_id":"201706011135286054646","ans":"本题考查操作系统文件管理基知识。根据题意，计算机系统中的字长为32位，每位可以表示一个物通块的“使用”还是“未用”，一个字可记录32个物理块的使用情况。又因为磁盘的容量为300GB，物理块的大小为4MB，那么该磁盘有300*1024/4=76800个物理块，位示图的大小为76800/32=2400个字。","analysis":"B"},{"product_id":"201706011135286363168","ans":"本题考查操作系统进程管理基础知识。在有限的资源下，要保证系统不发生死锁，则可以按这种逻辑来分析。首先给每个进程分配所需资源数减1个资源，然后系统还有1个资源，则不可能发生死锁。即：3*4+1=13个。","analysis":"B"},{"product_id":"201706011135286686783","ans":"根据题意，页面大小为4K，逻辑地址2D16H所在页号为2,页内地址为D16H，查页表后可知物理块号为4,该地址i过变换后，其物理地址应为物理块号4拼接上页内地址D16H，即十六进制4D16H。","analysis":"C"},{"product_id":"201706011135286996853","ans":"根据前驱图，P1进程运行完需要利用V(S1)操作通知P2进程，P2进程需要等待P1进程的通知，故需要利用P(S1）操作测试P1进程是否运行完，所以空a应填“P(S1)”。又由于P2进程运行完需要分别通知P3、P4进程，所以空b应填两个V操作，故b应填写V(S2)V(S3)。根据前驱图，P3进程需要等待P2进程的通知，需要执行1个P操作，而P3进程运行结束需要利用1个V操作通知P4进程，故空d应为1个V操作。根据前驱图，P4进程执行需要等待P2、P3进程的通知，题中P4已执行了P(S3),故还需要执行1个P(S4)操作；而P4进程执行完需要利用一个V操作通知P5进程，从进程执行图中看出，P5进程执行P(S5)操作等待P4进程唤醒，故P4进程应该执行V(S5)„","analysis":"B"},{"product_id":"201706011135287152049","ans":"根据前驱图，P1进程运行完需要利用V(S1)操作通知P2进程，P2进程需要等待P1进程的通知，故需要利用P(S1）操作测试P1进程是否运行完，所以空a应填“P(S1)”。又由于P2进程运行完需要分别通知P3、P4进程，所以空b应填两个V操作，故b应填写V(S2)V(S3)。根据前驱图，P3进程需要等待P2进程的通知，需要执行1个P操作，而P3进程运行结束需要利用1个V操作通知P4进程，故空d应为1个V操作。根据前驱图，P4进程执行需要等待P2、P3进程的通知，题中P4已执行了P(S3),故还需要执行1个P(S4)操作；而P4进程执行完需要利用一个V操作通知P5进程，从进程执行图中看出，P5进程执行P(S5)操作等待P4进程唤醒，故P4进程应该执行V(S5)„","analysis":"C"},{"product_id":"201706011135287464160","ans":"根据前驱图，P1进程运行完需要利用V(S1)操作通知P2进程，P2进程需要等待P1进程的通知，故需要利用P(S1）操作测试P1进程是否运行完，所以空a应填“P(S1)”。又由于P2进程运行完需要分别通知P3、P4进程，所以空b应填两个V操作，故b应填写V(S2)V(S3)。根据前驱图，P3进程需要等待P2进程的通知，需要执行1个P操作，而P3进程运行结束需要利用1个V操作通知P4进程，故空d应为1个V操作。根据前驱图，P4进程执行需要等待P2、P3进程的通知，题中P4已执行了P(S3),故还需要执行1个P(S4)操作；而P4进程执行完需要利用一个V操作通知P5进程，从进程执行图中看出，P5进程执行P(S5)操作等待P4进程唤醒，故P4进程应该执行V(S5)„","analysis":"A"},{"product_id":"201706011135288244980","ans":"本题考查软件过程模型的相关知识。瀑布模型、原型化模型、增量或迭代的阶段化开发、螺旋模型等都是典型的软件过程模型，要求考生理解这些模型的优缺点以及适用的场合。螺旋模型是一个风险驱动的过程模型，因此要求开发人员必须具有丰富的风险评估知识和经验，否则因为忽视或过于重视风险造成问题。在对测试风险评估后，可以降低过多测试或测试不足带来的风险。而且，螺旋模型是一个迭代的模型，维护阶段是其中的一个迭代。螺旋模型适用于大规模的软件项目开发。螺旋模型将开发过程分为螺旋周期，每个螺旋周期可分为4个步骤来进行。首先，确定该阶段的目标，选择方案并设定这些方案的约束条件；其次，从风险角度分析、评估方案，通常用建造原型的方法来消除风险；第三，如果成功消除了所有风险，则实施本周期的软件开发；最后，评价该阶段的开发工作，并计划下一阶段的工作。","analysis":"D"},{"product_id":"201706011135288553527","ans":"本题考查敏捷开发中极限编程（XP）的相关知识。敏捷开发方法是一个强调灵活性和快速开发的一种开发方法，有多种具体的方法，其中极限编程是敏捷方法中最普遍的—种方法。极限编程包含12个实践操作。其中，集体所有权表示任何开发人员可以对系统任何部分进行改变，结对编程实际上存在一个非正式的代码审查过程，可以获得更高的代码质量。据统计，结对编程的编码速度与传统的单人编程相当。","analysis":"D"},{"product_id":"201706011135288869836","ans":"本题考查软件体系结构的相关知识。三层C/S体系结构由逻辑上相互分离的表示层、业务层和数据层构成。其中表示层向客户提供数据，业务层实施业务相数据规则，数据层定义数据访问标准。该体系结构具有许多优点，如逻辑上相对独立，不同层可以用不同的平台、软件和开发语言，而系统的安装、修改和维护在各层都可能进行。","analysis":"D"},{"product_id":"201706011135289021946","ans":"本题考查软件设计的相关知识。在软件设计中，人们总结了一些启发式原则，根据这些原则进行设计，可以设计出较高质量的软件系统。其中，模块的扇入扇出适中，模块大小适中以及完善模块功能都可以改进设计质量。而将相似功能的模块合并可能会降低模块内聚和提高模块之间的耦合，因此并不能改进设计质量。","analysis":"C"},{"product_id":"201706011135289331923","ans":"本题考查计算机软件设计的相关知识。模块的内聚是一个模块内部各个元素彼此结合的紧密程度的度量。①巧合内聚：指一个模块内的各处理元素之间没有任何联系。②逻辑内聚：指模块内执行考干个逻辑上相似的功能，通过参数确定该模块完成哪一个功能。③时间内聚：把需要同时执行的动作组合在一起形成的模块。④过程内聚：指一个模块完成多个任务，这些任务必须按指定的过程执行。由于模块D内的语句之间没有任何联系，因此该模块的内聚类型为巧合内聚。该内聚类型具有最低的内聚性，是最不好的一种内聚类型。具有该类内聚类型的模块具有不易修改、不易理解和不易维护等特点，同时会影响到模块间的耦合关系。","analysis":"A"},{"product_id":"201706011135289497861","ans":"本题考查计算机软件设计的相关知识。模块的内聚是一个模块内部各个元素彼此结合的紧密程度的度量。①巧合内聚：指一个模块内的各处理元素之间没有任何联系。②逻辑内聚：指模块内执行考干个逻辑上相似的功能，通过参数确定该模块完成哪一个功能。③时间内聚：把需要同时执行的动作组合在一起形成的模块。④过程内聚：指一个模块完成多个任务，这些任务必须按指定的过程执行。由于模块D内的语句之间没有任何联系，因此该模块的内聚类型为巧合内聚。该内聚类型具有最低的内聚性，是最不好的一种内聚类型。具有该类内聚类型的模块具有不易修改、不易理解和不易维护等特点，同时会影响到模块间的耦合关系。","analysis":"D"},{"product_id":"201706011135289807996","ans":"本题考查软件测试的相关知识。要求考生能够熟练掌握典型的白盒测试和黑盒测试方法。语句覆盖和路径覆盖是两种具体的白盒测试方法，语句覆盖是指设计若干测试用例，覆盖程序中的所有语句，而路径覆盖是指设计若干个测试用例，覆盖程序中的所有路径。该流程图中：设计两个测试用例执行路径：①②③④⑤⑥⑦⑧⑩⑪和①②③④⑤⑨⑩⑪即可满足语句覆盖。c流程图中有：①②③④⑤⑥⑦⑧⑩⑪①②③④⑤⑥⑧⑩⑪①②③④⑤⑨⑩⑪①②③⑪4条路径，因此4个最少测试用例就可以满足路径覆盖。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V(G)=m-n+2,图中m=13，n=11,V(G)=13-11+2=4。","analysis":"B"},{"product_id":"201706011135289969633","ans":"本题考查软件测试的相关知识。要求考生能够熟练掌握典型的白盒测试和黑盒测试方法。语句覆盖和路径覆盖是两种具体的白盒测试方法，语句覆盖是指设计若干测试用例，覆盖程序中的所有语句，而路径覆盖是指设计若干个测试用例，覆盖程序中的所有路径。该流程图中：设计两个测试用例执行路径：①②③④⑤⑥⑦⑧⑩⑪和①②③④⑤⑨⑩⑪即可满足语句覆盖。c流程图中有：①②③④⑤⑥⑦⑧⑩⑪①②③④⑤⑥⑧⑩⑪①②③④⑤⑨⑩⑪①②③⑪4条路径，因此4个最少测试用例就可以满足路径覆盖。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V(G)=m-n+2,图中m=13，n=11,V(G)=13-11+2=4。","analysis":"D"},{"product_id":"201706011135290272761","ans":"本题考查面向对象的基本知识。在面向对象方法中，对象是基本的运行时实体，一组大体上相似的对象定义为一个类。有些类之间存在一般和特殊关在定义和实现一个类的时候，可以在已经存在的类的基础上来进行，把已经存在的类所定义的属性和行为作为自己的内容，并加入新的内容，这种机制就是超类（父类）如子类之间共享数据和方法的机制（即继承)。在继承的支持下，不同对象在收到同一消息是可以产生不同的结果，这就是多态。定义一个类时继承多于一个超称为多重继承。使用多重继承时，多个超类中可能定义有相同名称而不同含义的成员，就可能会造成子类中存在二义性的成员。例如下图所示为典型的“钻石问题”，类B和C都继承A，类D继承B和C。若A中有一个方法，B和C进行覆盖，而D没有进行覆盖，那么D应该继承B中的方法版本还是C中的方法版本就无法确定，从而产生二叉性。","analysis":"A"},{"product_id":"201706011135290589659","ans":"本题考查面向对象的基本知识。在面向对象方法中，对象是基本的运行时实体，一组大体上相似的对象定义为一个类。有些类之间存在一般和特殊关在定义和实现一个类的时候，可以在已经存在的类的基础上来进行，把已经存在的类所定义的属性和行为作为自己的内容，并加入新的内容，这种机制就是超类（父类）如子类之间共享数据和方法的机制（即继承)。在继承的支持下，不同对象在收到同一消息是可以产生不同的结果，这就是多态。定义一个类时继承多于一个超称为多重继承。使用多重继承时，多个超类中可能定义有相同名称而不同含义的成员，就可能会造成子类中存在二义性的成员。例如下图所示为典型的“钻石问题”，类B和C都继承A，类D继承B和C。若A中有一个方法，B和C进行覆盖，而D没有进行覆盖，那么D应该继承B中的方法版本还是C中的方法版本就无法确定，从而产生二叉性。","analysis":"D"},{"product_id":"201706011135291218124","ans":"本题考查面向对象技术的基本知识。采用面向对象技术进行软件开发时，需要进行面向对象分析（OOA)、面向对象设计（OOD)、面向对象实现和面向对象测试几个阶段。分析阶段的目的是为了获得对应用问题的理解，确定系统的功能、性能要求，在此阶段主要关注系统的行为，明确系统需要提供什么服务。在设计阶段，采用面向对象技术将OOA所创建的分析模型转化为设计模型，其目标是定义系统构造蓝图。在实现阶段（面向对象程序设计），系统实现人员选用一种面向对象程序设计语言，采用对象、类及其相关概念进行程序设计，即实现系统。","analysis":"D"},{"product_id":"201706011135291524478","ans":"本题考查面向对象的基本知识。多态的实现受到继承的支持，利用类的继承的层次关系，把具有通用功能的消息存放在高层次，而不同的实现这一功能的行为放在较低层次。当一个客户类对象犮送通用消息请求服务时，它无需知道所调用方法的特定子类的实现，是根据接收对象的具体情况将请求的操作与实现的方法进行连接，即动态绑定，以实现在这些低层次上生成的对象给通用消息以不同的响应。","analysis":"A"},{"product_id":"201706011135291831795","ans":"本题考查统一建模语言（UML)的基本知识。UML2.0及后续版本提供了13种图，部分图用于刻画系统的静态方面，如类图、对象图等；部分图刻画系统的动态方两，如序列图、状态图、通信图和活动图等。序列图（sequencediagram)场景（scenario)的图形化表示，描述了以时间顺序组织的对象之间的交互活动。如下图所示，参加交互的对象放在图的上方，沿水平方向排列。然后，把这些对象发送和接收的消息沿垂直方向按时间顺序从上到下放置。状态图（statediagram)展现了一个状态机，它由状态、转换、事件和活动组成，对于接口、类和协作的行为建模尤为重要，强调对象行为的事件顺序。如下图所示，状态图通常包括简单状态和组合状态、转换（事件和动作）。通信图（communicationdiagram)强调收发消息的对象的结构组织，强调参加交互的对象的组织，在早期的版本中也被称作协作图。如下图所示，参与交互的对象作为图的顶点，连接这些对象的链表示为图的弧，用对象发送和接收的消息来修饰这些链。通信图有路径，消息有序号，如图中的1、2、2.1等。活动图（activitydiagram)是一种特殊的状态图，它展现了在系统内从一个活动到另一个活动的流程，如下图所示。本题叙述中，给出一个通信图的实例，图中参与交互的对象作为图的顶点，包括等，对象之间的连线表示链，并用消息来进行修饰，如图中等，其中序号1表示第一条消息，2表示第二条消息，1.1表示嵌套在消息1中的第一条消息，1.2表示嵌套在消息1中的第二条消息，2.1表示嵌套在消息2中的第一条消息，2.2表示嵌套在消息2中的第二条消息，依此类推。在一条消息中，可以有监护条件，如题图中消息1.2:[interested]:view_book()中的[interested]。","analysis":"C"},{"product_id":"201706011135292159594","ans":"从图示可以了解到，题目中的图是通信图。通信图描述的是对象和对象之间的关系，即一个类操作的实现。简而言之就是，对象和对象之间的调用关系，体现的是一种组织关系。该图明显表达的是对象与对象之间的关系。其中如果一个框中的名称中带有“:”号，说明这表示的是一个对象，“:”号前的部分是对象名，“:”号后面的部分是类名。而对象之间连线上面的箭头所标识的是对象之间通信的消息。","analysis":"B"},{"product_id":"201706011135293086755","ans":"从图示可以了解到，题目中的图是通信图。通信图描述的是对象和对象之间的关系，即一个类操作的实现。简而言之就是，对象和对象之间的调用关系，体现的是一种组织关系。该图明显表达的是对象与对象之间的关系。其中如果一个框中的名称中带有“:”号，说明这表示的是一个对象，“:”号前的部分是对象名，“:”号后面的部分是类名。而对象之间连线上面的箭头所标识的是对象之间通信的消息。","analysis":"D"},{"product_id":"201706011135293554707","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式为行为设计模式，定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。在题图所示的观察者模式的结构图中：①Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口；②Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口；③ConcreteSubject(具体目标）将有关状态存入各ConcreteObserver对象；当它的状态发生改变时，向其各个观察者发出通知；④ConcreteObserver(具体观察者）维护一个指向ConcreteSubject对象的引用；存储有关状态，这些状态应与目标的状态保持一致；实现Observer的更新接口，以使自身状态与目标的状态保持一致。该模式的特点适用于以下情况：①当一个抽象模型有两个方面，其中一个方面依赖于另一个方面，将这两者封装在独立的对象中以使它们可以各自独立地改变和复用；②当对一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变时；③当一个对象必须通知其他对象，而它又不能假定其他对象是谁，即不希望这些对象是紧耦合的。","analysis":"A"},{"product_id":"201706011135293717818","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图和适用情况。观察者（Observer)模式为行为设计模式，定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。在题图所示的观察者模式的结构图中：①Subject(目标）知道它的观察者，可以有任意多个观察者观察同一个目标；提供注册和删除观察者对象的接口；②Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口；③ConcreteSubject(具体目标）将有关状态存入各ConcreteObserver对象；当它的状态发生改变时，向其各个观察者发出通知；④ConcreteObserver(具体观察者）维护一个指向ConcreteSubject对象的引用；存储有关状态，这些状态应与目标的状态保持一致；实现Observer的更新接口，以使自身状态与目标的状态保持一致。该模式的特点适用于以下情况：①当一个抽象模型有两个方面，其中一个方面依赖于另一个方面，将这两者封装在独立的对象中以使它们可以各自独立地改变和复用；②当对一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变时；③当一个对象必须通知其他对象，而它又不能假定其他对象是谁，即不希望这些对象是紧耦合的。","analysis":"B"},{"product_id":"201706011135294026920","ans":"本题考查设计模式的基本概念。装饰器（Decorator)模式和外观(Facade)模式均为对象结构型设计模式。装饰器模式动态地给一个对象添加一些额外的职责。就增加功能而言，此模式比生成子类更加灵活。外观模式为子系统中的一组接口提供一个统一的界面，此模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。这两种模式适用于不同的情況。装饰器模式适用于以下几种情況：①在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责；②处理那些可以撤销的职责;③当不能采用生成子类的方式进行扩充时。一种情况是，可能有大量独立的扩展，为支持每一种组合将产生大量的子类，使得子类数目呈爆炸性增长。另一种情况可能是，由于类定义被隐藏，或类定义不能用于生成子类。外观模式适用于以下几种情况:①要为一个复杂子系统提供一个简单接口时，子系统往往因为不断演化而变得越来越复杂，Facade可以提供一个简单的默认视图，这一视图对大多数用户来说已经足够，而那些需要更多的可定制性的用户可以越过Facade层；②客户程序与抽象类的实现知分之间存在着很大的依赖性。引入Facade将这个子系统与客户以及其他的子系统分离，可以提高子系统的独立性和可移植性；③当需要构建一个层次结构子系统时，使用Facade模式定义子系统中每层的入口点。如果子系统之间是相互依赖的，则可以让它们仅通过Facade进行通信，从而简化了它们之间的依赖关系。本题所给4种情况中，②将一个对象加以包装以提供一些额外的行为符合装饰器的动态、透明地给单个对象添加职责的适用性；④将一系列对象加以包装以简化其接口符合外观模式的主要特点。","analysis":"B"},{"product_id":"201706011135294186052","ans":"本题考查设计模式的基本概念。装饰器（Decorator)模式和外观(Facade)模式均为对象结构型设计模式。装饰器模式动态地给一个对象添加一些额外的职责。就增加功能而言，此模式比生成子类更加灵活。外观模式为子系统中的一组接口提供一个统一的界面，此模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。这两种模式适用于不同的情況。装饰器模式适用于以下几种情況：①在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责；②处理那些可以撤销的职责;③当不能采用生成子类的方式进行扩充时。一种情况是，可能有大量独立的扩展，为支持每一种组合将产生大量的子类，使得子类数目呈爆炸性增长。另一种情况可能是，由于类定义被隐藏，或类定义不能用于生成子类。外观模式适用于以下几种情况:①要为一个复杂子系统提供一个简单接口时，子系统往往因为不断演化而变得越来越复杂，Facade可以提供一个简单的默认视图，这一视图对大多数用户来说已经足够，而那些需要更多的可定制性的用户可以越过Facade层；②客户程序与抽象类的实现知分之间存在着很大的依赖性。引入Facade将这个子系统与客户以及其他的子系统分离，可以提高子系统的独立性和可移植性；③当需要构建一个层次结构子系统时，使用Facade模式定义子系统中每层的入口点。如果子系统之间是相互依赖的，则可以让它们仅通过Facade进行通信，从而简化了它们之间的依赖关系。本题所给4种情况中，②将一个对象加以包装以提供一些额外的行为符合装饰器的动态、透明地给单个对象添加职责的适用性；④将一系列对象加以包装以简化其接口符合外观模式的主要特点。","analysis":"D"},{"product_id":"201706011135294493057","ans":"本题考查程序语言基础知识。在自动机中，从初态到达终态的一条路径上所标记的字符形成的串正好与要识别的串相同，则称该自动机能识别此字符串。对于00110，从状态A出发，其识别路径为A→B→D→C→E→B，字符串结束时，自动机所在状态为B，而不是终态D或E,所以该DFA不能识别00110。对于10101，从状态A出发，其识别路径为A→C→B→C→B→C，字符串结束时，自动机所在状态为C，而不是终态D或E,所以该DFA不能识别10101。对于11100，从状态A出发，其识别路径为A→C→E→E→B→D，字符串结束时，自动机所在状态为终态D，所以该DFA可以识别11100。对于11001，从状态A出发，其识别路径为A→C→E→B→D→C，字符串结束时，自动机所在状态为C，而不是终态D或E，所以该DFA不能识别11001。","analysis":"C"},{"product_id":"201706011135295115189","ans":"本题考查程序语言基础知识。若实现函数调用时，是将实参的值传递给对应的形参，则称之为传值调用。这种方式下，形参不能向实参传递信息。引用调用的本质是将实参的地址传给形参，函数中对形参的访问和修改实际上就是针对i应实参变量所作的访问和改变。根据题目说明，调用f时，第一个参数是传值方式，第二个参数是引用方式，因此在main函数中，先将其局部变量i的值加1后（即6)传递给f的第一个参数x，而将其main中x的地址传给f的第二个参数a，因此在f中对a的修改等同于是对main中x的修改。在f中，x的初始值为6,经过“x=x*x-1”运算后修改为35，经过“a=x+a”运算后将a的值改为40。这里需要注意的是，f中的x与main中的x是两个不同且相互独立的变量。","analysis":"B"},{"product_id":"201706011135295434037","ans":"本题考查程序语言基础知识。对题中的二叉树进行后序遍历即可得该二叉树所表示表达式的后缀式，为“x5y+*a/b-”。","analysis":"A"},{"product_id":"201706011135295746541","ans":"本题考查数据库并发控制方面的基础知识。在多用户共享的系统中，许多用户可能同时对同一数据进行操作，可能带来数据不一致问题。为了解决这类问题，数据库系统必须控制事务的并发执行，保证数据库处于一致的状态，在并发控制中引入两种锁：排他锁（ExclusiveLocks,简称X锁）和共享锁（ShareLocks,简称S锁）。排他锁又称为写锁，用于对数据进行写操作时进行锁定。如果事务T对数据A加上X锁后，就只允许事务T读取和修改数据A，其他事务对数据A不能再加任何锁，从而也不能读取和修改数据A，直到事务T释放A上的锁。共享锁又称为读锁，用于对数据进行读操作时进行锁定。如果事务T对数据A加上了S锁后，事务T就只能读数据A但不可以修改，其他事务可以再对数据A加S锁来读取，只要数据A上有S锁，任何事务都只能再对其加S锁（读取）而不能加X锁(修改)。","analysis":"D"},{"product_id":"201706011135296682858","ans":"本题考查数据库并发控制方面的基础知识。在多用户共享的系统中，许多用户可能同时对同一数据进行操作，可能带来数据不一致问题。为了解决这类问题，数据库系统必须控制事务的并发执行，保证数据库处于一致的状态，在并发控制中引入两种锁：排他锁（ExclusiveLocks,简称X锁）和共享锁（ShareLocks,简称S锁）。排他锁又称为写锁，用于对数据进行写操作时进行锁定。如果事务T对数据A加上X锁后，就只允许事务T读取和修改数据A，其他事务对数据A不能再加任何锁，从而也不能读取和修改数据A，直到事务T释放A上的锁。共享锁又称为读锁，用于对数据进行读操作时进行锁定。如果事务T对数据A加上了S锁后，事务T就只能读数据A但不可以修改，其他事务可以再对数据A加S锁来读取，只要数据A上有S锁，任何事务都只能再对其加S锁（读取）而不能加X锁(修改)。","analysis":"C"},{"product_id":"201706011135296833542","ans":"本题考查关系数据库基本知识。","analysis":"A"},{"product_id":"201706011135297157542","ans":"本题考查SQL语言基础知识。试根据题意“一个供应商可以为多个项目供应多种零件，每个项目可由多个供应商供应多种零件。”可知，SP_P的联系类型为多对多对多（*:*:*)，其ER模型如下图所示。而多对多对多的联系必须生成一个独立的关系模式，该模式是由多端的码即“供应商号”“项目号”“零件号”以及SP_P联系的属性“数量”构成。SELECT语句格式如下：根据题意，从关系模式SP_P(供应商号，项目号，零件号，数量）查询至少供应了3个项目（包含3项）的供应商，输出其供应商号和供应零件数量的总和。根据题意，需查询至少供应了3个项目（包含3项）的供应商，故应该按照供应商号分组，而且应该加上条件项目号的统计数目。一个供应商可能为同一个项目供应了多种零件，因此，在统计工程项目数的时候需要加上DISTINCT,以避免重复统计导致错误的结果。假如按供应商号='s1'分组，结果如表1。从表1我们可以看出，如果不加DISTINCT,统计结果为7,而加了DISTINCT,统计结果是3。","analysis":"A"},{"product_id":"201706011135297935648","ans":"后面2个空考查的是SQL语言，目前需要查询的是零件数量总和，很明显在题目的多个关系中只有SP_P有这个属性。所以查询只能FROMSP_P。接下来分析如何能把至少供应了3个项目的供应商找出来，此时需要写查询条件。查询条件Where与Having的区别要弄清楚，Where是针对单条记录的判断条件，而Having是针对分组之后的判断条件，此处应选Having，同时，由于考虑到项目号可能重复，所以需要加Distinct关键字以便去掉重复。","analysis":"D"},{"product_id":"201706011135298407643","ans":"后面2个空考查的是SQL语言，目前需要查询的是零件数量总和，很明显在题目的多个关系中只有SP_P有这个属性。所以查询只能FROMSP_P。接下来分析如何能把至少供应了3个项目的供应商找出来，此时需要写查询条件。查询条件Where与Having的区别要弄清楚，Where是针对单条记录的判断条件，而Having是针对分组之后的判断条件，此处应选Having，同时，由于考虑到项目号可能重复，所以需要加Distinct关键字以便去掉重复。","analysis":"C"},{"product_id":"201706011135298714382","ans":"本题考查数据结构基础知识。字符串是由字符构成的序列，属于线性数据结构。包含任意个空格字符的字符串称为空白串。字符串中的字符取自特定的字符集合（常见的是ASCII字符集)，其长度是指包含的字符个数。","analysis":"C"},{"product_id":"201706011135299024315","ans":"IIOIIOIOOO出栈序列为：a2a4a5a3a1IOIOIOIOIO出栈序列为：a1a2a3a4a5IOOIIOIOIO无合法出栈序列，因为入栈1个元素，出栈2个元素，会产生错误。IIOOIOIOOO无合法出栈序列，操作序列中4次入栈6次出栈也是会产生错误的。","analysis":"A"},{"product_id":"201706011135299338395","ans":"本题考查数据结构基础知识。对于一个非空的二叉树，其先序遍历序列和中序遍历序列都是唯一确定的。先序遍历是首先访问根结点，其次是先序遍历左子树，最后再先序遍历右子树，因此，先序序列中的第一个元素是根结点。中序遍历是首先中序遍历左子树，然后访问根结点，最后中序遍历右子树，因此，在已知根结点的情况下，可将左子树和右子树的结点区分开。本题中，根据先序遍历序列，可知树根结点是A，然后从中序序列得知左子树中只有一个结点（B)，依此类推，可推得该二叉树如下图所示，其高度为4。","analysis":"B"},{"product_id":"201706011135299498814","ans":"本题考查数据结构基础知识。若将序列中的元素以完全二叉树的方式呈现，则k1与,k2i、k2i+1正好形成父结点、左孩子和右孩子的关系，很容易判断条件ki≤k2i且ki≤k2i+1是否成立。题中选项A、B和C的序列如下图所示，树中每个非叶子结点都不大于其左孩子结点和右孩子结点，因此都是小根堆。选项D中序列对应的完全二叉树如下图所示，其中40大于其右孩子39,因此不是小根堆。","analysis":"D"},{"product_id":"201706011135299801484","ans":"本题考查数据结构基础知识。在12个元素构成的有序表中进行二分查找的过程可用折半查找判定树表示，如下图所示（数字表示元素的序号）。若要查找的元素等于a[9]，则依次与a[6]、a[9]进行了比较。","analysis":"B"},{"product_id":"201706011135300111515","ans":"本题考查算法设计与分析技术的相关知识。要求考生掌握几个基本的算法设计技术，包括分治法、动态规划、贪心法、回溯法和分支限界法等，并熟悉其典型的应用实例。根据题干描述，装配线调度问题是一个最优化问题，需要求最短的装配路线。在求解最优解的过程中，利用问题的最优子结构性质（即问题的最优解包含其子问题的最优解)，且分析出问题具有重复子问题的性这是采用动态规划策略求解问题的两个基本要素。分析题干描述的求解该问题的思路，迭代地求解题干中给的递归式，即一重n的循环，因此时间复杂度为θ(n)。根据递归式计算f数组和fmin，并构造数组1和fmin记录到达某个工位的前一个工位来自哪条装配线以及最终从哪条装配线离开，得到下表。根据上表，得到最短的装配路线的长度为21。最短路线从后往前推，首先1min=1，表示汽车装配完后是从第一条装配线出来的，因此会经过S13,然后再査113=2,表示S13的前一个工位是S22，再查S22=1,表示S22的前一个工位是S11,于是得到最短路线为S11-S22-S13。","analysis":"B"},{"product_id":"201706011135300273278","ans":"本题考查算法基础。题目看似是非常复杂的，涉及到复杂的公式，以及算法逻辑，但如果我们先从后面两个空来分析，问题就简单得多。求最短装配时间与装配路线，其实是一个求最短路径的过程。此时我们可以把从起点到各个结点的最短路径逐步求出。经过分析得出最短装配路线为：S11->S22->S13，长度为21。解决了一个实际问题后，再来看所谓的迭代公式，其做法与之前手动求最短路径一致，算法是用一个数组将起点到各个结点的最短路径逐个求出，用已求出的最短路径来分析后面的最短路径，所以这符合动态规划法的特征，算法策略应是动态规划法。而算法的复杂度为θ（n），因为用一个单重循环就可以解决这个问题。","analysis":"B"},{"product_id":"201706011135300583209","ans":"本题考查算法基础。题目看似是非常复杂的，涉及到复杂的公式，以及算法逻辑，但如果我们先从后面两个空来分析，问题就简单得多。求最短装配时间与装配路线，其实是一个求最短路径的过程。此时我们可以把从起点到各个结点的最短路径逐步求出。经过分析得出最短装配路线为：S11->S22->S13，长度为21。解决了一个实际问题后，再来看所谓的迭代公式，其做法与之前手动求最短路径一致，算法是用一个数组将起点到各个结点的最短路径逐个求出，用已求出的最短路径来分析后面的最短路径，所以这符合动态规划法的特征，算法策略应是动态规划法。而算法的复杂度为θ（n），因为用一个单重循环就可以解决这个问题。","analysis":"A"},{"product_id":"201706011135300902160","ans":"本题考查算法基础。题目看似是非常复杂的，涉及到复杂的公式，以及算法逻辑，但如果我们先从后面两个空来分析，问题就简单得多。求最短装配时间与装配路线，其实是一个求最短路径的过程。此时我们可以把从起点到各个结点的最短路径逐步求出。经过分析得出最短装配路线为：S11->S22->S13，长度为21。解决了一个实际问题后，再来看所谓的迭代公式，其做法与之前手动求最短路径一致，算法是用一个数组将起点到各个结点的最短路径逐个求出，用已求出的最短路径来分析后面的最短路径，所以这符合动态规划法的特征，算法策略应是动态规划法。而算法的复杂度为θ（n），因为用一个单重循环就可以解决这个问题。","analysis":"B"},{"product_id":"201706011135301217979","ans":"本题考查DNS的基本知识。DNS域名查询的次序是：本地的hosts文件一>本地DNS缓存一>本地DNS服务器一>根域名服务器。","analysis":"B"},{"product_id":"201706011135301528212","ans":"本题考查Linux操作系统基础知识。在Linux操作系统中，只有一个根目录，根目录使用“/”来表示。根目录是一个非常重要的目录，其他的文件目录均由根目录衍生而来。","analysis":"C"},{"product_id":"201706011135301993404","ans":"本题考查TCP/IP协议栈中的协议与层次关系。选项A、B错在第3层应为IP协议；选项D错在SMTP采用的传输层协议为TCP。","analysis":"C"},{"product_id":"201706011135302152227","ans":"本题考查异步传输协议基础知识。根据题目中的数据，每秒传送500字符，每字符7比特，故有效速率为3500b/s。","analysis":"C"},{"product_id":"201706011135302463958","ans":"本题考查路由策略基础知识。静态路由是固定路由，从不更新除非拓扑结构发生变化；洪泛式路由将信息发送到连接的所有路由器，不利用网络信息；随机路由是洪泛式的简化；自适应路由依据网络信息进行代价计算，依据最小代价实时更新路由。","analysis":"D"},{"product_id":"201706011135302619583","ans":"软件之美在于它的功能、内部结构以及团队创建它的过程。对用户而言，通过直观、简单的界面呈现出恰当特性的程序就是美的。对软件设计者而言，被简单、直观地分割，并具有最小内部耦合的内部结构就是美的。对开发人员和管理者而言，每周都会取得重大进展，并且生产出无缺陷代码的具有活力的团队就是美的。美存在于所有这些层次之中。人们需要软件—需要许多软件。50年前，软件还只是运行在少量大型、昂贵的机器之上。30年前，软件可以运行在太多数公司和工业环境之中。现在，移动电话、手表、电器、汽车、玩具以及工具中都运行有软件，并且对更新、更好的软件的需求永远不会停止。随着人类文明的发展和壮大，随着发展中国家不断构建基础设施，随着发达国家努力追求更高的效率，对越来越多的软件的需求不断增加。如果在所有这些软件之中，都没有美存在，这将会是一个很大的遗憾。我们知道软件可能会是丑陋的。我们知道软件可能会难以使用、不可靠并且是粗制滥造的；我们知道有一些软件系统，界混乱、粗糙的内部结构使得对它们的更改既昂贵又困难；我们还见过那些通过笨拙、编以使用的界面展现其特性的软件系统；我们同样也见过那些易崩溃且行为不当的软件系统。这些都是丑陋的系统。糟糕的是，作为一种职业，软件开发人员所创建出来的美的东西却往往少于丑的东西。最好的软件开发人员都知道一个秘密：美的东西比丑的东西创建起来更廉价，也更快捷。构建、维护一个美的软件系统所花费的时间、金钱都要少于丑的系统。软件开发新手往往不理解这一点。他们认为做每件事情都必须要快，他们认为美是不实用的。错!由于事情做得过快，他们造成的混乱致使软件僵化，难以理解。美的系统是灵活、易于理解的，构建、维护它们就是一种快乐。丑陋的系统才是不实用的。丑陋会降低你的开发速度，使你的软件昂贵而又脆弱。构建、维护美的系统所花费的代价最少，交付起来也最快。simple（简单）hard（困难）complex（复杂）duplicated（被复制）","analysis":"A"},{"product_id":"201706011135302939143","ans":"软件之美在于它的功能、内部结构以及团队创建它的过程。对用户而言，通过直观、简单的界面呈现出恰当特性的程序就是美的。对软件设计者而言，被简单、直观地分割，并具有最小内部耦合的内部结构就是美的。对开发人员和管理者而言，每周都会取得重大进展，并且生产出无缺陷代码的具有活力的团队就是美的。美存在于所有这些层次之中。人们需要软件—需要许多软件。50年前，软件还只是运行在少量大型、昂贵的机器之上。30年前，软件可以运行在太多数公司和工业环境之中。现在，移动电话、手表、电器、汽车、玩具以及工具中都运行有软件，并且对更新、更好的软件的需求永远不会停止。随着人类文明的发展和壮大，随着发展中国家不断构建基础设施，随着发达国家努力追求更高的效率，对越来越多的软件的需求不断增加。如果在所有这些软件之中，都没有美存在，这将会是一个很大的遗憾。我们知道软件可能会是丑陋的。我们知道软件可能会难以使用、不可靠并且是粗制滥造的；我们知道有一些软件系统，界混乱、粗糙的内部结构使得对它们的更改既昂贵又困难；我们还见过那些通过笨拙、编以使用的界面展现其特性的软件系统；我们同样也见过那些易崩溃且行为不当的软件系统。这些都是丑陋的系统。糟糕的是，作为一种职业，软件开发人员所创建出来的美的东西却往往少于丑的东西。最好的软件开发人员都知道一个秘密：美的东西比丑的东西创建起来更廉价，也更快捷。构建、维护一个美的软件系统所花费的时间、金钱都要少于丑的系统。软件开发新手往往不理解这一点。他们认为做每件事情都必须要快，他们认为美是不实用的。错!由于事情做得过快，他们造成的混乱致使软件僵化，难以理解。美的系统是灵活、易于理解的，构建、维护它们就是一种快乐。丑陋的系统才是不实用的。丑陋会降低你的开发速度，使你的软件昂贵而又脆弱。构建、维护美的系统所花费的代价最少，交付起来也最快。happens（发生）exists（存在）stops（停止）starts（开始）","analysis":"C"},{"product_id":"201706011135303241486","ans":"软件之美在于它的功能、内部结构以及团队创建它的过程。对用户而言，通过直观、简单的界面呈现出恰当特性的程序就是美的。对软件设计者而言，被简单、直观地分割，并具有最小内部耦合的内部结构就是美的。对开发人员和管理者而言，每周都会取得重大进展，并且生产出无缺陷代码的具有活力的团队就是美的。美存在于所有这些层次之中。人们需要软件—需要许多软件。50年前，软件还只是运行在少量大型、昂贵的机器之上。30年前，软件可以运行在太多数公司和工业环境之中。现在，移动电话、手表、电器、汽车、玩具以及工具中都运行有软件，并且对更新、更好的软件的需求永远不会停止。随着人类文明的发展和壮大，随着发展中国家不断构建基础设施，随着发达国家努力追求更高的效率，对越来越多的软件的需求不断增加。如果在所有这些软件之中，都没有美存在，这将会是一个很大的遗憾。我们知道软件可能会是丑陋的。我们知道软件可能会难以使用、不可靠并且是粗制滥造的；我们知道有一些软件系统，界混乱、粗糙的内部结构使得对它们的更改既昂贵又困难；我们还见过那些通过笨拙、编以使用的界面展现其特性的软件系统；我们同样也见过那些易崩溃且行为不当的软件系统。这些都是丑陋的系统。糟糕的是，作为一种职业，软件开发人员所创建出来的美的东西却往往少于丑的东西。最好的软件开发人员都知道一个秘密：美的东西比丑的东西创建起来更廉价，也更快捷。构建、维护一个美的软件系统所花费的时间、金钱都要少于丑的系统。软件开发新手往往不理解这一点。他们认为做每件事情都必须要快，他们认为美是不实用的。错!由于事情做得过快，他们造成的混乱致使软件僵化，难以理解。美的系统是灵活、易于理解的，构建、维护它们就是一种快乐。丑陋的系统才是不实用的。丑陋会降低你的开发速度，使你的软件昂贵而又脆弱。构建、维护美的系统所花费的代价最少，交付起来也最快。starts（开始）continues（持续）appears（出现）stops（停止）","analysis":"B"},{"product_id":"201706011135303556192","ans":"软件之美在于它的功能、内部结构以及团队创建它的过程。对用户而言，通过直观、简单的界面呈现出恰当特性的程序就是美的。对软件设计者而言，被简单、直观地分割，并具有最小内部耦合的内部结构就是美的。对开发人员和管理者而言，每周都会取得重大进展，并且生产出无缺陷代码的具有活力的团队就是美的。美存在于所有这些层次之中。人们需要软件—需要许多软件。50年前，软件还只是运行在少量大型、昂贵的机器之上。30年前，软件可以运行在太多数公司和工业环境之中。现在，移动电话、手表、电器、汽车、玩具以及工具中都运行有软件，并且对更新、更好的软件的需求永远不会停止。随着人类文明的发展和壮大，随着发展中国家不断构建基础设施，随着发达国家努力追求更高的效率，对越来越多的软件的需求不断增加。如果在所有这些软件之中，都没有美存在，这将会是一个很大的遗憾。我们知道软件可能会是丑陋的。我们知道软件可能会难以使用、不可靠并且是粗制滥造的；我们知道有一些软件系统，界混乱、粗糙的内部结构使得对它们的更改既昂贵又困难；我们还见过那些通过笨拙、编以使用的界面展现其特性的软件系统；我们同样也见过那些易崩溃且行为不当的软件系统。这些都是丑陋的系统。糟糕的是，作为一种职业，软件开发人员所创建出来的美的东西却往往少于丑的东西。最好的软件开发人员都知道一个秘密：美的东西比丑的东西创建起来更廉价，也更快捷。构建、维护一个美的软件系统所花费的时间、金钱都要少于丑的系统。软件开发新手往往不理解这一点。他们认为做每件事情都必须要快，他们认为美是不实用的。错!由于事情做得过快，他们造成的混乱致使软件僵化，难以理解。美的系统是灵活、易于理解的，构建、维护它们就是一种快乐。丑陋的系统才是不实用的。丑陋会降低你的开发速度，使你的软件昂贵而又脆弱。构建、维护美的系统所花费的代价最少，交付起来也最快。practical（实用的）useful（有用的）beautiful（美丽的）ugly（丑陋的）","analysis":"D"},{"product_id":"201706011135303864886","ans":"软件之美在于它的功能、内部结构以及团队创建它的过程。对用户而言，通过直观、简单的界面呈现出恰当特性的程序就是美的。对软件设计者而言，被简单、直观地分割，并具有最小内部耦合的内部结构就是美的。对开发人员和管理者而言，每周都会取得重大进展，并且生产出无缺陷代码的具有活力的团队就是美的。美存在于所有这些层次之中。人们需要软件—需要许多软件。50年前，软件还只是运行在少量大型、昂贵的机器之上。30年前，软件可以运行在太多数公司和工业环境之中。现在，移动电话、手表、电器、汽车、玩具以及工具中都运行有软件，并且对更新、更好的软件的需求永远不会停止。随着人类文明的发展和壮大，随着发展中国家不断构建基础设施，随着发达国家努力追求更高的效率，对越来越多的软件的需求不断增加。如果在所有这些软件之中，都没有美存在，这将会是一个很大的遗憾。我们知道软件可能会是丑陋的。我们知道软件可能会难以使用、不可靠并且是粗制滥造的；我们知道有一些软件系统，界混乱、粗糙的内部结构使得对它们的更改既昂贵又困难；我们还见过那些通过笨拙、编以使用的界面展现其特性的软件系统；我们同样也见过那些易崩溃且行为不当的软件系统。这些都是丑陋的系统。糟糕的是，作为一种职业，软件开发人员所创建出来的美的东西却往往少于丑的东西。最好的软件开发人员都知道一个秘密：美的东西比丑的东西创建起来更廉价，也更快捷。构建、维护一个美的软件系统所花费的时间、金钱都要少于丑的系统。软件开发新手往往不理解这一点。他们认为做每件事情都必须要快，他们认为美是不实用的。错!由于事情做得过快，他们造成的混乱致使软件僵化，难以理解。美的系统是灵活、易于理解的，构建、维护它们就是一种快乐。丑陋的系统才是不实用的。丑陋会降低你的开发速度，使你的软件昂贵而又脆弱。构建、维护美的系统所花费的代价最少，交付起来也最快。impractical（不实用的）perfect（完美的）time-wasting（浪费时间）practical（实用的）","analysis":"A"}]},{"paperId":"463","field":"20162","question_list":[{"product_id":"201611210939229458911","ans":"本题查计算机系统基础知识。指令周期是执行一条指令所需要的时间，一般由若干个机器周期组成，是从取指令、分析指令到执行完所需的全部时间。CPU执行指令的过程中，根据时序部件发出的时钟信号按部就班进行操作。在取指令阶段读取到的是指令，在分析指令和执行指令时，需要操作数时再去读操作数。","analysis":"A"},{"product_id":"201611210939230233189","ans":"本题考查计算机系统基础知识。CPU首先从程序计数器（PC）获得需要执行的指令地址，从内存（或高速缓存）读取到的指令则暂存在指令寄存器（IR），然后进行分析和执行。","analysis":"C"},{"product_id":"201611210939230387484","ans":"本题考查计算机系统基础知识。浮点格式表示一个二进制数N的形式为N=2eXF，其中E称为阶码，F叫做尾数。在浮点表示法中，阶码通常为含符号的纯整数，尾数为含符号的纯小数。指数为纯整数，阶符1位、阶码6位在补码表示方式下可表示的最大数为63（26-1），最小数为-64（-26）。尾数用补码表示时最小数为-1、最大数为1-2-8，因此该浮点表示的最小数为-263，最大数为（1-2-8）×263。","analysis":"B"},{"product_id":"201611210939230709620","ans":"本题考查计算机系统基础知识。海明码是利用奇偶性来检错和纠错的校验方法。海明码的构成方法是：在数据位之间插入k个校验位，通过扩大码距来实现检错和纠错。设数据位是n位，校验位是k位，则n和k必须满足以下关系：2k-1≥n+k若数据信息为n=16位，则k=5是满足2k-1≥n+k的最小值。","analysis":"C"},{"product_id":"201611210939231017721","ans":"本题考查计算机系统基础知识。对于该指令流水线，建立时间为4△t+2△t+3△t=9△t，此后每4△t执行完一条指令，即执行完100条指令的时间为9△t+99*4△t=405△t。","analysis":"D"},{"product_id":"201611210939231177934","ans":"本题考查计算机系统基础知识。存储系统采用Cache技术的主要目的是提高存储器的访问速度，因此是由硬件自动完成Cache与主存之间的地址映射。","analysis":"D"},{"product_id":"201611210939231639249","ans":"本题考查网络安全相关基础知识。RSA基于大数定律，通常用于对消息摘要进行签名；IDEA和RC4适宜于进行数据传输加密；MD5为摘要算法。","analysis":"A"},{"product_id":"201611210939231952051","ans":"本题考查数字签名方面的基础知识。数字签名用于通信的A.、B双方，使得A向B发送签名的消息P，提供以下服务：①B可以验证消息P确实是来源于A；②A不能否认发送过消息P；③B不能编造或改变消息P。数字签名首先需要生成消息摘要，使用非对称加密算法以及私钥对摘要进行加密。接收方使用发送放的公钥对消息摘要进行验证。","analysis":"D"},{"product_id":"201611210939232267508","ans":"设备防雷击属于物理线路安全措施，入侵检测和流量控制属于网络安全措施，漏洞发现与补丁管理属于系统安全措施。","analysis":"C"},{"product_id":"201611210939232578623","ans":"发明专利权的期限为二十年，实用新型专利权和外观设计专利权的期限为十年，均自申请日起计算。专利保护的起始日是从授权日开始，有下列情形之一的，专利权在期限届满前终止：①没有按照规定缴纳年费的；②专利权人以书面声明放弃其专利权的。还有—种情况就是专利期限到期，专利终止时，保护自然结束。商标权保护的期限是指商标专用权受法律保护的有效期限。我国注册商标的有效期为十年，自核准注册之日起计算。注册商标有效期满可以续展；商标权的续展是指通过指定程序，延续原注册商标的有效期限，使商标注册人继续保持其注册商标的专用权。在著作权的期限内，作品受著作权法保护；著作权期限届满，著作权丧失，作品进入公有领域。法律上对商业秘密的保密期限没有限制，只要商业秘密的四个基本特征没有消失，权利人可以将商业秘密一直保持下去。权利人也可以根据实际状况，为商业秘密规定适当的期限。","analysis":"B"},{"product_id":"201611210939232732690","ans":"当两个以上的申请人分别就同样的发明创造申请专利的，专利权授给最先申请的人。如果两个以上申请人在同一日分别就同样的发明创造申请专利的，应当在收到专利行政管理部门的通知后自行协商确定申请人。如果协商不成，专利局将驳回所有申请人的申请，即均不授予专利权。我国专利法规定：“两个以上的申请人分别就同样的发明创造申请专利的，专利权授予最先申请的人。”我国专利法实施细则规定：“同样的发明创造只能被授予一项专利。依照专利法第九条的规定，两个以上的申请人在同一日分别就同样的发明创造申请专利的，应当在收到国务院专利行政部门的通知后自行协商确定申请人。”","analysis":"D"},{"product_id":"201611210939233041386","ans":"我国商标注册以申请在先为原则，使用在先为补充。当两个或两个以上申请人在同一种或者类似商品上申请注册相同或者近似商标时，申请在先的人可以获得注册。对于同日申请的情况，商标法及其实施条例规定保护先用人的利益，使用在先的人可以获得注册“使用”包括将商标用于商品-、商品包装、容器以及商品交易书或者将商标用于广告宣传、展览及其他商业活动中。如果同日使用或均未使用，则采取申请人之间协商解决，不愿协商或者协商不成的，由各申请人抽签决定。商标局通知各申请人以抽签的方式确定一个申请人，驳回其他人的注册申请。商标局已经通知但申请人未参加抽签的，视为放弃申请。","analysis":"B"},{"product_id":"201611210939233357955","ans":"音调（Pitch）用来表示人的听觉分辨.个声音的调子高低的程度，主要由声音的频率决定，同时也与声音强度有关。对一定强度的纯音，音调随频率的升降而升降；对定频率的纯音、低频纯音的音调随声强增加而下降，高频纯者的音调却随强度增加而上升。音色（Timbre）是指声音的感觉特性，不同的人声和不同的声响都能区分为不同的音色，即音频泛音或谐波成分。音高是指各种不同高低的声音.（即首的高度），是首的基本特征的一种。在FM方式音乐合成器中，数字载波波形和调制波形有很多种，不同型号的FM合成器所选用的波形也不同。各种不同乐音的产生是通过组合各种波形和各种波形参数并采用各种不同的方法实现的。改变数字载波频率可以改变乐音的音调，改变它的幅度可以改变乐音的音高。","analysis":"A"},{"product_id":"201611210939233515169","ans":"音调（Pitch）用来表示人的听觉分辨.个声音的调子高低的程度，主要由声音的频率决定，同时也与声音强度有关。对一定强度的纯音，音调随频率的升降而升降；对定频率的纯音、低频纯音的音调随声强增加而下降，高频纯者的音调却随强度增加而上升。音色（Timbre）是指声音的感觉特性，不同的人声和不同的声响都能区分为不同的音色，即音频泛音或谐波成分。音高是指各种不同高低的声音.（即首的高度），是首的基本特征的一种。在FM方式音乐合成器中，数字载波波形和调制波形有很多种，不同型号的FM合成器所选用的波形也不同。各种不同乐音的产生是通过组合各种波形和各种波形参数并采用各种不同的方法实现的。改变数字载波频率可以改变乐音的音调，改变它的幅度可以改变乐音的音高。","analysis":"C"},{"product_id":"201611210939233825339","ans":"本题考查软件设计的基础知识。结构化设计主要包括：①体系结构设计：定义软件的主要结构元素及其关系。②数据设计：基于实体联系图确定软件涉及的文件系统的结构及数据库的表结构。③接口设计：描述用户界面，软件和其他硬件设备、其他软件系统及使用人员的外部接口，以及各种构件之间的内部接口。④过程设计：确定软件各个组成部分内的算法及内部数据结构，并选定某种过程的表达形式来描述各种算法。","analysis":"D"},{"product_id":"201611210939234133521","ans":"本题考查敏捷方法的基础知识。在20世纪W年代后期，一些开发人员抵制严格化软件开发过程，试图强调灵痹性在快速有效的软件傘产中的作用：，提出了敏捷宣言，即个人和交互胜过过程和工具；可以运行的软件胜过面面俱到的文档；与客户合作胜过合同谈判；对变化的反应胜过遵循计划。基于这些基本思想，有很多敏捷过程的典型方法。其中，极限编程XP是激发开发人员创造性、使得管理负担最小的一组技术；水晶法Crystal认为每一个不同的项目都需要一套不同的策略、约定和方法论；并列争球法（Scrum）使用迭代的方法，其中把每30天一次的迭代成为一个冲刺，并按需求的优先级来实现产品。多个自组织和自治小组并行地递增实现产品，并通过简短的日常情况会议进行协调。自适应软件开发（ASD）有六个基本的原则：①在自适应软件开发中，有一个使命作为指导，它设立了项目的目标，但并不描述如何达到这个目标；②特征被视为客户键值的关键，因此，项0是围绕着构造的构件来组织并实现特征；③过程中的迭代是很重要的因此重做与做同样重要，变化也包含其中；④变化不视为是一种更正，而是对软件开发实际情况的调整；⑤确定的交付时间迫使开发人员认证考虑每一个生产版本的关键需求；⑥风险也包含其中，它使开发人员首先跟踪最艰难的问题。","analysis":"C"},{"product_id":"201611210939234296248","ans":"本题考査软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-B-C-E-F-J和A-B-D-G-F-J，其长度为18。关键路径上的活动均为关键活动。活动BC在关键路径上，因此松弛时间为0。活动BF不在关键路径±，包含该活动的最长路径为A-B-F-J，其长度为11，因此该活动的松弛时间为18-11=7。","analysis":"D"},{"product_id":"201611210939234603348","ans":"本题考査软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-B-C-E-F-J和A-B-D-G-F-J，其长度为18。关键路径上的活动均为关键活动。活动BC在关键路径上，因此松弛时间为0。活动BF不在关键路径±，包含该活动的最长路径为A-B-F-J，其长度为11，因此该活动的松弛时间为18-11=7。","analysis":"A"},{"product_id":"201611210939234923159","ans":"本题考查软件项目管理的基础知识。存在多种软件项目管理的成本估算方法。其中专家估算方法主要依赖于专家的背景和经验，具有较大的主观性。Wolverton模型基于一个成本矩阵，定义不同的软件类型（如控制、输入/输出等）和难易（容易和困难）的成本，基于此计算软件开发的成本。COCOMO模型将规模视为成本的主要因素，考虑多个成本驱动因子。在后来的版本COCOMOII中，还考虑了软件开发的不同阶段，包含三个阶段性模型，即应用组装模型、早期设计阶段模型和体系结构阶段模型。","analysis":"D"},{"product_id":"201611210939235233011","ans":"本题考查逻辑运算知识。由“逻辑与”“逻辑或”运算构造的逻辑表达可采用短路计算的方式求值。“逻辑与”运算“&&”的短路运算逻辑为：a&&b为真当且仅当a和b都为真，当a为假，无论b的值为真还是假，该表达式的值即为假，也就是说此时不需要再计算b的值。“逻辑或”运算“||”的短路运算逻辑为：a||b为假当且仅当a和b都为假，当a为真，无论b的值为真还是假，该表达式的值即为真，也就是说此时不需要再计算b的值。对逻辑表达式“x&&（y（||！z）”进行短路计算方式求值时，x为假则整个表达式的值即为假，不需要计算y和z的值。若x的值为真，则再根据y的值决定是否需要计算z的值，y为真就不需要计算Z的值，y为假则需要计算z的值。","analysis":"B"},{"product_id":"201611210939239926692","ans":"本题考查程序语言基础知识。传值调用和引用调用是常用的两种参数传递方式。在传值调用方式下，是将实参的值传递给形参，该传递是单方向的，调用结束后不会再将形参的值传给实参。在引用调用方式下，实质上是将实参的地址传递给形参，借助指针在间接访问数据方式下（或者将形参看作是实参的别名），在被调用函数中对形参的修改实质上是对实参的修改。","analysis":"C"},{"product_id":"201611210939240073471","ans":"本题考查数据存储知识。二维数组a[1..N，1..N]用来表示一个N*N的方阵，主对角线上元素的行下标和列下标相同，以4*4的矩阵为例，如下图所示。对于主对角线中的元素，无论按行方式排列还是按列方式排列，其在序列中的位置都是相同的。","analysis":"B"},{"product_id":"201611210939240384547","ans":"本题考查操作系统基础知识。实时是指计算机对于外来信息能够以足够快的速度进行处理，并在被控对象允许的时间范围内做出快速响应。因此，实时操作系统与分时操作系统的第一点区别是交互性强弱不同，分时系统交互型强，实时系统交互性弱但可靠性要求高；第二点区别是对响应时间的敏感牲强，对随机发生的外部事件必须在被控制对象规定的时间做出及时响应并对其进行处理；第三点区别是系统的设计目标不同，分时系统是设计成一个多用方的通用系统，交互能力强；而实时系统大都是专用系统。","analysis":"D"},{"product_id":"201611210939240701518","ans":"本题考蜜操作系统基础知识。前趋图是一个有向无环图，由节点和有向边组成，节点代表各程序段的操作，而节点间的有向边表示两个程序段操作之间存在的前趋关系（“→”）。程序段Pi和Jj的前趋关系可表示成Pi→Pj，其中Pi是Pj的前趋，Pj是Pi的后继，其含义是Pi执行结束后Pj才能执行。本题完整的前趋图如下图所示，具体分析如下。根据题意，I1执行结束后C1才能执行，P1执行结束后P2才能执行，因此I1是C1的前趋，P1是P2的前趋。可见，①、②分别为C1、P2。根据题意，I2执行结束后I3才能执行，即I2是I3前趋，所以③应为I3。又因为计算机系统中只有一个CPU和一台输出设备，所以C3执行结束后C4才能执行，C3是C4的前趋；P3执行结束后P4才能执行，P3是P4的前趋。经分析可知图中③、④、⑤。","analysis":"C"},{"product_id":"201611210939241014354","ans":"本题考蜜操作系统基础知识。前趋图是一个有向无环图，由节点和有向边组成，节点代表各程序段的操作，而节点间的有向边表示两个程序段操作之间存在的前趋关系（“→”）。程序段Pi和Jj的前趋关系可表示成Pi→Pj，其中Pi是Pj的前趋，Pj是Pi的后继，其含义是Pi执行结束后Pj才能执行。本题完整的前趋图如下图所示，具体分析如下。根据题意，I1执行结束后C1才能执行，P1执行结束后P2才能执行，因此I1是C1的前趋，P1是P2的前趋。可见，①、②分别为C1、P2。根据题意，I2执行结束后I3才能执行，即I2是I3前趋，所以③应为I3。又因为计算机系统中只有一个CPU和一台输出设备，所以C3执行结束后C4才能执行，C3是C4的前趋；P3执行结束后P4才能执行，P3是P4的前趋。经分析可知图中③、④、⑤。","analysis":"D"},{"product_id":"201611210939241324121","ans":"本题考查操作系统页式存储管理方面的基础知识。从图中可见，页内地址的长度是13位，213=8192，即8K；页号部分的地址长度是11位，每个段最大允许有211=2048个页；段号部分的地址长度是8位，28=256，最多可有256个段。","analysis":"B"},{"product_id":"201611210939241486108","ans":"本题考查操作系统PV操作方面的基础知识。系统采用PV操作实现进程同步与互斥，若有n个进程共享3台扫描仪，那么信号量S初值应为3。若系统当前信号量S的值为-1，此时，P1，P2又分别执行了1次P（S）操作，那么程序执行P（S）操作时，信号量S的值减1后等于-2；当P2进程执行P（S）操作时，信号量S的值减1后等于-3。","analysis":"B"},{"product_id":"201611210939241794054","ans":"本题考查操作系统文件管理方面的基础知识。根据题意，若磁盘的容量为300GB，物理块的大小为1MB，则该磁盘的物理块数为300*1024=307200个，位示图的大小为307200/32=9600个字。","analysis":"D"},{"product_id":"201611210939242107481","ans":"本题考查软件开发过程模型的基础知识。瀑布模型将开发阶段描述为从一个阶段瀑布般地转换到另一个阶段的过程。原型模型中，开发人员快速地构造整个系统或者系统的一部分以理解或澄清问题。增量模型是把软件产品作为一系列的增量构件来设计、编码、集成和测试，每个构件由多个相互作用的模块组成，并且能够完成特定的功能。喷泉模型开发过程中以用户需求为动力，以对象为驱动，适合于面向对象的开发方法。在上述几种开发过程模型中，瀑布模型不能适应变化的需求。","analysis":"A"},{"product_id":"201611210939242428873","ans":"本题考查软件开发过程模型的基础知识。瀑布模型将开发阶段描述为从一个阶段瀑布般地转换到另一个阶段的过程。原型模型中，开发人员快速地构造整个系统或者系统的一部分以理解或澄清问题。增量模型是把软件产品作为一系列的增量构件来设计、编码、集成和测试，每个构件由多个相互作用的模块组成，并且能够完成特定的功能。喷泉模型开发过程中以用户需求为动力，以对象为驱动，适合于面向对象的开发方法。在上述几种开发过程模型中，瀑布模型不能适应变化的需求。","analysis":"C"},{"product_id":"201611210939242737931","ans":"本题考查软件质量的塞础知识。ISO/IEC软件质量模型定义了六个软件质量特性，即功能性、可靠性、易使用性、效率、可维护性和可移植性。对每个质量特性定义其子特性。其中可移植性包括子特性：适应性、易安装性、一致性和易替换性。","analysis":"D"},{"product_id":"201611210939242886292","ans":"本题考查软件测试的基础知识。白盒测试和黑盒测试是两种最常用的软件测试方法。路径覆盖是白盒测试的一种具体方法。路径覆盖是指设计若干个测试用例，覆盖程序中的所有路径。路径覆盖应使程序中每一条可能的路径至少执行一次。该流程图中一共有六条路径：①②③④⑤⑥⑦⑧，①②③④⑤⑥⑧，①②③⑤⑥⑦⑧，①②③⑤⑥⑧，①②⑥⑦⑧，①②⑥⑧，因此，实现路径覆盖至步需要6个测试用例。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V（G）=m-n+2，图中m=10，n=8，V（G）=10-8+2=4。","analysis":"C"},{"product_id":"201611210939243206558","ans":"本题考查软件测试的基础知识。白盒测试和黑盒测试是两种最常用的软件测试方法。路径覆盖是白盒测试的一种具体方法。路径覆盖是指设计若干个测试用例，覆盖程序中的所有路径。路径覆盖应使程序中每一条可能的路径至少执行一次。该流程图中一共有六条路径：①②③④⑤⑥⑦⑧，①②③④⑤⑥⑧，①②③⑤⑥⑦⑧，①②③⑤⑥⑧，①②⑥⑦⑧，①②⑥⑧，因此，实现路径覆盖至步需要6个测试用例。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V（G）=m-n+2，图中m=10，n=8，V（G）=10-8+2=4。","analysis":"D"},{"product_id":"201611210939243514643","ans":"本题考查软件质量基础知识。可靠性、可用性和可维护性是软件的质量属性，软件工程中，用0-1之间的数来度量。可靠性是指一个系统对于给定的时间间隔内、在给定条件下无失效运作的概率。可以用MTTF/（1+MTTF）来度量，其中MTTF为平均无故障时间。可用性是在给定的时间点上，一个系统能够按照规格说明正确运作的概率。可以用MTBF/（1+MTBF）来度量，其中MTBF为平均失效间隔时间。可维护性是在给定的使用条件下，在规定的时间间隔内，使用规定的过程和资源完成维护活动的概率。可以用1/（1+MTTR）来度量，其中MTTR为平均修复时间。","analysis":"B"},{"product_id":"201611210939243677526","ans":"本题考查软件测试的基础知识。在设计测试用例时应考虑输入数据和预期输出结果、在设计测试用例时，应该包括合理的输入条件、在设计测试用例时，应该包括不合理的输入条件选项都与测试用例的基本概念相关，每个测试用例应该包含输入数据和预期输出结果。在设计测试用例时，要包含合理的输入和不合理的输入。因此，这三个选项均正确。软件测试的目的是发现更多的错误，而不是证明软件的正确性。","analysis":"B"},{"product_id":"201611210939243982520","ans":"本题考查软件设计的基础知识。模块间的耦合和模块的内聚是度量模块独立性的两个准则。内聚是模块功能强度的度量，即模块内部各个元素彼此结合的紧密程度。一个模块内部各个元素之间的紧密程度越高，则其内聚性越高，模块独立性越好。模块内聚类型主要有以下几类：偶然内聚，巧合内聚：指一个模块内的各处理元素之间没有任何联系。逻辑内聚：指模块内执行若干个逻辑上相似的功能，通过参数确定该模块完成哪一个功能。时间内聚：把需要同时执行的动作组合在一起形成的模块。过程内聚：指一个模块完成多个任务，这些任务必须按指定的过程执行。通信内聚：指模块内的所有处理元素都在同一个数据结构上操作，或者各处理使用相同的输入数据或产生相同的输出数据。顺序内聚：指一个模块中的各个处理元素都密切相关于同—个功能且必须顺序执行，前一个功能元素的输出就是下一功能元素的输入。功能内聚：指模块内的所有元素共同作用完成一个功能，缺一不可。本题中，逻辑和过程对相同的数据结构操作，属于通信内聚。","analysis":"C"},{"product_id":"201611210939244132189","ans":"本题考查面向对象的基础知识。在面向对象系统中，对象是基本的运行时实体，它既包括数据（属性），也包括作用于数据的操作（行为），访问对象的这些操作也称为接口。1组大体上相似的对象定义为一个类。一个类所包含的方法和数据描述一组对象的共同行为和属性，这些对象共享这些行为和属性。有些类之间存在一般和特殊关系，在定义和实现一个类的时候，可以在一个已经存在的类的基础上来进行，把这个已经存在的类所定义的内容作为自己的内容，并加入新的内容，这种机制就是父类和子类之间共享数据和方法的机制，即继承。在子类定义时，可以继承它的父类（或祖先类）中的属性和方法，也可以重新定义父类中已经定义的方法，其方法可以对父类中方法进行覆盖，即在原有父类接口的基础上，用适合于自己要求的实现去置换父类中的相应实现。在继承的支持下，不同对象在收到同一消息是可以产生不同的结果，这是由于对通用消息的实现细节由接收对象自行决定的缘故，这就是多态。","analysis":"D"},{"product_id":"201611210939244453180","ans":"本题考查面向对象的基本知识。多态的实现受到继承的支持，利用类的继承的层次关系，把具有通用功能的消息存放在高层次，而不同的实现这一功能的行为放在较低层次。一个对象发送通用消息请求服务时，要根据接收对象的具体情况将求的操作与实现的方法进行连接，即动态绑定，以实现在这些低层次上生成的对传给用消息以不同的响应。","analysis":"D"},{"product_id":"201611210939244766504","ans":"本题考查面向对象的基本知识。面向对象分析的目的是为了获得对应用问题的理解，以确定系统的功能、性能要求。面向对象分析方法是将数据和功能结合在一起作为一个综合对象来考虑。面向对象分析技术可以将系统的行为和信息间的关系表示为迭代构造特征。面向对象分析包含5个活动：认定对象、组织对象、描述对象间的相互作用、定义对象的操作、定义对象的内部信息。","analysis":"C"},{"product_id":"201611210939245072952","ans":"本题考査面向对象和统一建模语（UML）的基础知识。状态图（statediagram）展现了一个状态机，用于描述一个对象在其生存期间的动态行为，表现为4个对象所经历的状态序列，它由状态、转换、事件和活动组成。状态图关注系统的动态视图，它对于接口、类和协作的行为建模尤为重要强调对象行为的事件顺序。状态图通常包括简单状态和组合状态、转换（事件和动作）。可以用状态图对系统的动态方面建模。这些动态方面可以包括出现在系统体系结构的任何视图中的任何一种对象的按事件排序的行为，这些对象包括类（各主动类）、接口、构件和节点。当对象处于某个状态时，这个状态被称为徼活状态（activestate）。任何从激活状态出发的转换所标识的事件被检测到发生时，进行转换，而从当前状态出发的事件如果没有标注所检测到的事件名称，就忽略该事件，不激发任何转换，当前状态仍然是激活状态。本题叙述中图示状态B内嵌套了B1、B2、B3和B4。咨激活状态是B且内嵌为状态B2时，如果发生事件e2，则转移到C3状态；如果当前激活状态B的子状态不是B2，则事件e2发生后，不激发状态转换。当激活状态为B时，不论内嵌状态是哪个，则发生事件e1后，激活状态转换到C1；或者B中内嵌的两个结束状态均达到时，会离开状态B。","analysis":"C"},{"product_id":"201611210939245387134","ans":"本题考查面向对象和统一建模语言（UML）的基础知识。状态图（statediagram）展现了一个状态机，关注系统的动态视图，强调对象行为的事件顺序引起的对象状态变化。一般情况下，活动可以在状态转换时执行，也可以走状态内执行。检测到事件可能导致对象从一个状态移动到另一个状态，这样的移动即为转换，即事件触发转换，这样能引起转换的事件称为触发器。事件发生时，检查监护条件，如果满足相应的事件，则进行相应的转换，如果都没满足，则此事件没有引起状态的改变。","analysis":"C"},{"product_id":"201611210939245705106","ans":"本题考查统一建模语言（UML）的基础知识。一个类定义了一组大体上相似的对象。一个类所包含的方法和数据描述一组对象的共同行为和属性。把—组对象的共同特征加以抽象并存储在一个类中的能力，是面向对象技术最重要的一点。类图（classdiagram）展现了一组对象、接口、协作和它们之间的关系。在面向对象系统的建模中所建立的最常见的图就是类图。类图给出系统的静态设计视图。包含主动类的类图给出了系统的静态进程视图。类图中通常包括类、接、口、协作、依赖、泛化和关联关系等内容（如下图所示）。类图中也可以包含注解和约束。类图还可以含有包或子系统，二者都用于把模型元素聚集成更大的组块。在关联关系中，还可能拥有一些特性，构成类特性，即可看作是一个拥有关联特性的类，该关系兼具关联和类的特色。它定义了用于连接一些分类器，还定义属于关联关系本身的特性，这些特性只属亍关联关系本身。例如要建模员工（Person）和公司（Company）之间的工作关系，有一个重要的属性是工作岗位及其岗位工资。如果将岗位工资属性放在Person类和Company类都不合适，这一属性应该放在关联关系上，这样就需要建模一个关联类Job，用来设置岗位和岗位工资。本题叙述中，一名医生（Doctor）可以治疗多位病人（Patient），—位病人可以由多名医生治疗，这样，医生类和病人类之间的关联关系的两端多童度均为多（*）。另外，一名医生可能多次治疗同一位病人，那么，要记录哪名医生治疗哪位病人时，霈要存储治疗（Treatment）的日期和时间。这一治疗日期和时间属性放在医生类和病人类都不合适，所以这一属性应该放在关联关系上，构成关联类治疗（Treatment），并且一名医生可以多次治疗同，位病人，所以医生和病人组合并不唯一（non-unique）。","analysis":"C"},{"product_id":"201611210939246013967","ans":"本题考查统一建模语言（UML）的基础知识。一个类定义了一组大体上相似的对象。一个类所包含的方法和数据描述一组对象的共同行为和属性。把—组对象的共同特征加以抽象并存储在一个类中的能力，是面向对象技术最重要的一点。类图（classdiagram）展现了一组对象、接口、协作和它们之间的关系。在面向对象系统的建模中所建立的最常见的图就是类图。类图给出系统的静态设计视图。包含主动类的类图给出了系统的静态进程视图。类图中通常包括类、接、口、协作、依赖、泛化和关联关系等内容（如下图所示）。类图中也可以包含注解和约束。类图还可以含有包或子系统，二者都用于把模型元素聚集成更大的组块。在关联关系中，还可能拥有一些特性，构成类特性，即可看作是一个拥有关联特性的类，该关系兼具关联和类的特色。它定义了用于连接一些分类器，还定义属于关联关系本身的特性，这些特性只属亍关联关系本身。例如要建模员工（Person）和公司（Company）之间的工作关系，有一个重要的属性是工作岗位及其岗位工资。如果将岗位工资属性放在Person类和Company类都不合适，这一属性应该放在关联关系上，这样就需要建模一个关联类Job，用来设置岗位和岗位工资。本题叙述中，一名医生（Doctor）可以治疗多位病人（Patient），—位病人可以由多名医生治疗，这样，医生类和病人类之间的关联关系的两端多童度均为多（*）。另外，一名医生可能多次治疗同一位病人，那么，要记录哪名医生治疗哪位病人时，霈要存储治疗（Treatment）的日期和时间。这一治疗日期和时间属性放在医生类和病人类都不合适，所以这一属性应该放在关联关系上，构成关联类治疗（Treatment），并且一名医生可以多次治疗同，位病人，所以医生和病人组合并不唯一（non-unique）。","analysis":"A"},{"product_id":"201611210939246175154","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图和适用情况。命令（Command）将一个请求封装为一个对象，从而使得可以用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。命令模式适用于以下几种情况：①抽象出待执行的动作以参数化某对象，此模式是过程语言中的回调（callback）机制的一个面向对象的替代方式；②在不同的时刻指定、排列和执行请求；③支持取消操作；④支持修改日志，这样当系统崩溃时，这些修改可以被重做一遍；⑤用构建在原语操作上的高层操作构造一个系统。责任链（ChainofResponsibility）使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。责任链模式适用于以下几种情况：①有多个的对象可以处理一个请求，哪个对象处理该请求在运行时刻自动确定；②在不明确指定接收者的情况下，向多个对象中的一个提交一个请求；③可处理一个请求的对象集合应被动态指定。观察者（Observer）模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。观察者适用于以下几种情况：①当一个抽象模型有两个方面，其中一个方面依赖于另一个方面，将这两者封装在独立地对象中以使它们可以各自独立地改变和复用；②当对一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变时；③当一个对象必须通知其他对象，它又不能假定其他对象是谁，即：不希望这些对象是紧耦合的。策略（Strategy）定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化a策略模式适用于以下几种情况：①许多相关的类仅仅是行为有异。“策略”提供了一种用多个行为中的一个行为来配置一个类的方法；②需要使用一个算法的不同变体。例如，定义一些反应不同空间的空间/时间权衡的算法。当这些变体实现为一个算法的类层次时，可以使用策略模式；③算法使用客户不应该知道的数据。可使用策略模式以避免暴露复杂的、与算法相关的数据结构；④一个类定义了多种行为，并且这些行为在这个类的操作中以多个条件语句的形式出现，将相关的条件分支移入它们各自的Strategy类中，以代替这些条件语旬。","analysis":"D"},{"product_id":"201611210939246487710","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图和适用情况。命令（Command）将一个请求封装为一个对象，从而使得可以用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。命令模式适用于以下几种情况：①抽象出待执行的动作以参数化某对象，此模式是过程语言中的回调（callback）机制的一个面向对象的替代方式；②在不同的时刻指定、排列和执行请求；③支持取消操作；④支持修改日志，这样当系统崩溃时，这些修改可以被重做一遍；⑤用构建在原语操作上的高层操作构造一个系统。责任链（ChainofResponsibility）使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。责任链模式适用于以下几种情况：①有多个的对象可以处理一个请求，哪个对象处理该请求在运行时刻自动确定；②在不明确指定接收者的情况下，向多个对象中的一个提交一个请求；③可处理一个请求的对象集合应被动态指定。观察者（Observer）模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。观察者适用于以下几种情况：①当一个抽象模型有两个方面，其中一个方面依赖于另一个方面，将这两者封装在独立地对象中以使它们可以各自独立地改变和复用；②当对一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变时；③当一个对象必须通知其他对象，它又不能假定其他对象是谁，即：不希望这些对象是紧耦合的。策略（Strategy）定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化a策略模式适用于以下几种情况：①许多相关的类仅仅是行为有异。“策略”提供了一种用多个行为中的一个行为来配置一个类的方法；②需要使用一个算法的不同变体。例如，定义一些反应不同空间的空间/时间权衡的算法。当这些变体实现为一个算法的类层次时，可以使用策略模式；③算法使用客户不座该知道的数据。可使用策略模式以避免暴露复杂的、与算法相关的数据结构；④一个类定义了多种行为，并且这些行为在这个类的操作中以多个条件语句的形式出现，将相关的条件分支移入它们各自的Strategy类中，以代替这些条件语旬。","analysis":"C"},{"product_id":"201611210939246799525","ans":"本题考查设计模式的基本概念。每种设计模式都集中于一个特定的面向对象设计问题或设计要点，有特定的意图和适用情况。生成器（Builder）模式将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。生成器模式适用于以下几种情况：①当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时；②当构造过程必须允许被构造的对象有不同的表示时。工厂方法（FactoryMethod）定义一个用于创建对象的接口，让子类决定将哪一个类实例化，使一个类的实例化延迟到其子类。工厂方法适用于以下几种情况：①当一个类不知道它所必须创建的对象的类的时候；②当一个类希望由它的子类来指定它所创建的对象的时候；③当类将创建对象的职责委托给多个帮助子类中的某一个，并且你希望将哪一个帮助子类是代理者这一信息局部化的时候。原型（Prototype）模式用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。原型模式适用于以下几种情况：①当一个系统应该独立于它的产品创建、构成和表示时；②当要实例化的类是在运行时刻指定时，例如，通过动态装载；③为了避免创建一个与产品类层次平行的工厂类层次时；④当一个类的实例只能有几个不同状态组合中的一种时，建立相应数目的原型并克隆它们可能比每次用合适的状态手工实例化该类更方便一些。单例（Singleton）设计模式是一种创建型模式，其意图是保证一个类仅有一个实例，并提供一个访问这个唯一实例的全局访问点。单例模式适用于以下情况：①当类只能有一个实例而且客户可以从一个众所周知的访问点访问它时；②当这个唯一实例应该是通过子类化可扩展的，并且客户应该无须更改代码就能使用一个扩展的实例时。","analysis":"A"},{"product_id":"201611210939247108408","ans":"本题考查设计模式的基本概念。每种设计模式都集中于一个特定的面向对象设计问题或设计要点，有特定的意图和适用情况。生成器（Builder）模式将_个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。生成器模式适用于以下几种情况：①当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时；②当构造过程必须允许被构造的对象有不同的表示时。工厂方法（FactoryMethod）定义一个用于创建对象的接口，让子类决定将哪一个类实例化，使一个类的实例化延迟到其子类。工厂方法适用于以下几种情况：①当一个类不知道它所必须创建的对象的类的时候；②当一个类希望由它的子类来指定它所创建的对象的时候；③当类将创建对象的职责委托给多个帮助子类中的某一个，并且你希望将哪一个帮助子类是代理者这一信息局部化的时候。原型（Prototype）模式用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。原型模式适用于以下几种情况：①当一个系统应该独立于它的产品创建、构成和表示时；②当要实例化的类是在运行时刻指定时，例如，通过动态装载；③为了避免创建一个与产品类层次平行的工厂类层次时；④当一个类的实例只能有几个不同状态组合中的一种时，建立相应数目的原型并克隆它们可能比每次用合适的状态手工实例化该类更方便一些。单例（Singleton）设计模式是一种创建型模式，其意图是保证一个类仅有一个实例，并提供一个访问这个唯一实例的全局访问点。单例模式适用于以下情况：①当类只能有一个实例而且客户可以从一个众所周知的访问点访问它时；②当这个唯一实例应该是通过子类化可扩展的，并且客户应该无须更改代码就能使用一个扩展的实例时。","analysis":"A"},{"product_id":"201611210939247423628","ans":"本题考查程序语言知识。正规式（b|ab）表示的正规集为{b，ab}，（b|ab）*表示的正规集为{ε，b，ab，bb，bab，abb，abab，bbb，bbab，babb，babab，abbb，abbab，ababb，ababab，...}，用自然语言描述就是每个a后面都至少有1个b。正规式（ab*）表示的正规集为{ε，a，ab，abb，abbb，abbbb，…}，（ab*）*表示的正规集为{aa，aab，aabb，aabbb，aabbbb，aba，abba，abbba，abab，abbab，...}，用自然语言描述就是除了空串，每个串中都至少有1个a。正规式（a*b*）*和（a|b）*是等价的，它们都表示{ε，a，b，aa，ab，ba，bb，am，aab，aba，abb，baa，bab，bab，bbb，，用自然语言描述就是用a、b构成的任何字符串。","analysis":"A"},{"product_id":"201611210939247577546","ans":"本题考查程序语言知识。程序语言的大多数语法现象可用乔姆斯基的上下文无关文法描述。","analysis":"B"},{"product_id":"201611210939247887332","ans":"本题考查程序语言知识。代码段中“for（；k<100；）；”的循环体为空语句，循环条件中的k值在循环中没有改变，因此“k<100”是一直成立的，此代码段是无限循环的，只有运行时才能表现出来，属于动态语义错误。","analysis":"D"},{"product_id":"201611210939248202324","ans":"本题考查数据库安全控制方面的基础知识。数据库管理系统的安全措施有3个方面：①权限机制：通过权限机制，限定用户对数据的操作权限，把数据的操作限定在具有指定权限的用户范围内，以保证数据的安全。在标准SQL中定义了授权语句GRANT来实现权限管理。②视图机制：通过建立用户视图，用户或应用程序只能通过视图来操作数据，保证了视图之外的数据的安全性。③数据加密：对数据库中的数据进行加密，可以防止数据在存储和传输过程中失密。","analysis":"B"},{"product_id":"201611210939248516435","ans":"本题考查关系数据库规范化理论方面的基础知识。根据题意，F={A1→A2，A1A2→A3，A1→A4，A2→A4}，}，不难得出属性A1A2决定全属性U，所以A1A2为候选关键字。由于A1→A2，A2→A4可以推出A1A4（传递率），所以函数依赖集A1→A4是冗余的。","analysis":"B"},{"product_id":"201611210939248676214","ans":"本题考查关系数据库规范化理论方面的基础知识。根据题意，F={A1→A2，A1A2→A3，A1→A4，A2→A4}，}，不难得出属性A1A2决定全属性U，所以A1A2为候选关键字。由于A1→A2，A2→A4可以推出A1A4（传递率），所以函数依赖集A1→A4是冗余的。","analysis":"C"},{"product_id":"201611210939248987201","ans":"本题考查关系代数运算方面的基础知识。自然连接是一种特殊的等值连接，它要性列>第7个属性列（即R.B>S.E），同时满足第3个属性列=第6个属性列（即R.C=S.C）。选取运算σ1=5∧2>‘7’∧3=6（RxS）中的条件“2>‘7’”与题意不符，其含义是R.B的值大于7（属性列数字7加了单引号表示数值7），而不是R.B>S.E。求两个关系中进行比较的分量必须是相同的属性组，并且在结果集中去掉右边重复的属性列。对关系R和S进行自然连接运算后的属性列数为6个，即为R.A，R.B，R.C，R.D，S.E，S.F。","analysis":"C"},{"product_id":"201611210939249458387","ans":"本题考查关系代数运算方面的基础知识。自然连接是一种特殊的等值连接，它要性列>第7个属性列（即R.B>S.E），同时满足第3个属性列=第6个属性列（即R.C=S.C）。选取运算σ1=5∧2>‘7’∧3=6（RxS）中的条件“2>‘7’”与题意不符，其含义是R.B的值大于7（属性列数字7加了单引号表示数值7），而不是R.B>S.E。求两个关系中进行比较的分量必须是相同的属性组，并且在结果集中去掉右边重复的属性列。对关系R和S进行自然连接运算后的属性列数为6个，即为R.A，R.B，R.C，R.D，S.E，S.F。对于试题（55），R×S的结果集的属性列为R.A，R.B，R.C，R.D，S.A，S.C，S.E，S.F，选取运算σ是对关系进行横向运算，没有去掉重复属性列。选项B“π1，2，3，4，7，8（σ1=5∧2>7∧3=6（RxS））”的含义为R与S的笛卡儿积中选择第1个属性列=第5个属性列（即R.A=S.A），同时满足第2个属性","analysis":"B"},{"product_id":"201611210939249767139","ans":"本题考查关系代数运算方面的基础知识。关系代数表达式查询优化的原则如下：①提早执行选取运算。对于有选择运算的表达式，应优化成尽可能先执行选择运算的等价表达式，以得到较小的中间结果，减少运算量以及从外存读块的次数。②合并乘积与其后的选择堤算为连接运算。在表达式中，当乘积运算后面是选择运算时，应该合并为连接运算，使选择与乘积一道完成，以避免做完乘积后，需再扫描个大的乘积关系进行选择运算。③将投影运算与其后的其他运算同时进行，以避免重复扫描关系。④将投影运算和其前后的二目运算结合起来，使得没有必要为去掉某些字段再扫描一遍关系。⑤在执行连接前对关系适当地预处理，就能快速地找到要连接的元组。方法有两种：索引连接法、排序合并连接法。⑥存储公共子表达式。对于有公共子表达式的结果应存于外存（中间结果），这样，当从外存读出它的时闻比计算的时间少时，就可节约操作时间。显然，根据原则①尽量提早执行选取运算。","analysis":"D"},{"product_id":"201611210939250233647","ans":"本题考查数据结构基础知识。对有向无环图网进行拓扑排序的方法如下：①在AOV网中选择一个入度为零（没有前驱）的顶点v且输出它；②从网中删除该顶点v以及与该顶点有关的所有边；③重复上述两步，直至网中不存在入度为零的顶点为止。按照上述方法，拓扑序列的第一个顶点为4，执行①和②步之后的有向图如下图（a）所示。接下来再输出的顶点只能为1，因此执行①和②步之后的有向图如下图（b）所示。接下来再输出的顶点只能为2，因此①和②步之后的有向图如下图（c）所示。因此，拓扑序列为41235。","analysis":"A"},{"product_id":"201611210939250545073","ans":"本题考查数据结构基础知识。线性表是一个线性序列，在顺序存储方式下，若删除其中一个元素，需要将其后的元素逐个前移，使得元素之间没有空闲单元。表长为n时，共有n个可删除的元素，删除元素a1时需要移动n-1个元素，删除元素an时不需要移动元素，因此，等概率下删除一个元素时平均的移动元素次数Edelete为线性表若釆用单链表存储，插入和删除元素的实质都是对相关指针的修改，而不需要移动元素。","analysis":"B"},{"product_id":"201611210939250855635","ans":"本题考查数据结构基础知识。线性表是一个线性序列，在顺序存储方式下，若删除其中一个元素，需要将其后的元素逐个前移，使得元素之间没有空闲单元。表长为n时，共有n个可删除的元素，删除元素a1时需要移动n-1个元素，删除元素an时不需要移动元素，因此，等概率下删除一个元素时平均的移动元素次数Edelete为线性表若釆用单链表存储，插入和删除元素的实质都是对相关指针的修改，而不需要移动元素。","analysis":"A"},{"product_id":"201611210939251171961","ans":"本题考查数据结构基础知识。具有3个结点的二叉树有以下5种形态，如下图所示。","analysis":"C"},{"product_id":"201611210939251326184","ans":"本题考查数据结构基础知识。二叉查找树又称为p叉排序树或二叉检索树，它或者是一棵空树，或者是具有如下性质的二叉树：①若它的左子树非空，则左子树中所有结点的值均小于根结点的值；②若它的右子树非空，则右子树中所有结点的值均大于根结点的值；③左、右子树本身就是叉査找树。某二叉排序树如下图所示。以上图为例，对非空二叉排序树进行中序遍历，得到递增有序的序列，先序和后序序列则不是。二叉排序树中结点在左、右子树上的分布并不均匀，极端情况下，n个结点的二叉排序树的高度为n。以上图为例，从46到25的路径上的结点关键码序列为46，13，38，25，并不是一个有序序列。","analysis":"D"},{"product_id":"201611210939251957842","ans":"本题考查算法设计与分析的基础知识。题干中给出的实例的霍夫曼编码树如下图所示。根据该图，bee的编码为10111011101。而编码“110001001101”对应的字符序列则为face。","analysis":"A"},{"product_id":"201611210939252269790","ans":"本题考查算法设计与分析的基础知识。题干中给出的实例的霍夫曼编码树如下图所示。根据该图，bee的编码为10111011101。而编码“110001001101”对应的字符序列则为face。","analysis":"C"},{"product_id":"201611210939252427150","ans":"本题考查算法设计与分析的基础知识。矩阵链乘是一个最优化问题，求解n个矩阵相乘的最优加括号方式，可以用动态规划方法来求解。题目已经给出动态规划求解的递归式。根据上式计算m的值，同时记录k的值到s中。可以得到最优的加括号方式（（M1M2）（M3M4）），乘法次数为144。而根据该递归式自底向上求解时，应该用三重循环进行，即矩阵链长度i从1到n-1+1，矩阵链起始位置，即i从1到n-1+1，矩阵链分开的位置k，从i到j-1。因此时间复杂度为O（n3）。","analysis":"C"},{"product_id":"201611210939252735668","ans":"本题考查算法设计与分析的基础知识。矩阵链乘是一个最优化问题，求解n个矩阵相乘的最优加括号方式，可以用动态规划方法来求解。题目已经给出动态规划求解的递归式。根据上式计算m的值，同时记录k的值到s中。可以得到最优的加括号方式（（M1M2）（M3M4）），乘法次数为144。而根据该递归式自底向上求解时，应该用三重循环进行，即矩阵链长度i从1到n-1+1，矩阵链起始位置，即i从1到n-1+1，矩阵链分开的位置k，从i到j-1。因此时间复杂度为O（n3）。","analysis":"B"},{"product_id":"201611210939253041152","ans":"属于应用层协议的是简单网络管理协议SNMP，它的传输层协议是UDP。ARP和ICMP都属于网络层协议。X.25是分组交换网上的协议，也归于网络层。","analysis":"A"},{"product_id":"201611210939253356603","ans":"属于应用层协议的是简单网络管理协议SNMP，它的传输层协议是UDP。ARP和ICMP都属于网络层协议。X.25是分组交换网上的协议，也归于网络层。","analysis":"C"},{"product_id":"201611210939253675206","ans":"本题考查URL的基础知识。URL（UniformResourceLocator，统一资源定位符）是对互联网的资源位置和访问方法的一种简洁的表示，是互联网上资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。一个标准URL的格式如下：协议：//主机名.域名.域名后缀或IP地址（：端口号）/目录/文件名其中，目录可能是多级的。","analysis":"A"},{"product_id":"201611210939254458218","ans":"各种路由来源的管理距离如下表所示。如果路由器收到了由多个路由协议转发的、关于某个目标的多条路由，则比较各个路由的管理距离，并采用管理距离小的路由来源提供的路由信息。","analysis":"C"},{"product_id":"201611210939254764500","ans":"地址220.112.145.32/22的二进制形式是11011100.01110000.10010001.00100000地址220.112.145.64/22的二进制形式是11011100.01110000.10010001.01000000地址220.112.147.64/22的二进制形式是11011100.01110000.10010011.01000000地址220.112.177.64/22的二进制形式是11011100.01110000.10110001.01000000而地址220.112.179.92的二进制形式是11011100.01110000.10110011.01011100所以与地址220.112.179.92匹配的是220.112.177.64/22。","analysis":"D"},{"product_id":"201611210939255073441","ans":"规模上，软件实体可能比任何由人类创造的其他实体要复杂，因为没有任何两个软件部分是相同的（至少是在语句的级别）。如果有相同的情况，我们会把它们合并成供调用的子函数。在这个方面，软件系统与计算机、建筑或者汽车大不相同，后者往往存在着大量重复的部分。数字计算机本身就比人类建造的大多数东西复杂。计算机拥有大量的状态，这使得构思、描述和测试都非常困难。软件系统的状态又比计算机系统状态多若干个数量级。同样，软件实体的扩展也不仅仅是相同元素重复添加，而必须是不同元素实体的添加。大多数情况下，这些元素以非线性递增的方式交互，因此整个软件的复杂度以更大的非线性级数增长。软件的复杂度是必要属性，不是次要因素。因此，抽掉复杂度的软件实体描述常常也去掉了一些本质属性。数学和物理学在过去三个世纪取得了巨大的进步，数学家和物理学家们建立模型以简化复杂的现象，从模型中抽取出各种特性，并通过试验来验证这些特性。这些方法之所以可行一一是因为模型中忽略的复杂度不是被研究现象的必要属性。当复杂度是本质特性时，这些方法就行不通了。上述软件特有的复杂度问题造成了很多经典的软件产品开发问题。复杂度不仅仅导致技术上的困难，还引发了很多管理上的问题。","analysis":"C"},{"product_id":"201611210939255231592","ans":"规模上，软件实体可能比任何由人类创造的其他实体要复杂，因为没有任何两个软件部分是相同的（至少是在语句的级别）。如果有相同的情况，我们会把它们合并成供调用的子函数。在这个方面，软件系统与计算机、建筑或者汽车大不相同，后者往往存在着大量重复的部分。数字计算机本身就比人类建造的大多数东西复杂。计算机拥有大量的状态，这使得构思、描述和测试都非常困难。软件系统的状态又比计算机系统状态多若干个数量级。同样，软件实体的扩展也不仅仅是相同元素重复添加，而必须是不同元素实体的添加。大多数情况下，这些元素以非线性递增的方式交互，因此整个软件的复杂度以更大的非线性级数增长。软件的复杂度是必要属性，不是次要因素。因此，抽掉复杂度的软件实体描述常常也去掉了一些本质属性。数学和物理学在过去三个世纪取得了巨大的进步，数学家和物理学家们建立模型以简化复杂的现象，从模型中抽取出各种特性，并通过试验来验证这些特性。这些方法之所以可行一一是因为模型中忽略的复杂度不是被研究现象的必要属性。当复杂度是本质特性时，这些方法就行不通了。上述软件特有的复杂度问题造成了很多经典的软件产品开发问题。复杂度不仅仅导致技术上的困难，还引发了很多管理上的问题。","analysis":"A"},{"product_id":"201611210939255546131","ans":"规模上，软件实体可能比任何由人类创造的其他实体要复杂，因为没有任何两个软件部分是相同的（至少是在语句的级别）。如果有相同的情况，我们会把它们合并成供调用的子函数。在这个方面，软件系统与计算机、建筑或者汽车大不相同，后者往往存在着大量重复的部分。数字计算机本身就比人类建造的大多数东西复杂。计算机拥有大量的状态，这使得构思、描述和测试都非常困难。软件系统的状态又比计算机系统状态多若干个数量级。同样，软件实体的扩展也不仅仅是相同元素重复添加，而必须是不同元素实体的添加。大多数情况下，这些元素以非线性递增的方式交互，因此整个软件的复杂度以更大的非线性级数增长。软件的复杂度是必要属性，不是次要因素。因此，抽掉复杂度的软件实体描述常常也去掉了一些本质属性。数学和物理学在过去三个世纪取得了巨大的进步，数学家和物理学家们建立模型以简化复杂的现象，从模型中抽取出各种特性，并通过试验来验证这些特性。这些方法之所以可行一一是因为模型中忽略的复杂度不是被研究现象的必要属性。当复杂度是本质特性时，这些方法就行不通了。上述软件特有的复杂度问题造成了很多经典的软件产品开发问题。复杂度不仅仅导致技术上的困难，还引发了很多管理上的问题。","analysis":"B"},{"product_id":"201611210939255857098","ans":"规模上，软件实体可能比任何由人类创造的其他实体要复杂，因为没有任何两个软件部分是相同的（至少是在语句的级别）。如果有相同的情况，我们会把它们合并成供调用的子函数。在这个方面，软件系统与计算机、建筑或者汽车大不相同，后者往往存在着大量重复的部分。数字计算机本身就比人类建造的大多数东西复杂。计算机拥有大量的状态，这使得构思、描述和测试都非常困难。软件系统的状态又比计算机系统状态多若干个数量级。同样，软件实体的扩展也不仅仅是相同元素重复添加，而必须是不同元素实体的添加。大多数情况下，这些元素以非线性递增的方式交互，因此整个软件的复杂度以更大的非线性级数增长。软件的复杂度是必要属性，不是次要因素。因此，抽掉复杂度的软件实体描述常常也去掉了一些本质属性。数学和物理学在过去三个世纪取得了巨大的进步，数学家和物理学家们建立模型以简化复杂的现象，从模型中抽取出各种特性，并通过试验来验证这些特性。这些方法之所以可行一一是因为模型中忽略的复杂度不是被研究现象的必要属性。当复杂度是本质特性时，这些方法就行不通了。上述软件特有的复杂度问题造成了很多经典的软件产品开发问题。复杂度不仅仅导致技术上的困难，还引发了很多管理上的问题。","analysis":"D"},{"product_id":"201611210939256175472","ans":"规模上，软件实体可能比任何由人类创造的其他实体要复杂，因为没有任何两个软件部分是相同的（至少是在语句的级别）。如果有相同的情况，我们会把它们合并成供调用的子函数。在这个方面，软件系统与计算机、建筑或者汽车大不相同，后者往往存在着大量重复的部分。数字计算机本身就比人类建造的大多数东西复杂。计算机拥有大量的状态，这使得构思、描述和测试都非常困难。软件系统的状态又比计算机系统状态多若干个数量级。同样，软件实体的扩展也不仅仅是相同元素重复添加，而必须是不同元素实体的添加。大多数情况下，这些元素以非线性递增的方式交互，因此整个软件的复杂度以更大的非线性级数增长。软件的复杂度是必要属性，不是次要因素。因此，抽掉复杂度的软件实体描述常常也去掉了一些本质属性。数学和物理学在过去三个世纪取得了巨大的进步，数学家和物理学家们建立模型以简化复杂的现象，从模型中抽取出各种特性，并通过试验来验证这些特性。这些方法之所以可行一一是因为模型中忽略的复杂度不是被研究现象的必要属性。当复杂度是本质特性时，这些方法就行不通了。上述软件特有的复杂度问题造成了很多经典的软件产品开发问题。复杂度不仅仅导致技术上的困难，还引发了很多管理上的问题。","analysis":"C"}]},{"paperId":"420","field":"20161","question_list":[{"product_id":"20160719132711581","ans":"本题计算机系统基础知识。VLIW:(VeryLongInstructionWord，超长指令字)一种非常长的指令组合，它把许多条指令连在一起，增加了运算的速度。","analysis":"D"},{"product_id":"20160719132905940","ans":"本题考查计算机系统基础知识。全相联映射是指主存中任一块都可以映射到Cache中任一块的方式，也就是说，当主存中的一块需调入Cache时，可根据当时Cache的块占用或分配情况，选择一个块给主存块存储，所选的Cache块可以是Cache中的任意一块。直接相联映射方式是指主存的某块j只能映射到满足特定关系的Cache块i中。全相联映射和直接相联映射方式的优缺点正好相反，也就是说，对于全相联映射方式来说为优点的恰是直接相联映射方式的缺点，而对于全相联映射方式来说为缺点的恰是直接相联映射方式的优点。组相连映像了兼顾这两种方式的优点：主存和Cache按同样大小划分成块；主存和Cache按同样大小划分成组；主存容量是缓存容量的整数倍，将主存空间按缓冲区的大小分成区，主存中每一区的组数与缓存的组数相同；当主存的数据调入缓存时，主存与缓存的组号应相等，也就是各区中的某一块只能存入缓存的同组号的空间内，但组内各块地址之间则可以任意存放，即从主存的组到Cache的组之间采用直接映象方式；在两个对应的组内部采用全相联映象方式。","analysis":"A"},{"product_id":"20160719132958518","ans":"本题考查计算机系统基础知识。先由补码“90H”得出其对应的真值，为负数，绝对值的二进制形式为01110000，转换为十进制后等于-112，即2x=-112，因此x=-56。","analysis":"B"},{"product_id":"20160719133207487","ans":"本题考查计算机系统基础知识。算术移位时，对于负数，其符号位可能需要特殊处理，逻辑移位中没有符号的概念，只是二进制位序列。算术左移等同于乘以2的操作。","analysis":"A"},{"product_id":"20160719140558284","ans":"本题考查计算机系统基础知识。结束地址和起始地址的差值再加1为存储单元的个数，即B13FFH-A1000H+1=10400H转换为十进制后等于65536+1024=64KB+1KB=65K","analysis":"C"},{"product_id":"20160719140856081","ans":"本题考查计算机系统基础知识。串行总线将数据一位一位传输，数据线只需要一根(如果支持双向需要2根)，并行总线是将数据的多位同时传输(4位，8位，甚至64位，128位)，显然，并行总线的传输速度快，在长距离情况下成本高，串行传输的速度慢，但是远距离传输时成本低。单总线结构在一个总线上适应不同种类的设备，通用性强，但是无法达到高的性能要求，而专用总线则可以与连接设备实现最佳匹配。","analysis":"C"},{"product_id":"20160719140950690","ans":"网络层的联网设备是路由器，数据链路层的联网设备是网桥和交换机，传输层和会话层主要是软件功能，都不需要专用的联网设备。","analysis":"B"},{"product_id":"20160719142855190","ans":"本题考査HTTPS基础知识。HTTPS(HyperTextTransferProtocoloverSecureSocketLayer)，是以安全为目标的HTTP通道，即使用SSL加密算法的HTTP。","analysis":"B"},{"product_id":"20160719142953222","ans":"本题考査网络安全中漏洞扫描基础知识。通常利用通过端口漏洞扫描来检测远程主机状态，获取权限从而攻击远程主机。","analysis":"B"},{"product_id":"20160719143051487","ans":"《计算机软件保护条例》规定软件著作权人享有的权利，包括发表权、署名权、修改权、复制权、发行权、出租权、信息网络传播权、翻译权。署名权是指软件开发者为表明身份在自己开发的软件原件及其复制件上标记姓名的权利。法律法规规定署名权的根本目的，在于保障不同软件来自不同开发者这一事实不被人混淆，署名即是标记，旨在区别，区别的目的是为了有效保护软件著作权人的合法权益。署名彰显了开发者与软件之间存在关系的客观事实。因此，行使署名权应当奉行诚实的原则，应当符合有效法律行为的要件，否则会导致署名无效的后果。署名权只能是真正的开发者和被视同开发者的法人和非法人团体才有资格享有，其他任何个人、单位和组织不得行使此项权利。所以，署名权还隐含着另一种权利，即开发者资格权。法律保护署名权，意味着法律禁止任何未参加开发人在他人开发的软件上署名。《计算机软件保护条例》规定“在他人开发的软件上署名或者更改他人开发的软件上的署名”的行为是侵权行为，这种行为侵犯了开发者身份权即署名权。","analysis":"A"},{"product_id":"20160719143141300","ans":"依照该专利生产的产品在中国或其他国家销售，中国企业不需要向美国公司支付这件美国专利的许可使用费。这是因为，该美国公司未在中国及其他国家申请该专利，不受中国及其他国家专利法的保护，因此，依照该专利生产的产品在中国及其他国家销售，中国企业不需要向美国公司支付这件美国专利的许可使用费。如果返销美国，需要向美国公司支付这件美国专利的许可使用费。这是因为，这件专利已在美国获得批准，因而受到美国专利法的保护，中国企业依照该专利生产的产品要在美国销售，则需要向美国公司支付这件美国专利的许可使用费。","analysis":"D"},{"product_id":"20160719143255409","ans":"WAV为微软公司开发的一种声音文件格式，它符合RIFF(ResourceInterchangeFileFormat)文件规范。BMP(Bitmap)是Windows操作系统中的标准图像文件格式，可以分成两类：设备相关位图(DDB)和设备无关位图(DIB)。它采用位映射存储格式，除了图像深度可选以外，不采用其他任何压缩。MP3(MovingPictureExpertsGroupAudioLayerⅢ是一种音频压缩技术，它被设计用来大幅度地降低音频数据量。作为文件扩展名时表示该文件时一种音频格式文件。MOV即QuickTime影片格式，它是Apple公司开发的一种音频、视频文件格式，用于存储常用数字媒体类型。","analysis":"D"},{"product_id":"20160719143419331","ans":"Powerpoint是微软公司的演示文稿软件。Premiere是一款常用的视频编辑软件，由Adobe公司推出。Acrobat是由Adobe公司开发的一款PDF(PortableDocumentFormat)编辑软件，Photoshop(简称PS)，是由AdobeSystems开发和发行的图像处理软件。","analysis":"B"},{"product_id":"20160719143609503","ans":"DPI(DotsPerInch，每英寸点数)通常用来描述数字图像输入设备(如图像扫描仪)或点阵图像输出设备(点阵打印机)输入或输出点阵图像的分辨率。一幅3×4英寸的彩色照片在150DPI的分辨率下扫描得到原始的24位真彩色图像的数据量是(150×3)×(150×4)×24/8=810000字节。","analysis":"D"},{"product_id":"20160719143727878","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-B-D-G-I-K-L，其长度为22，关键路径上的活动均为关键活动。活动BD在关键路径上，因此松弛时间为0。","analysis":"C"},{"product_id":"20160719143750815","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上图计算出关键路径为A-B-D-G-I-K-L，其长度为22，关键路径上的活动均为关键活动。活动BD在关键路径上，因此松弛时间为0。","analysis":"A"},{"product_id":"20160719143834065","ans":"本题考查结构化分析的基础知识。数据流图是结构化分析的一个重要模型，描述数据在系统中如何被传送或变换，以及描述如何对数据流进行变换的功能，用于功能建模。数据流图中有四个要素：外部实体，也称为数据源或数据汇点，表示要处理的数据的输入来源或处理结果要送往何处，不属于目标系统的一部分，通常为组织、部门、人、相关的软件系统或者硬件设备；数据流表示数据沿箭头方向的流动；加工是对数据对象的处理或变换；数据存储在数据流中起到保存数据的作用，可以是数据库文件或者任何形式的数据组织。根据上述定义和题干说明，读者是外部实体，图书和借书证是数据流，借阅是加工。","analysis":"B"},{"product_id":"20160719143905956","ans":"本题考查结构化分析的基础知识。数据流图是结构化分析的一个重要模型，描述数据在系统中如何被传送或变换，以及描述如何对数据流进行变换的功能，用于功能建模。数据流图中有四个要素：外部实体，也称为数据源或数据汇点，表示要处理的数据的输入来源或处理结果要送往何处，不属于目标系统的一部分，通常为组织、部门、人、相关的软件系统或者硬件设备；数据流表示数据沿箭头方向的流动；加工是对数据对象的处理或变换；数据存储在数据流中起到保存数据的作用，可以是数据库文件或者任何形式的数据组织。根据上述定义和题干说明，读者是外部实体，图书和借书证是数据流，借阅是加工。","analysis":"A"},{"product_id":"20160719144036675","ans":"本题考查软件开发过程的基础知识。结构化分析模型包括数据流图、实体联系图、状态迁移图和数据字典，因此这些模型是需求分析阶段的输出。而确定软件体系结构是在软件设计阶段进行的。","analysis":"D"},{"product_id":"20160719144129081","ans":"本题考查程序语言基础知识。解释程序也称为解释器，它或者直接解释执行源程序，或者将源程序翻译成某种中间代码后再加以执行；而编译程序(编译器)则是将源程序翻译成目标语言程序，然后在计算机上运行目标程序。这两种语言处理程序的根本区别是：在编译方式下，机器上运行的是与源程序等价的目标程序，源程序和编译程序都不再参与目标程序的执行过程;而在解释方式下，解释程序和源程序(或其某种等价表示)要参与到程序的运行过程中，运行程序的控制权在解释程序。简单来说，在解释方式下，翻译源程序时不生成独立的目标程序，而编译器则将源程序翻译成独立保存的目标程序。","analysis":"A"},{"product_id":"20160719144305472","ans":"本题考查程序语言基础知识。维基百科上将脚本语言定义为“为了缩短传统的编写一编译一链接一运行过程而创建的计算机编程语言。通常具有简单、易学、易用的特色，目的是希望开发者以简单的方式快速完成某些复杂程序的编写工作。”脚本语言一般运行在解释器或虚拟机中，便于移植，开发效率较高。","analysis":"C"},{"product_id":"20160719144405175","ans":"本题考查程序语言基础知识。.“中间代码”是一种简单且含义明确的记号系统，可以有若干种形式，它们的共同特征是与具体的机器无关。最常用的一种中间代码是与汇编语言的指令非常相似的三地址码，其实现方式常采用四元式，另外还有后缀式、树等形式的中间代码。","analysis":"B"},{"product_id":"20160719144446190","ans":"I/O设备管理软件一般分为4层：中断处理程序、设备驱动程序、与设备无关的系统软件和用户级软件。至于一些具体分层时细节上的处理，是依赖于系统的，没有严格的划分，只要有利于设备独立这一目标，可以为了提高效率而设计不同的层次结构。I/O软件的所有层次及每一层的主要功能如下图所示。图中的箭头给出了I/O部分的控制流。当用户通过键盘或鼠标进入某应用系统时，通常最先获得键盘或鼠标输入信息的程序是中断处理程序。","analysis":"B"},{"product_id":"20160719144601909","ans":"本题考查Windows操作系统文件管理方面的基础知识。当用户双击一个文件名时，Windows系统通过建立的文件关联来决定使用什么程序打开该文件。例如系统建立了“Windows照片查看器”或“11view”程序打开扩展名为“.jpg”类型的文件关联，那么当用户双击“IMG_20160122_103.jpg”文件时，Windows先执行“Windows照片查看器”或“11view”程序，然后打开“IMG_20160122_103.jpg”文件。","analysis":"B"},{"product_id":"20160719144648737","ans":"本题考查操作系统中设备管理的基本知识。访问一个数据块的时间应为寻道时间加旋转延迟时间及传输时间之和。根据题意，每块的旋转延迟时间及传输时间共需120ms，磁头从一个磁道移至另一个磁道需要6ms，但逻辑上相邻数据块的平均距离为10个磁道，即读完一个数据块到下一个数据块寻道时间需要60ms。通过上述分析，本题访问一个数据块的时间T=120ms+60ms=180ms，而读取一个100块的文件共需要18000ms。","analysis":"C"},{"product_id":"20160720213643393","ans":"根据前趋图，P1进程执行完需要通知P2和P3进程，故需要利用V(SI)V(S2)操作通知P2和P3进程，所以空a应填V(SI)V(S2);P2进程执行完需要通知P4进程，所以空b应填V(S3)。根据前趋图，P3进程运行前需要等待P1进程的结果，故执行程序前要先利用1个P操作，而P3进程运行结束需要通知P5进程。又因为P3进程运行结束后需要利用1个V操作通知P5进程。根据前趋图，P4进程执行结束需要利用1个V操作通知P5进程，故空e处需要1个V操作；P5进程执行前需要等待P3和P4进程的结果，故空f处需要2个P操作。P3进程运行结束是利用V(S4)通知P5进程，故P4进程运行结束是利用V(S5)通知P5进程。","analysis":"C"},{"product_id":"20160720214559956","ans":"根据前趋图，P1进程执行完需要通知P2和P3进程，故需要利用V(SI)V(S2)操作通知P2和P3进程，所以空a应填V(SI)V(S2);P2进程执行完需要通知P4进程，所以空b应填V(S3)。根据前趋图，P3进程运行前需要等待P1进程的结果，故执行程序前要先利用1个P操作，而P3进程运行结束需要通知P5进程。又因为P3进程运行结束后需要利用1个V操作通知P5进程。根据前趋图，P4进程执行结束需要利用1个V操作通知P5进程，故空e处需要1个V操作；P5进程执行前需要等待P3和P4进程的结果，故空f处需要2个P操作。P3进程运行结束是利用V(S4)通知P5进程，故P4进程运行结束是利用V(S5)通知P5进程。","analysis":"B"},{"product_id":"20160720214634831","ans":"根据前趋图，P1进程执行完需要通知P2和P3进程，故需要利用V(SI)V(S2)操作通知P2和P3进程，所以空a应填V(SI)V(S2);P2进程执行完需要通知P4进程，所以空b应填V(S3)。根据前趋图，P3进程运行前需要等待P1进程的结果，故执行程序前要先利用1个P操作，而P3进程运行结束需要通知P5进程。又因为P3进程运行结束后需要利用1个V操作通知P5进程。根据前趋图，P4进程执行结束需要利用1个V操作通知P5进程，故空e处需要1个V操作；P5进程执行前需要等待P3和P4进程的结果，故空f处需要2个P操作。P3进程运行结束是利用V(S4)通知P5进程，故P4进程运行结束是利用V(S5)通知P5进程。","analysis":"B"},{"product_id":"20160720214801581","ans":"本题考查软件设计基础知识。模块独立性是创建良好设计的一个重要原则，一般采用模块间的耦合和模块的内聚两个准则来进行度量。耦合程度越低，内聚程度越高，则模块的独立性越好。存在多种模块之间的耦合类型，从低到高依次为非直接耦合、数据耦合、标记耦合、控制耦合、外部耦合、公共耦合和内容耦合。其中，公共耦合是指一组模块都访问同一公共数据环境；控制耦合是指一个模块通过传送开关、标志、名字等控制信息，明显地控制选择另一个模块的功能；标记耦合是一组模块通过参数表传递记录信息；数据耦合是一个模块访问另一个模块时，彼此之间通过数据参数(不是控制参数，公共数据结构或外部变量)，来交换输入输出信息。","analysis":"A"},{"product_id":"20160720214928081","ans":"本题考查开发过程模型的基础知识。增量开发模型将软件产品分解成一系列的增量构件，在增量开发中逐步加入。其优点主要有：能在较短的时间内交付可以使用的部分产品；逐步增加的产品功能可以使用户有充裕的时间学习和适应新产品；优先级最高的功能首先交付，这意味着最重要的功能经过最多的测试。但是要求对要开发的系统进行精心的分析和设计。","analysis":"D"},{"product_id":"20160720215038487","ans":"本题考查软件设计的基础知识。在设计软件的模块结构时，有一些启发式原则可以改进设计。如完善模块功能、消除重复功能、模块的作用范围应在其控制范围之内、尽可能减少高扇出结构，随着深度增大扇入、避免或减少使用病态连接等等。模块规模大小应适中。模块单一的功能可以提高其内聚性，但同时考虑与其他模块的耦合程度，因此不是模块功能越单纯越好。","analysis":"D"},{"product_id":"20160720215436050","ans":"本题考査软件体系结构的基础知识。仓库风格是一种软件体系结构，其中包含一个数据仓库和若干个其他构件。数据仓库位于该体系结构的中心，其他构件访问该数据仓库并对其中的数据进行增、删、改等操作。数据库系统、超文本系统和黑板系统都属于仓库风格。该体系结构的优点包括：①对可更改性和可维护性的支持；②可复用的知识源；③支持容错性和健壮性。缺点包括：①测试困难；②不能保证有好的解决方案；③难以建立好的控制策略；④低效；⑤昂贵的开发工作；⑥缺少对并行机制的支持。","analysis":"D"},{"product_id":"20160720215531253","ans":"本题考査软件体系结构的基础知识。仓库风格是一种软件体系结构，其中包含一个数据仓库和若干个其他构件。数据仓库位于该体系结构的中心，其他构件访问该数据仓库并对其中的数据进行增、删、改等操作。数据库系统、超文本系统和黑板系统都属于仓库风格。该体系结构的优点包括：①对可更改性和可维护性的支持；②可复用的知识源；③支持容错性和健壮性。缺点包括：①测试困难；②不能保证有好的解决方案；③难以建立好的控制策略；④低效；⑤昂贵的开发工作；⑥缺少对并行机制的支持。","analysis":"D"},{"product_id":"20160720220051753","ans":"本题考查软件测试的基础知识。软件测试按阶段划分为单元测试、集成测试和系统测试。在单元测试基础上，将所有模块按照设计要求组装为系统，此时进行的测试称为集成测试。集成测试有多种策略：自底向上：从系统层次中最底层的构件开始测试，逐步向上。需要设计驱动模块来辅助测试。自顶向下：与自底向上相反，从最顶层的构件开始，逐步向下。需要设计桩模块来辅助测试。三明治：结合自底向上和自顶向下两种测试策略。一次性：对所有构件一次性测试，然后集成。根据题干，该实例采用了三明治测试策略。该测量的优势是结合了自底向上和自顶向下的优点，如较早地验证了主要的控制构件和底层模块，并行测试程度较高等。但缺点是需要写较多的驱动模块和桩模块。","analysis":"C"},{"product_id":"20160720220156940","ans":"本题考查软件测试的基础知识。软件测试按阶段划分为单元测试、集成测试和系统测试。在单元测试基础上，将所有模块按照设计要求组装为系统，此时进行的测试称为集成测试。集成测试有多种策略：自底向上：从系统层次中最底层的构件开始测试，逐步向上。需要设计驱动模块来辅助测试。自顶向下：与自底向上相反，从最顶层的构件开始，逐步向下。需要设计桩模块来辅助测试。三明治：结合自底向上和自顶向下两种测试策略。一次性：对所有构件一次性测试，然后集成。根据题干，该实例采用了三明治测试策略。该测量的优势是结合了自底向上和自顶向下的优点，如较早地验证了主要的控制构件和底层模块，并行测试程度较高等。但缺点是需要写较多的驱动模块和桩模块。","analysis":"D"},{"product_id":"20160720221311940","ans":"本题考查软件复杂性的基础知识。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V(G)=m-n+2，图中m=11，n=10，V(G)=11-10+2=3。","analysis":"C"},{"product_id":"20160720221420018","ans":"本题考查面向对象的基本知识。在面向对象系统中，对象是基本的运行时实体，它既包括数据(属性)，也包括作用于数据的操作(行为)。所以，一个对象把属性和行为封装为一个整体。封装是一种信息隐蔽技术，它的目的是使对象的使用者和生产者分离，使对象的定义和实现分开。一个类定义了一组大体上相似的对象。一个类所包含的方法和数据描述一组对象的共同行为和属性，这些对象共享这些行为和属性。有些类之间存在一般和特殊关系，在定义和实现一个类的时候，可以在一个已经存在的类的基础上来进行，把这个已经存在的类所定义的内容作为自己的内容，并加入新的内容，这种机制就是父类和子类之间共享数据和方法的机制，即继承。在子类定义时，可以继承它的父类(或祖先类)中的属性和方法，也可以重新定义父类中已经定义的方法，其方法可以对父类中方法进行覆盖，即在原有父类接口的基础上，用适合于自己要求的实现去置换父类中的相应实现。多态是在继承的支持下，在不同对象在收到同一消息时可以产生不同的结果，这是由于对通用消息的实现细节由接收对象自行决定的缘故。","analysis":"B"},{"product_id":"20160720221513143","ans":"本题考查面向对象的基本知识。在面向对象系统中，对象是基本的运行时实体，它既包括数据(属性)，也包括作用于数据的操作(行为)。所以，一个对象把属性和行为封装为一个整体。封装是一种信息隐蔽技术，它的目的是使对象的使用者和生产者分离，使对象的定义和实现分开。一个类定义了一组大体上相似的对象。一个类所包含的方法和数据描述一组对象的共同行为和属性，这些对象共享这些行为和属性。有些类之间存在一般和特殊关系，在定义和实现一个类的时候，可以在一个已经存在的类的基础上来进行，把这个已经存在的类所定义的内容作为自己的内容，并加入新的内容，这种机制就是父类和子类之间共享数据和方法的机制，即继承。在子类定义时，可以继承它的父类(或祖先类)中的属性和方法，也可以重新定义父类中已经定义的方法，其方法可以对父类中方法进行覆盖，即在原有父类接口的基础上，用适合于自己要求的实现去置换父类中的相应实现。多态是在继承的支持下，在不同对象在收到同一消息时可以产生不同的结果，这是由于对通用消息的实现细节由接收对象自行决定的缘故。","analysis":"C"},{"product_id":"20160720221608487","ans":"本题考查面向对象和统一建模语言(UML)的基本知识。UML用例图展现了一组用例、参与者(Actor)以及它们之间的关系。用于对系统的静态用例视图进行建模。这个视图主要支持以下系统的行为，即该系统在它的周边环境的语境中所提供的外部可见服务。用例图说明参与者及其扮演的角色，可以是人、硬件或者其他系统可以扮演的角色，而非个人用户。","analysis":"A"},{"product_id":"20160720221755159","ans":"本题考查面向对象和统一建模语言(UML)的基础知识。在UML中，关系把事物结合在一起，包括依赖、关联、泛化和实现四种。关联是一种结构关系，描述了一组链，即对象之间的连接；聚集是一种特殊类型的关联，描述了整体和部分之间的结构关系。在关联上可以标注重复度(multiplicity)和角色(role)。两个类之间可以有多个关联，但这些关联需要由不同角色进行标识。","analysis":"B"},{"product_id":"20160720221938237","ans":"本题考查统一建模语言(UML)的基本知识。活动图(activitydiagram)是一种特殊的状态图，它展现了在系统内从一个活动到另一个活动的流程，专注于系统的动态视图，它对于系统的功能建模特别重要，并强调对象间的控制流程。如下图所示：活动图一般包括活动状态和动作状态、转换和对象。活动图有开始、结束和一系列动作，可以表示分支、合并、分岔和汇合。分支描述基于布尔表达式的可选择路径，可有一个入流和2个或多个出流，在每个出流上放置一个布尔表达式条件(监护表达式)，每个出流的条件不应该重叠，但需要覆盖所有可能性。合并描述当两条控制路径重新合并，不需要监护条件，只有一个出流。分岔描述把一个控制流分成两个或多个并发控制流，可以有一个进入转移和两个或多个离去转移，每个离去的转移表示一个独立的控制流，这些流可以并行的进行。汇合表示两个或多个并发控制流的同步，可以有两个或多个进入转移和一个离去转移，意味着每个进入流都等待，直到所有进入流都达到这个汇合处。","analysis":"D"},{"product_id":"20160720222603956","ans":"本题考查统一建模语言(UML)的基本知识。活动图(activitydiagram)是一种特殊的状态图，它展现了在系统内从一个治动到另一个活动的流程，专注于系统的动态视图，它对于系统的功能建模特别重要，并强调对象间的控制流程。如下图所示：活动图一般包括活动状态和动作状态、转换和对象。活动图有开始、结束和一系列动作，可以表示分支、合并、分岔和汇合。分支描述基于布尔表达式的可选择路径，可有一个入流和2个或多个出流，在每个出流上放置一个布尔表达式条件(监护表达式)，每个出流的条件不应该重叠，但需要覆盖所有可能性。合并描述当两条控制路径重新合并，不需要监护条件，只有一个出流。分岔描述把一个控制流分成两个或多个并发控制流，可以有一个进入转移和两个或多个离去转移，每个离去的转移表示一个独立的控制流，这些流可以并行的进行。汇合表示两个或多个并发控制流的同步，可以有两个或多个进入转移和一个离去转移，意味着每个进入流都等待，直到所有进入流都达到这个汇合处。","analysis":"A"},{"product_id":"20160720222710862","ans":"本题考查统一建模语言(UML)的基本知识。活动图(activitydiagram)是一种特殊的状态图，它展现了在系统内从一个活动到另一个活动的流程，专注于系统的动态视图，它对于系统的功能建模特别重要，并强调对象间的控制流程。如下图所示：活动图一般包括活动状态和动作状态、转换和对象。活动图有开始、结束和一系列动作，可以表示分支、合并、分岔和汇合。分支描述基于布尔表达式的可选择路径，可有一个入流和2个或多个出流，在每个出流上放置一个布尔表达式条件(监护表达式)，每个出流的条件不应该重叠，但需要覆盖所有可能性。合并描述当两条控制路径重新合并，不需要监护条件，只有一个出流。分岔描述把一个控制流分成两个或多个并发控制流，可以有一个进入转移和两个或多个离去转移，每个离去的转移表示一个独立的控制流，这些流可以并行的进行。汇合表示两个或多个并发控制流的同步，可以有两个或多个进入转移和一个离去转移，意味着每个进入流都等待，直到所有进入流都达到这个汇合处。","analysis":"B"},{"product_id":"20160720222805237","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图和适用情况。享元(Flyweight)模式运用共享技术有效地支持大量细粒度的对象。适用于：一个应用程序使用了大量的对象；完全由于使用大量的对象而造成很大的存储开销；对象的大多数状态都可变为外部状态；如果删除对象的外部状态，那么可以用相对较少的共享对象取代很多组对象；应用程序不依赖于对象标识。抽象工厂(AbstractFactory)模式提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。适用于：一个系统要独立于它的产品的创建、组合和表示时;一个系统要由多个产品系列中的一个来配置时；要强调一系列相关的产品对象的设计以便进行联合使用时；当提供一个产品类库，而只想显小'它们的接口而不是实现时。如为图形用户界面(GUI)组件定义不同平台的并行类层次结构，适合采用此模式，其中抽象工厂声明一个创建抽象界面组件的操作接口，具体工厂实现创建产品对象的操作。外观(Facack)模式为子系统中的一组接口提供一个-致的界面，Facade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。适用于：要为一个复杂子系统提供一个简单接口时，子系统往往因为不断演化而变得越来越复杂；客户程序与抽象类的实现部分之间存在着很大的依赖性；当需要构建一个层次结构的子系统时，使用facade模式定义子系统中每层的入口点。装饰器(Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加~些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。适用于：在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责；处理那些可以撤销的职责；当不能采用生成子类的方式进行扩充时。","analysis":"B"},{"product_id":"20160720222914300","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。命令(Command)将一个请求封装为一个对象，从而使得可以用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。责任链(ChainofResponsibility)使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。观察者(Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。策略(Strategy)定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。此模式使得算法可以独立于使用它们的客户而变化。","analysis":"A"},{"product_id":"20160720223049768","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图和适用情况。适配器(Adapter)将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。类适配使用多重继承对一个接口与另一个接口进行匹配；对象适配器依赖于对象组合。适用于：想使用一个已经存在的类，而它的接口不符合要求；想创建一个可以复用的类，该类可以与其他不相关的类或不可预见的类(即那些接口可能不一定兼容的类)协同工作。(仅适用于对象Adapter)想使用一个己经存在的子类，但是不可能对每一个都进行子类化以匹配他们的接口。对象适配器可以适配它的父类接口。观察者(Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。适用于：当一个抽象模型有两个方面，其中一个方面依赖于另一个方面，将这两者封装在独立对象中以使它们可以各自独立地改变和复用；当对一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变时；当一个对象必须通知其他对象，而它又不能假定其他对象是谁，即：不希望这些对象是紧耦合的。此模式最适合用于发布/订阅消息模型由订阅者订阅消息主题，发布者一定有此主题消息发布，所有订阅者就会自动收到通知。状态(State)允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。适用于：一个对象的行为决定于它的状态，并且它必须在运行时刻根据状态改变它的行为；一个操作中含有庞大的多分支的条件语句，且这些分支依赖于该对象的状态。这个状态通常用一个或多个枚举常量表示。通常，有多个操作包含这相同的条件结构。State模式将每一个条件分支放入一个独立的类中。这使得开发者可以根据对象自身的情况将对象的状态作为一个对象，这一对象可以不依赖于其他对象而独立变化。","analysis":"C"},{"product_id":"20160720223146034","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图和适用情况。组合(Composite)模式将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。组件Component为组合的对象声明接口，通常定义父组件引用，用户引用此组件，Leaf和Composite类可以继承这个引用以及管理这个应用的那些操作。适用于：想表示对象的“部分-整体”层次结构；希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。享元(Flyweight)模式运用共享技术有效地支持大量细粒度的对象。迭代器(Iterator)提供一种方法顺序访问一个聚合对象中各个元素，而又不需暴露该对象的内部表示。适用于：访问一个聚合对象的内容而无须暴露它的内部表示；支持对聚合对象的多种遍历；为遍历不同的聚合结构提供一个统一的接口。备忘(Memento)在不破坏封装性的前提下，捕获一个对象的内部状态，并在对象之外保存这个状态。这样以后就可将对象恢复到原先保存的状态。适用于：必须保存一个对象在某一个时刻的(部分)状态，这样以后需要时它才能恢复到先前的状态；如果一个用接口来让其他对象直接得到这些状态，将会暴露对象的实现细节并破坏对象的封装性。","analysis":"B"},{"product_id":"20160720223229768","ans":"本题考查程序语言基础知识。语法分析方法分为两类：自上而下(自顶向下)分析法和自下而上(自底向上)分析法，递归下降分析法和预测分析法属于自上而下分析法，移进-归约分析法属于自下而上(自底向上)分析法。","analysis":"B"},{"product_id":"20160720223401143","ans":"本题考查程序语言基础知识。在DFA中，如果存在从初态到达终态的路径，其上的标记字母构成字符串s，则称该DFA可以识别s。根据题目中的状态转换图，对于aabb，从状态A出发，识别字母“a”后转到状B，接下来不存在字母“a”的状态转换，因此，该DFA不能识别aabb。对于abab，其识别路径为A->B->C->B->C，当字符串结束时，到达终态C，因此该DFA能识别abab。对于baba，不存在识别路径，因为从状A出发没有字母“b”的状态转换，对于abba，其识别路径为A->B->C->C->B，字符串结束时不在终态，因此该DFA不能识别abba。","analysis":"B"},{"product_id":"20160720223527143","ans":"本题考査程序语言基础知识。函数调用执行时，传值调用是指将实参的值传给形参，形参变量得到实参值的一份拷贝，引用调用实质上将实参变量的地址传给形参变量，在被调用函数中通过指针间接访问实参变量，这样，对形参的修改实质上是对实参变量的修改。本题中，函数f执行时，其形参x得到的值为5，语句“x=2*x+1;”将函数f中x的值改变为11，而形参a实质上引用的是main函数中的x，若用main_x表示面函数中的变量x，用f_x表示函数f中的形参变量x，则语句“a=a+x;”的实质是“main_x=main_x+f_x;”，因此结果是main函数中x的值改为12。","analysis":"D"},{"product_id":"20160720223849550","ans":"本题考查数据库基本知识。数据的独立性是由DBMS的二级映像功能来保证的。数据的独立性包括数据的物理独立性和数据的逻辑独立性。数据的物理独立性是指当数据库的内模式发生改变时，数据的逻辑结构不变。为了保证应用程序能够正确执行，需要通过修改概念模式/内模式之间的映像。数据的逻辑独立性是指用户的应用程序与数据库的逻辑结构是相互独立的。数据的逻辑结构发生变化后，用户程序也可以不修改。但是，为了保证应用程序能够正确执行，需要修改外模式/概念模式之间的映像。","analysis":"D"},{"product_id":"20160720223945472","ans":"逻辑设计阶段的任务之一是对关系模式进一步的规范化处理。因为生成的初始关系模式并不能完全符合要求，还会有数据冗余、更新异常存在，这就需要根据规范化理论对关系模式分解之后来消除。不过有时根据处理要求，可能还需要增加部分冗余以满足处理要求。逻辑设计阶段的任务就需要作部分关系模式的处理，分解、合并或增加冗余属性，提高存储效率和处理效率。","analysis":"C"},{"product_id":"20160720224127300","ans":"本题考查关系数据库规范化理论方面的基础知识。根据函数依赖定义可知AC→U和AB→U，所以AC和AB为候选关键字。根据主属性的定义“包含在任何一个候选码中的属性叫做主属性(Primeattribute)，否则叫做非主属性(Nonprimeattribute)”，所以，关系R中的3个属性都是主属性。","analysis":"B"},{"product_id":"20160720224434440","ans":"由于(元件号，供应商)可以决定全属性，即(元件号，供应商)→元件名称，供应商所在地，库存量，所以元件关系的主键为(元件号，供应商)。","analysis":"B"},{"product_id":"20160720224543175","ans":"因为关系P存在冗余以及插入异常和删除异常等问题，为了解决这一问题需要将元件关系分解。用户无法查询某元件是由哪些供应商来供应，原因是分解有损连接的，且不保持函数依赖。","analysis":"C"},{"product_id":"20160720224635378","ans":"因为原元件关系存在非主属性对码的部分函数依赖：(元件号，供应商)—供应商所在地，但是供应商—供应商所在地，故原关系模式元件非2NF的。分解后的关系模式元件1、元件2和元件3消除了非主属性对码的部分函数依赖，同时不存在传递依赖，故达到3NF。","analysis":"C"},{"product_id":"20160720230545440","ans":"本题考查数据结构基础知识。栈的修改规则是后进先出。对于题目给出的元素序列，若要求d先出栈，则此时a、b、c尚在栈中，因此这四个元素构成的出栈序列只能是dcba，元素e可在c出桟之前进栈，之后c也只能在e出栈后再出栈，因此可以得到出栈系列decba。同理，e可在b出栈之前进栈，从而得到出栈序列dceba。若e在a出栈前入栈，则得到出栈序列dcbea，或者e在a出栈后进、出栈，从而得到出栈序列dcbae。","analysis":"A"},{"product_id":"20160720230722143","ans":"本题考查数据结构基础知识。根据二叉排序树的定义，将新结点插入二叉排序树时，需要先查找插入位置。若等于树根，则不再插入，若大于树根，则递归地在右子树上查找插入位置，否则递归地在左子树上查找插入位置，因此，新结点总是以叶子的方式加入树中。这样，在根结点到达每个叶子结点的路径上，结点的顺序必须保持，也就是父结点必定先于子结点进入树中。考查题目中的序列，在序列“231727193113119061”中，27先于31进入该二叉排序树，这是不可能的。","analysis":"C"},{"product_id":"20160720231028284","ans":"本题考查数据结构基础知识。二叉树中，非叶子结点最多有两个子结点，第i层上最多有2(i-1)个结点，因此高度为h的二叉树最多有2h-1个结点。","analysis":"D"},{"product_id":"20160720231154503","ans":"本题考査数据结构基础知识。设查找表的元素存储在一维数组r[1..n]中，在表中的元素己经按关键字递增方式排序的情况下，进行折半查找的方法是：首先将待查元素的关键字(key)值与数组r中间位置上(下标为mid)记录的关键字进行比较，若相等，则查找成功；若key>r[mid].key，则说明待查记录只可能在后半个子表r[mid+1..n]中，下一步应在后半个子表中进行查找，若key<r[mid].key，说明待查记录只可能在前半个子表r[1..mid-1]中，下一步应在r的前半个子表中进行查找，这样就可以迅速逐步缩小范围，直到查找成功或子表为空时失败为止。折半查找过程可用一棵二叉树表示，其中结点中的数字表示元素的下标。","analysis":"B"},{"product_id":"20160720231329393","ans":"本题考查数据结构基础知识。图的遍历是指对图中所有顶点进行访问且只访问一次的过程。因为图的任一个结点都可能与其余顶点相邻接，所以在访问了某个顶点之后，可能沿着某路径又回到该结点上。因此为了避免顶点的重复访问，在图的遍历过程中，必须对已访问过的顶点进行标记。深度优先遍历和广度优先遍历是两种遍历图的基本方法。图的广度优先遍历方法为：从图中某个顶点V出发，在访问了v之后依次访问v的各个未被访问过的邻接点，然后分别从这些邻接点出发依次访问它们的邻接点，并使“先被访问的顶点的邻接点”先于“后被访问的顶点的邻接点”被访问，直至图中所有己被访问的顶点的邻接点都被访问到。若此时还有未被访问的顶点，则另选图中的一个未被访问的顶点作为起点，重复上述过程，直至图中所有的顶点都被访问到为止。广度优先遍历图的特点是尽可能先进行横向搜索，即最先访问的顶点的邻接点也先被访问。为此，引入队列来保存己访问过的顶点序列，即每当一个顶点被访问后，就将其放入队中，当队头顶点出队时，就访问其未被访问的邻接点并令这些邻接顶点入队。","analysis":"C"},{"product_id":"20160720231924472","ans":"本题考查算法设计与分析的基础知识。背包问题是一个经典的计算问题，有很多应用。背包问题有两类，0-1背包问题和部分背包问题。若用c(i，j)表示i个物品、容量为j的最大装包价值，则0-1背包问题可以用动态规划方法求解，其递归式为：根据该递归式，自底向上可以计算题干实例中各个子问题的最优解的值.如下表所示。\\上表中行表示物品，列表示背包容量，每个元素的值表示，在仅考虑前i个物品时，背包容量为该列对应的值时，所获得的最大价值。根据上表的结果，得到最大价值为15。","analysis":"C"},{"product_id":"20160720232027893","ans":"自底向上计算该递归式，在实现时其实是两重循环，物品个数的循环和背包容量的循环，因此时间复杂度为Θ(nW)。","analysis":"A"},{"product_id":"20160720232122847","ans":"部分背包问题可以用贪心算法求解。首先根据物品的单位重量价值对物品并对其从大到小排序，然后依次取出物品放入背包，直到所有物品装完或者背包不能装入某个物品时，只放入该物品的一部分，让背包装满。单位重量价值如下表。上表中行表示物品信息，即重量，价值和单位重量价值，列表示对应的物品。根据贪心策略，首先取出第一个物品放入背包，然后取出第二个物品和第五个物品放入背包，此时获得价值6+3+6=15，背包剩余容量10-2-2-4=2。此时不能将第三个物品全部放入背包，只能放2/6=1/3，对应获得的价值为5*1/3=1.67，因此得到所获得的最大价值为15+1.67=16.67。","analysis":"D"},{"product_id":"20160720232208878","ans":"若用时间复杂度为Θ(nlgn)的归并排序算法先对物品的单位重量价值排序，然后依次将物品放入背包(时间复杂度为Θ(n)，则整个算法的时间复杂度为Θ(nlgn)。","analysis":"B"},{"product_id":"20160720232309550","ans":"本题考查FTP协议的基础知识。默认情况下，FTP服务器的控制端口为21，数据端口为20。","analysis":"D"},{"product_id":"20160720232358722","ans":"本题考查FTP协议的基础知识。默认情况下，FTP服务器的控制端口为21，数据端口为20。","analysis":"B"},{"product_id":"20160720232453737","ans":"使用ping命令进行网络检测，按照由近及远原则，首先执行的是ping127.0.0.1，其次是ping本地IP，再次是ping默认网关，最后是ping远程主机。","analysis":"C"},{"product_id":"20160720232704440","ans":"本题考查Internet协议属性参数的配置。默认网关和本地IP地址应属同一网段。","analysis":"C"},{"product_id":"20160720232850753","ans":"在SNMP管理中，管理站和代理之间进行信息交换时要通过团体名认证，这是一种简单的安全机制，管理站与代理必须具有相同的团体名才能互相通信。但是由于包含团体名的SNMP报文是明文传送，所以这样的认证机制是不够安全的。本题中的Manager2和Agent1的团体名都是public2，所以二者可以互相通信。","analysis":"A"},{"product_id":"20160720232951222","ans":"在物理安全和信息安全领域，访问控制是访问一个地方或其他资源的选择性限制。访问的行为可能是消耗、进入或使用。访问资源的权限称为授权。访问控制机制介于用户(或代表用户的过程的执行)和系统资源之间，资源如应用程序、操作系统、防火墙、路由器、文件和数据库。系统必须首先认证用户的访问企图。典型的，认证功能确定一个用户是否被允许访问该系统。然后，访问控制功能确定此用户的特定访问请求是否允许。安全管理员维护授权数据库，其中指定用户可以访问对那个资源具有什么类型的访问权限。访问控制功能查询数据库以确定是否授权访问。审计功能监控和记录用户对系统资源的访问。实际上，很多组件可以一起合作提供访问控制功能。所有操作系统至少具有基本的访问控制组件，而且这些组件大多情况下非常健壮。附加安全包可以添加到操作系统的本地安全控制功能。特定的应用和实用工具，如数据管理系统，也并入了访问控制功能。如防火墙等外部设备也能够提供访问控制服务。","analysis":"D"},{"product_id":"20160720233035159","ans":"在物理安全和信息安全领域，访问控制是访问一个地方或其他资源的选择性限制。访问的行为可能是消耗、进入或使用。访问资源的权限称为授权。访问控制机制介于用户(或代表用户的过程的执行)和系统资源之间，资源如应用程序、操作系统、防火墙、路由器、文件和数据库。系统必须首先认证用户的访问企图。典型的，认证功能确定一个用户是否被允许访问该系统。然后，访问控制功能确定此用户的特定访问请求是否允许。安全管理员维护授权数据库，其中指定用户可以访问对那个资源具有什么类型的访问权限。访问控制功能查询数据库以确定是否授权访问。审计功能监控和记录用户对系统资源的访问。实际上，很多组件可以一起合作提供访问控制功能。所有操作系统至少具有基本的访问控制组件，而且这些组件大多情况下非常健壮。附加安全包可以添加到操作系统的本地安全控制功能。特定的应用和实用工具，如数据管理系统，也并入了访问控制功能。如防火墙等外部设备也能够提供访问控制服务。","analysis":"B"},{"product_id":"20160720233111800","ans":"在物理安全和信息安全领域，访问控制是访问一个地方或其他资源的选择性限制。访问的行为可能是消耗、进入或使用。访问资源的权限称为授权。访问控制机制介于用户(或代表用户的过程的执行)和系统资源之间，资源如应用程序、操作系统、防火墙、路由器、文件和数据库。系统必须首先认证用户的访问企图。典型的，认证功能确定一个用户是否被允许访问该系统。然后，访问控制功能确定此用户的特定访问请求是否允许。安全管理员维护授权数据库，其中指定用户可以访问对那个资源具有什么类型的访问权限。访问控制功能查询数据库以确定是否授权访问。审计功能监控和记录用户对系统资源的访问。实际上，很多组件可以一起合作提供访问控制功能。所有操作系统至少具有基本的访问控制组件，而且这些组件大多情况下非常健壮。附加安全包可以添加到操作系统的本地安全控制功能。特定的应用和实用工具，如数据管理系统，也并入了访问控制功能。如防火墙等外部设备也能够提供访问控制服务。","analysis":"C"},{"product_id":"20160720233152300","ans":"在物理安全和信息安全领域，访问控制是访问一个地方或其他资源的选择性限制。访问的行为可能是消耗、进入或使用。访问资源的权限称为授权。访问控制机制介于用户(或代表用户的过程的执行)和系统资源之间，资源如应用程序、操作系统、防火墙、路由器、文件和数据库。系统必须首先认证用户的访问企图。典型的，认证功能确定一个用户是否被允许访问该系统。然后，访问控制功能确定此用户的特定访问请求是否允许。安全管理员维护授权数据库，其中指定用户可以访问对那个资源具有什么类型的访问权限。访问控制功能查询数据库以确定是否授权访问。审计功能监控和记录用户对系统资源的访问。实际上，很多组件可以一起合作提供访问控制功能。所有操作系统至少具有基本的访问控制组件，而且这些组件大多情况下非常健壮。附加安全包可以添加到操作系统的本地安全控制功能。特定的应用和实用工具，如数据管理系统，也并入了访问控制功能。如防火墙等外部设备也能够提供访问控制服务。","analysis":"A"},{"product_id":"20160720233227112","ans":"在物理安全和信息安全领域，访问控制是访问一个地方或其他资源的选择性限制。访问的行为可能是消耗、进入或使用。访问资源的权限称为授权。访问控制机制介于用户(或代表用户的过程的执行)和系统资源之间，资源如应用程序、操作系统、防火墙、路由器、文件和数据库。系统必须首先认证用户的访问企图。典型的，认证功能确定一个用户是否被允许访问该系统。然后，访问控制功能确定此用户的特定访问请求是否允许。安全管理员维护授权数据库，其中指定用户可以访问对那个资源具有什么类型的访问权限。访问控制功能查询数据库以确定是否授权访问。审计功能监控和记录用户对系统资源的访问。实际上，很多组件可以一起合作提供访问控制功能。所有操作系统至少具有基本的访问控制组件，而且这些组件大多情况下非常健壮。附加安全包可以添加到操作系统的本地安全控制功能。特定的应用和实用工具，如数据管理系统，也并入了访问控制功能。如防火墙等外部设备也能够提供访问控制服务。","analysis":"B"}]},{"paperId":"378","field":"20152","question_list":[{"product_id":"20151205124424530","ans":"本题考查计算机组成基础知识。DMA控制器在需要的时候代替CPU作为总线主设备，在不受CPU干预的情况下，控制I/O设备与系统主存之间的直接数据传输。DMA操作占用的资源是系统总线，而CPU并非在整个指令执行期间即指令周期内都会使用总线，故DMA请求的检测点设置在每个机器周期也即总线周期结束时执行，这样使得总线利用率最高。","analysis":"D"},{"product_id":"20151205124621780","ans":"本题考查计算机组成基础知识。计算机中不同容量、不同速度、不同访问形式、不同用途的各种存储器形成的是一种层次结构的存储系统。所有的存储器设备按照一定的层次逻辑关系通过软硬件连接起来，并进行有效的管理，就形成了存储体系。不同层次上的存储器发挥着不同的作用。-般计算机系统中主要有两种存储体系：Cache存储体系由Cache和主存储器构成，主要目的是提高存储器速度，对系统程序员以上均透明；虚拟存储体系由主存储器和在线磁盘存储器等辅存构成，主要目的是扩大存储器容量，对应用程序员透明。","analysis":"A"},{"product_id":"20151205124802061","ans":"本题考查计算机组成基础知识。在计算机中使用了类似于十进制科学计数法的方法来表示二进制实数，因其表示不同的数时小数点位置的浮动不固定而取名浮点数表示法。浮点数编码由两部分组成：阶码(即指数，为带符号定点整数，常用移码表示，也有用补码的)和尾数(是定点纯小数，常用补码表示，或原码表示)。因此可以知道，浮点数的精度由尾数的位数决定，表示范围的大小则主要由阶码的位数决定。","analysis":"B"},{"product_id":"20151205124936968","ans":"本题考查计算机组成基础知识。随着主存增加，指令本身很难保证直接反映操作数的值或其地址，必须通过某种映射方式实现对所需操作数的获取。指令系统中将这种映射方式称为寻址方式，即指令按什么方式寻找(或访问)到所需的操作数或信息(例如转移地址信息等)。可以被指令访问到的数据和信息包括通用寄存器、主存、堆栈及外设端口寄存器等。指令中地址码字段直接给出操作数本身，而不是其访存地址，不需要访问任何地址的寻址方式被称为立即寻址。","analysis":"C"},{"product_id":"20151205125036436","ans":"本题考查计算机组成基础知识。直接计算16进制地址包含的存储单元个数即可。DABFFH-B3000H+1=27C00H=162816=159k，按字节编址，故此区域的存储容量为159kB。","analysis":"B"},{"product_id":"20151205125130530","ans":"本题考查计算机组成与结构基础知识。计算机技术发展使得机器性能提高，随着高级语言的发展，程序员需要更强大的命令，指令集往往结合应用需要不断扩展，推动了指令集越来越复杂，形成了CISC，即ComplexInstructionSetComputer，就是使用复杂指令集系统的计算机。与其对应的是RISC，即ReducedInstructionSetComputer，精简指令集系统的计算机。","analysis":"A"},{"product_id":"20151205125232280","ans":"本题考查的是网络攻击的基础知识。网络攻击有主动攻击和被动攻击两类。其中主动攻击是指通过一系列的方法，主动向被攻击对象实施破坏的一种攻击方式，例如重放攻击、IP地址欺骗、拒绝服务攻击等均属于攻击者主动向攻击对象发起破坏性攻击的方式。流量分析攻击是通过持续检测现有网络中的流量变化或者变化趋势，而得到相应信息的一种被动攻击方式。","analysis":"A"},{"product_id":"20151205125330374","ans":"本题考查的是防火墙基础知识。防火墙是一种放置在网络边界上，用于保护内部网络安全的网络设备。它通过对流经数据流进行分析和检查，可实现对数据包的过滤、保存用户访问网络的记录和服务器代理功能。防火墙不具备检査病毒的功能。","analysis":"B"},{"product_id":"20151205125748593","ans":"本题考查网管命令netstat-n的含义以及端口的作用。从netstat-n的输出信息中可以看出，本地主机192.168.0.200使用的端口号2011、2038、2052都不是公共端口号。根据状态提示信息，其中己经与主机128.105.129.30的80端口建立了普通连接，与主机100.29.200.110正在等待建立连接，与主机202.100.112.12的443端口建立连接，由于443端口主要用于HTTPS服务，是提供加密和通过安全端口传输的另一种HTTP协议，所以是建立了安全连接。","analysis":"C"},{"product_id":"20151205125849624","ans":"我国著作权法在第10条对权利内容作了较为详尽而具体的规定，指明著作权的内容包括人身权利和财产权利。著作人身权是指作者享有的与其作品有关的以人格利益为内容的权利，也称为精神权利，包括发表权、署名权、修改权和保护作品完整权。著作人身权与作者的身份紧密联系，永远属于作者本人，即使作者死亡，其他任何人不能再拥有它。所以，我国著作权法第20条规定“作者的署名权、修改权、保护作品完整权的保护期不受限制。”发表权是属于人身权利，但发表权是一次性权利，即发表权行使一次后，不再享有发表权。发表权是指决定作品是否公之于众的权利，作品一经发表，就处于公知状态，对处于公知状态的作品，作者不再享有发表权，以后再次使用作品与发表权无关，而是行使作品的使用权。","analysis":"C"},{"product_id":"20151205125958249","ans":"王某的行为侵犯了公司的软件著作权。因为王某作为公司的职员，完成的某一综合信息管理系统软件是针对其本职工作中明确指定的开发目标而开发的软件。该软件应为职务作品，并属于特殊职务作品。公司对该软件享有除署名权外的软件著作权的其他权利，而王某只享有署名权。王某持有该软件源程序不归还公司的行为，妨碍了公司正常行使软件著作权，构成对公司软件著作权的侵犯，应承担停止侵权法律责任，交还软件源程序。","analysis":"A"},{"product_id":"20151205130054530","ans":"声音是通过空气传播的一种连续的波，称为声波。声波在时间和幅度上都是连续的模拟信号，通常称为模拟声音(音频)信号。人们对声音的感觉主要有音量、音调和音色。音量又称音强或响度，取决于声音波形的幅度，也就是说，振幅的大小表明声音的响亮程度或强弱程度。音调与声音的频率有关，频率高则声音高昂，频率低则声音低沉。而音色是由混入基音的泛音所决定的，每个基音都有其固有的频率和不同音强的泛音，从而使得声音具有其特殊的音色效果。人耳能听得到的音频信号的频率范围是20Hz〜20kHz，包括：话音(300Hz〜3400Hz)、音乐(20Hz〜20kHz)、其他声音(如风声、雨声、鸟叫声、汽车鸣笛声等，其带宽范围也是20Hz〜20kHz)，频率小于20Hz声波信号称为亚音信号(次音信号)，高于20kHz的信号称为超音频信号(超声波)。","analysis":"C"},{"product_id":"20151205130220077","ans":"颜色深度是表达图像中单个像素的颜色或灰度所占的位数(bit)，它决定了彩色图像中可出现的最多颜色数，或者灰度图像中的最大灰度等级数。8位的颜色深度，表示每个像素有8位颜色位，可表示28=256种不同的颜色或灰度等级。表示一个像素颜色的位数越多，它能表达的颜色数或灰度等级就越多，其深度越深。图像深度是指存储每个像素(颜色或灰度)所用的位数(bit)，它也是用来度量图像的分辨率的。像素深度确定彩色图像的每个像素可能有的颜色数，或者确定灰度图像的每个像素可能有的灰度级数。如一幅图像的图像深度为b位，则该图像的最多颜色数或灰度级为2b种。显然，表示一个像素颜色的位数越多，它能表达的颜色数或灰度级就越多。例如，只有1个分量的单色图像(黑白图像)，若每个像素有8位，则最大灰度数目为28=256;—幅彩色图像的每个像素用R、G、B三个分量表示，若3个分量的像素位数分别为4、4、2，贝撮大颜色数目为24+4+2=210=1024，就是说像素的深度为10位，每个像素可以是210种颜色中的一种。本题给出8位的颜色深度，则表示该图像具有28=256种不同的颜色或灰度等级。","analysis":"C"},{"product_id":"20151205130320389","ans":"饱和度是指颜色的纯度，即颜色的深浅，或者说掺入白光的程度，对于同一色调的彩色光，饱和度越深颜色越纯。当红色加入白光之后冲淡为粉红色，其基本色调仍然是红色，但饱和度降低。也就是说，饱和度与亮度有关，若在饱和的彩色光中增加白光的成分，即增加了光能，而变得更亮了，但是其饱和度却降低了。对于同一色调的彩色光，饱和度越高，颜色越纯。如果在某色调的彩色光中，掺入其他彩色光，将引起色调的变化，而改变白光的成分只引起饱和度的变化。高饱和度的深色光可掺入白色光被冲淡，降为低饱和度的淡色光。例如，一束高饱和度的蓝色光投射到屏幕上会被看成深蓝色光，若再将一束白色光也投射到屏幕上并与深蓝色重叠，则深蓝色变成淡蓝色，而且投射的白色光越强，颜色越淡，即饱和度越低。相反，由于在彩色电视的屏幕上的亮度过高，则饱和度降低，颜色被冲淡，这时可以降低亮度(白光)而使饱和度增大，颜色加深。当彩色的饱和度降低时，其固有色彩特性也被降低和发生变化。例如，红色与绿色配置在一起，往往具有一种对比效果，但只有当红色与绿色都呈现饱和状态时，其对比效果才比较强烈。如果红色与绿色的饱和度都降低，红色变成浅红或暗红，绿色变成浅绿或深绿，再把它们配置在一起时相互的对比特征就会减弱，而趋于和谐。另外饱和度高的色彩容易让人感到单调刺眼。饱和度低，色感比较柔和协调，但混色太杂又容易让人感觉浑浊，色调显得灰暗。","analysis":"B"},{"product_id":"20151205130617827","ans":"本题考查软件开发方法的基础知识。要求考生掌握典型的软件开发方法的基本概念和应用场合。需求不清晰且规模不太大时采用原型化方法最合适，而数据处理领域的不太复杂的软件，适于用结构化方法进行开发。","analysis":"C"},{"product_id":"20151205130703733","ans":"本题考查软件开发方法的基础知识。要求考生掌握典型的软件开发方法的基本概念和应用场合。需求不清晰且规模不太大时采用原型化方法最合适，而数据处理领域的不太复杂的软件，适于用结构化方法进行开发。","analysis":"A"},{"product_id":"20151205130913374","ans":"本题考查软件项目管理的基础知识。根据上图计算出关键路径为A-B-C-E-F-I-K-L，其长度为24，关键路径上的活动均为关键活动。活动BD不在关键路径上，包含该活动的最长路径为A-B-D-G-I-K-L，其长度为22，因此松弛时间为2。","analysis":"D"},{"product_id":"20151205130942483","ans":"本题考查软件项目管理的基础知识。根据上图计算出关键路径为A-B-C-E-F-I-K-L，其长度为24，关键路径上的活动均为关键活动。活动BD不在关键路径上，包含该活动的最长路径为A-B-D-G-I-K-L，其长度为22，因此松弛时间为2。","analysis":"A"},{"product_id":"20151205131032077","ans":"本题考查软件项目管理的基础知识。人员管理是软件项目管理的一个重要部分，在组织开发团队时，应该考虑开发人员的工作能力、知识背景、工作风格、兴趣爱好等多方面的因素。每个成员的工作任务分配清楚，不应该参与所有阶段的工作。当项目进度滞后于项目计划时，增加开发人员不一定可以加快开发进度。","analysis":"A"},{"product_id":"20151205131143827","ans":"本题考查程序语言基础知识。解释程序也称为解释器，它可以直接解释执行源程序，或者将源程序翻译成某种中间表示形式后再加以执行；而编译程序(编译器)则首先将源程序翻译成目标语言程序，然后在计算机上运行目标程序。这两种语言处理程序的根本区别是：在编译方式下，机器上运行的是与源程序等价的目标程序，源程序和编译程序都不再参与目标程序的执行过程；而在解释方式下，解释程序和源程序(或其某种等价表示)要参与到程序的运行过程中，运行程序的控制权在解释程序。解释器翻译源程序时不产生独立的目标程序，而编译器则需将源程序翻译成独立的目标程序。分阶段编译器的工作过程如下图所示。其中，中间代码生成和代码优化不是必须的。","analysis":"C"},{"product_id":"20151205131220421","ans":"本题考查程序语言基础知识。解释程序也称为解释器，它可以直接解释执行源程序，或者将源程序翻译成某种中间表示形式后再加以执行；而编译程序(编译器)则首先将源程序翻译成目标语言程序，然后在计算机上运行目标程序。这两种语言处理程序的根本区别是：在编译方式下，机器上运行的是与源程序等价的目标程序，源程序和编译程序都不再参与目标程序的执行过程；而在解释方式下，解释程序和源程序(或其某种等价表示)要参与到程序的运行过程中，运行程序的控制权在解释程序。解释器翻译源程序时不产生独立的目标程序，而编译器则需将源程序翻译成独立的目标程序。分阶段编译器的工作过程如下图所示。其中，中间代码生成和代码优化不是必须的。","analysis":"B"},{"product_id":"20151205131303218","ans":"本题考查程序语言基础知识。后缀式(逆波兰式)是波兰逻辑学家卢卡西维奇发明的一种表示表达式的方法。这种表示方式把运算符写在运算对象的后面，例如，把a+b写成ab+，所以也称为后缀式。借助栈可以方便地对后缀式进行求值。方法为：先创建一个初始为空的栈，用来存放运算数。对后缀表达式求值时，从左至右扫描表达式，若遇到运算数，就将其入栈，若遇到运算符，就从栈顶弹出需要的运算数并进行运算，然后将结果压入栈顶，如此重复，直到表达式结束。若表达式无错误，则最后的运算结果就存放在找顶并且是栈中唯一的元素。","analysis":"A"},{"product_id":"20151205131559452","ans":"信号量S1是一个互斥信号量，表示半成品箱B1当前无工人(生产者)使用，所以初值为1。信号量S5也是一个互斥信号量，表示成品箱B2当前无工人或检验员使用，所以初值为1。","analysis":"C"},{"product_id":"20151205131649046","ans":"信号量S2表示半成品箱B1的容量，故S2的初值为n。当工人P1不断地将其工序上加工的半成品放入半成品箱B1时，应该先测试半成品箱是否有空位，故工人P1使用P(S2)，当工人P2从半成品箱取一件半成品时，半成品箱B1就空出一个空位，故工人P2使用V(S2)释放空间。同理，信号量S4表示成品箱B2的容量，故S4的初值为m。当工人P2完成一件产品放入成品箱B2时，应该先测试成品箱是否有空位，故工人P2使用P(S4),当检验员P3从成品箱取一件产品检验时，成品箱B2就空出一个空位，故检验员P3使用V(S4)释放空间。","analysis":"D"},{"product_id":"20151205131803171","ans":"在块设备输入时，假定从磁盘把一块数据输入到缓冲区的时间为T，缓冲区中的数据传送到用户工作区的时间为M，而系统处理(计算)的时间为C，如图(a)所示。当第一块数据送入用户工作区后，缓冲区是空闲的就可以传送第二块数据。这样第一块数据的处理C1与第二块数据的输入T2是可以并行的，依次类推，如图(b)所示。系统对每一块数据的处理时间为：Max(C，T)+M。因为，当T>C时，处理时间为M+T;当T<C时，处理时间为M+C。本题每一块数据的处理时间为15+5=20，Docl文件的处理时间为20*10+1。","analysis":"D"},{"product_id":"20151205131949671","ans":"双缓冲工作方式基本方法是在设备输入时，先将数据输入到缓冲区1，装满后便转向缓冲区2。此时系统可以从缓冲区1中提取数据传送到用户区，最后由系统对数据进行处理，如图(c)所示。双缓冲可以实现对缓冲区中数据的输入T和提取M，与CPU的计算C，三者并行工作，如图(d)所示。从图中可以看出，双缓冲进一步加快了I/O的速度，提高了设备的利用率。在双缓冲时，系统处理一块数据的时间可以粗略地认为是Max(C，T)。如果C<T，可使块设备连续输入；如果C>T，则可使系统不必等待设备输入。本题每一块数据的处理时间为15，釆用双缓冲需要花费的时间为15*10+5+1=156。","analysis":"C"},{"product_id":"20151205132223764","ans":"R2资源有3个，已分配2个，P3申请1个R2资源可以得到满足，故进程P3可以运行完毕释放其占有的资源。这样可以使得P1、P3都变为非阻塞节点，得到所需资源运行完毕，因此，该进程资源图是可化简的。","analysis":"D"},{"product_id":"20151205132329405","ans":"在同一进程中的各个线程都可以共享该进程所拥有的资源，如访问进程地址空间中的每一个虚地址；访问进程所拥有的已打开文件、定时器、信号量机构等，但是不能共享进程中某线程的栈指针。","analysis":"C"},{"product_id":"20151205132450749","ans":"本题考査软件开发过程模型的基础知识。瀑布模型将开发阶段描述为从一个阶段瀑布般地转换到另一个阶段的过程。原型模型中，开发人员快速地构造整个系统或者系统的一部分以理解或澄清问题。螺旋模型将开发活动和风险管理结合起来，以减小风险。喷泉模型开发过程模型以用户需求为动力，以对象为驱动，适合于面向对象的开发方法。在这几种开发过程模型中，原型模型不适宜大规模软件的开发。","analysis":"B"},{"product_id":"20151205132537155","ans":"本题考查软件开发过程模型的基础知识。根据题干描述，合适的开发过程模型为喷泉模型。","analysis":"D"},{"product_id":"20151205132657421","ans":"本题考查软件质量的基础知识。ISO/IEC软件质量模型由三个层次组成：第一层是质量特性，第二层是质量子特性，第三层是度量指标。易使用性是指与为使用所需的努力和由一组规定或隐含的用户对这样使用所做的个别评价有关的一组属性。其子特性包括易理解性、易学性、易操作性。","analysis":"D"},{"product_id":"20151205132759593","ans":"本题考查软件设计的基础知识。子系统结构设计中，重点关注如何划分模块，子系统之间以及模块之间的数据和调用关系，模块结构质量等这些粗粒度的问题；而对每个模块内部进行设计时，才需要考虑采用的数据结构以及处理的算法。","analysis":"B"},{"product_id":"20151205132925389","ans":"本题考查结构化分析方面的基础知识。在结构化分析中，用数据流图对软件功能建模，加工是数据流的一个重要要素，可以用多种方式描述，如流程图、NS盒图等，其中决策树和决策表适于用来表示加工中涉及多个逻辑条件的情况。","analysis":"D"},{"product_id":"20151205133014561","ans":"本题考查软件工程过程及软件工具的基础知识。逆向工程从源代码得到软件系统的规格说明和设计信息，属于软件维护阶段行为，因此逆向工程工具属于软件维护工具。","analysis":"B"},{"product_id":"20151205133744264","ans":"本题考查软件测试的基础知识。画出该代码的流程图，如下：要满足条件覆盖，要求三个判断框的Y和N至少要经过一次，即1Y2Y；1Y2N；1N3Y；1N3N，至少需要4个测试用例。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V(G)=m-n+2，图中m=9，n=7，V(G)=9-7+2=4。","analysis":"B"},{"product_id":"20151205133844780","ans":"本题考查软件测试的基础知识。画出该代码的流程图，如下：要满足条件覆盖，要求三个判断框的Y和N至少要经过一次，即1Y2Y；1Y2N；1N3Y；1N3N，至少需要4个测试用例。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V(G)=m-n+2，图中m=9，n=7，V(G)=9-7+2=4。","analysis":"D"},{"product_id":"20151205133944999","ans":"本题考查面向对象的基本知识。在面向对象系统中，对象是基本的运行时的实体，它既包括数据(属性)，也包括作用于数据的操作(行为)。所以，一个对象把属性和行为封装为一个整体。封装是一种信息隐蔽技术，它的目的是使对象的使用者和生产者分离，使对象的定义和实现分开。从程序设计者来看，对象是一个程序模块；从用户来看，对象为他们提供了所希望的行为。在对象内的操作通常叫做方法。一个对象通常可由对象名、属性和方法三部分组成。一个类定义了一组大体上相似的对象。一个类所包含的方法和数据描述一组对象的共同行为和属性，这些对象共享这些行为和属性。","analysis":"A"},{"product_id":"20151205134019811","ans":"本题考查面向对象的基本知识。在面向对象系统中，对象是基本的运行时的实体，它既包括数据(属性)，也包括作用于数据的操作(行为)。所以，一个对象把属性和行为封装为一个整体。封装是一种信息隐蔽技术，它的目的是使对象的使用者和生产者分离，使对象的定义和实现分开。从程序设计者来看，对象是一个程序模块；从用户来看，对象为他们提供了所希望的行为。在对象内的操作通常叫做方法。一个对象通常可由对象名、属性和方法三部分组成。一个类定义了一组大体上相似的对象。一个类所包含的方法和数据描述一组对象的共同行为和属性，这些对象共享这些行为和属性。","analysis":"D"},{"product_id":"20151205134153233","ans":"本题考查面向对象和统一建模语言(UML)的基本知识。一个类定义了一组大体上相似的对象。一个类所包含的方法和数据描述一组对象的共同行为和属性。有些类之间存在一般和特殊关系，即一些类是某个类的特殊情况，某个类是一些类的一般情况，即继承关系。继承是父类和子类之间共享数据和方法的机制。父类描述了这些子类的公共属性和方法。一个子类可以继承它的父类(或祖先类)中的属性和方法，这些属性和操作在子类中不必定义，子类中还可以定义自己的属性和方法，也可以重新定义父类中己经定义的方法，即重置或覆盖(overriding)。UML类图中，如果父类中已有方法名在子类中不出现，表示子类继承父类中的方法；如果父类中已有方法名在子类中出规了，就表示子类在继承父类接口定义的前提下，用适合于自己要求的实现去置换父类中的相应实现，即覆盖了父类中的方法。","analysis":"B"},{"product_id":"20151205134355155","ans":"本题考查统一建模语言(UML)的基本知识。用例图(usecasediagram)展现了一组用例、参与者(Actor)以及它们之间的关系。用例图通常包括用例、参与者，以及用例之间的扩展关系(<<extend>>)和包含关系(<<include>>)，参与者和用例之间的关联关系，用例与用例以及参与者与参与者之间的泛化关系。如下图所示。用例图用于对系统的静态用例视图进行建模，主要支持系统的行为，即该系统在它的周边环境的语境中所提供的外部可见服务。","analysis":"A"},{"product_id":"20151205134424030","ans":"本题考查统一建模语言(UML)的基本知识。用例图(usecasediagram)展现了一组用例、参与者(Actor)以及它们之间的关系。用例图通常包括用例、参与者，以及用例之间的扩展关系(<<extend>>)和包含关系(<<include>>)，参与者和用例之间的关联关系，用例与用例以及参与者与参与者之间的泛化关系。如下图所示。用例图用于对系统的静态用例视图进行建模，主要支持系统的行为，即该系统在它的周边环境的语境中所提供的外部可见服务。","analysis":"C"},{"product_id":"20151205134454014","ans":"本题考查统一建模语言(UML)的基本知识。用例图(usecasediagram)展现了一组用例、参与者(Actor)以及它们之间的关系。用例图通常包括用例、参与者，以及用例之间的扩展关系(<<extend>>)和包含关系(<<include>>)，参与者和用例之间的关联关系，用例与用例以及参与者与参与者之间的泛化关系。如下图所示。用例图用于对系统的静态用例视图进行建模，主要支持系统的行为，即该系统在它的周边环境的语境中所提供的外部可见服务。","analysis":"B"},{"product_id":"20151205134633577","ans":"本题考查统一建模语言(UML)的基本知识。UML中提供了多种建模系统的图，体现系统的静态方面和动态方面。类图(classdiagram)展现了一组对象、接口、协作和它们之间的关系。在面向对象系统的建模中所建立的最常见的图就是类图。类图给出系统的静态设计视图。部署图(deploymentdiagram)是用来对面向对象系统的物理方面建模的方法，展现了运行时处理结点以及其中构件(制品)的配置。部署图对系统的静态部署视图进行建模，它与组件图(构件图)相关。组件图或构件图(componentdiagram)展现了一组构件之间的组织和依赖，如题中的图所示。组件图或构件图专注于系统的静态实现视图。它与类图相关，通常把构件映射为一个或多个类、接口或协作。UML部署图经常被认为是一个网络图。","analysis":"C"},{"product_id":"20151205134728311","ans":"本题考査设计模式的基本概念。Singleton(单例)设计模式是一种创建型模式，其意图是保证一个类仅有一个实例，并提供一个访问这个唯一实例的全局访问点。单例模式适用于当类只能有一个实例而且客户可以从一个众所周知的访问点访问它时，以及当这个唯一实例应该是通过子类化可扩展的，并且客户应该无需更改代码就能使用一个扩展的实例时。","analysis":"D"},{"product_id":"20151205134934327","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。组合(Composite)模式将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。适用于：想表示对象的部分-整体层次结构；希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。外观(Facade)模式为子系统中的一组接口提供一个一致的界面，Fapde模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。适用于：要为一个复杂子系统提供一个简单接口时，子系统往往因为不断演化而变得越来越复杂；客户程序与抽象类的实现部分之间存在着很大的依赖性；当需要构建一个层次结构的子系统时，使用Fapde模式定义子系统中每层的入口点。享元(Flyweight)模式运用共享技术有效地支持大量细粒度的对象。适用于：一个应用程序使用了大量的对象；完全由于使用大量的对象，造成很大的存储开销；对象的大多数状态都可变为外部状态；如果删除对象的外部状态，那么可以用相对较少的共享对象取代很多组对象：应用程序不依赖于对象标识。装饰器(Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。适用于：在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责；处理那些可以撤销的职责；当不能采用生成子类的方式进行扩充时。工厂方法(FactoryMethod)定义一个用于创建对象的接口，让子类决定将哪-个类实例化，使一个类的实例化延迟到其子类。适用于：当一个类不知道它所必须创建的对象的类的时候；当一个类希望由它的子类来指定它所创建的对象的时候；当类将创建对象的职责委托给多个帮助子类中的某一个，并且希望将哪一个帮助子类是代理者这一信息局部化的时候。观察者(Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。适用于：当一个抽象模型有两个方面，其中一个方面依赖于另一个方面，将这两者封装在独立的对象中以使它们可以各自独立地改变和复用；当对一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变时；当一个对象必须通知其他对象，而它又不能假定其他对象是谁，即不希望这些对象是紧耦合的。中介者(Mediator)用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。适用于：一组对象以定义良好但是复杂的方式进行通信，产生的相互依赖关系结构混乱且难以理解；一个对象引用其他很多对象并且直接与这些对象通信，导致难以复用该对象；想定制一个分布在多个类中的行为，而又不想生成太多的子类。欲使一个后端数据模型能够被多个前端用户界面连接，采用中介者模式最合适。","analysis":"D"},{"product_id":"20151205135013358","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。组合(Composite)模式将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。适用于：想表示对象的部分-整体层次结构；希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。外观(Facade)模式为子系统中的一组接口提供一个一致的界面，Fapde模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。适用于：要为一个复杂子系统提供一个简单接口时，子系统往往因为不断演化而变得越来越复杂；客户程序与抽象类的实现部分之间存在着很大的依赖性；当需要构建一个层次结构的子系统时，使用Fapde模式定义子系统中每层的入口点。享元(Flyweight)模式运用共享技术有效地支持大量细粒度的对象。适用于：一个应用程序使用了大量的对象；完全由于使用大量的对象，造成很大的存储开销；对象的大多数状态都可变为外部状态；如果删除对象的外部状态，那么可以用相对较少的共享对象取代很多组对象：应用程序不依赖于对象标识。装饰器(Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。适用于：在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责；处理那些可以撤销的职责；当不能采用生成子类的方式进行扩充时。工厂方法(FactoryMethod)定义一个用于创建对象的接口，让子类决定将哪-个类实例化，使一个类的实例化延迟到其子类。适用于：当一个类不知道它所必须创建的对象的类的时候；当一个类希望由它的子类来指定它所创建的对象的时候；当类将创建对象的职责委托给多个帮助子类中的某一个，并且希望将哪一个帮助子类是代理者这一信息局部化的时候。观察者(Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。适用于：当一个抽象模型有两个方面，其中一个方面依赖于另一个方面，将这两者封装在独立的对象中以使它们可以各自独立地改变和复用；当对一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变时；当一个对象必须通知其他对象，而它又不能假定其他对象是谁，即不希望这些对象是紧耦合的。中介者(Mediator)用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。适用于：一组对象以定义良好但是复杂的方式进行通信，产生的相互依赖关系结构混乱且难以理解；一个对象引用其他很多对象并且直接与这些对象通信，导致难以复用该对象；想定制一个分布在多个类中的行为，而又不想生成太多的子类。欲使一个后端数据模型能够被多个前端用户界面连接，采用中介者模式最合适。","analysis":"A"},{"product_id":"20151205135029593","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。组合(Composite)模式将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。适用于：想表示对象的部分-整体层次结构；希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。外观(Facade)模式为子系统中的一组接口提供一个一致的界面，Fapde模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。适用于：要为一个复杂子系统提供一个简单接口时，子系统往往因为不断演化而变得越来越复杂；客户程序与抽象类的实现部分之间存在着很大的依赖性；当需要构建一个层次结构的子系统时，使用Fapde模式定义子系统中每层的入口点。享元(Flyweight)模式运用共享技术有效地支持大量细粒度的对象。适用于：一个应用程序使用了大量的对象；完全由于使用大量的对象，造成很大的存储开销；对象的大多数状态都可变为外部状态；如果删除对象的外部状态，那么可以用相对较少的共享对象取代很多组对象：应用程序不依赖于对象标识。装饰器(Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。适用于：在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责；处理那些可以撤销的职责；当不能采用生成子类的方式进行扩充时。工厂方法(FactoryMethod)定义一个用于创建对象的接口，让子类决定将哪-个类实例化，使一个类的实例化延迟到其子类。适用于：当一个类不知道它所必须创建的对象的类的时候；当一个类希望由它的子类来指定它所创建的对象的时候；当类将创建对象的职责委托给多个帮助子类中的某一个，并且希望将哪一个帮助子类是代理者这一信息局部化的时候。观察者(Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。适用于：当一个抽象模型有两个方面，其中一个方面依赖于另一个方面，将这两者封装在独立的对象中以使它们可以各自独立地改变和复用；当对一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变时；当一个对象必须通知其他对象，而它又不能假定其他对象是谁，即不希望这些对象是紧耦合的。中介者(Mediator)用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。适用于：一组对象以定义良好但是复杂的方式进行通信，产生的相互依赖关系结构混乱且难以理解；一个对象引用其他很多对象并且直接与这些对象通信，导致难以复用该对象；想定制一个分布在多个类中的行为，而又不想生成太多的子类。欲使一个后端数据模型能够被多个前端用户界面连接，采用中介者模式最合适。","analysis":"D"},{"product_id":"20151205135203093","ans":"本题考查程序语目基础知识。程序已经开始运行，说明编译时无错误，因此不是语法错误和词法错误，编译时发现的语义错误称为静态的语义错误。运行时陷入死循环属于动态语义错误。","analysis":"C"},{"product_id":"20151205135343546","ans":"本题考查程序语言基础知识。若存在一条从初态到某一终止状态的路径，且这条路径上所有弧的标记符连接成的字符串等于ω，则称ω可由NFA识别(接受或读出)。对于题中给出的NFA，其初态为q0，q0上的自回路表示识别零个或多个1，接下来识别出一个0时进入状态q1，q1上的自回路表示识别零个或多个0，接下来识别出1个1之后再回到q0。例如，该自动机可识别空串(因为q0既是初态，也是终态)、01、00001、101、1、11、111、1111等。01的识别路径为q0->q1->q000001的识别路径为q0->q1->q1->q1->q1->q0101的识别路径为q0->q0->q->q1->q01的识别路径为q0->q011的识别路径为q0->q0->q0111的识别路径为q0->q0->q0->q01111的识别路径为q0->q0->q0->q0->q0识別字符串时必须从初始状态q0出发，并回到状态q0，因此对于仅由1构成的任意长度的串，在识别过程中不会离开q0。当识别出一个0而离开q0后就进入q1，此后的字符若全部为0，则会一直在q1，直到识别出一个1而回到q0，因此除了空串，该NFA识别的字符串必须以1结尾。","analysis":"D"},{"product_id":"20151205135517718","ans":"本题考查程序语言基础知识。若函数调用时采用传值方式，则是将实参的值传给形参，再执行被调用的函数，对形参的修改不影响实参。若采用传引用方式，则是将实参的地址传递给形参，本质上是通过间接访问的方式修改实参，也可以简化理解为：在被调用函数中对形参的修改等同于是对实参进行修改。当函数t和f运行时，其每个形参和局部变量都有各自的存储单元，下面图中矩形框表示存储单元。如题中所述，调用t时传递给其形参x的值为5。因此函数t被调用而执行时，在执行函数调用f(x，a)之前，其形参x和局部变量a的值如下图(a)所示。执行函数调用f(x，a)时，t中x的值传给f的形参r、a的地址传给f的形参s，如下图(b)所示。在f执行时，其局部变量x的值由运算“X=2*s+1”改为33，其中运算时可理解为s提供了t的局部变量a的值(是由间接访问机制实现的)。接下来的运算为“S=x+r”，也就是将x的值(即33)与r的值(即5)相加得到38，然后(通过间接访问)存入t的局部变量a，结果如下图(c)、(d)所示。之后运算“r=x-1”将r的值改为32，结果如下图(e)所示。当函数f运行结束并返回函数t后，函数f的运行空间将由系统撤销，接下来运算“a-x”产生的值为33(即38-5)，因此函数t的返回值为33。","analysis":"A"},{"product_id":"20151205135708827","ans":"本题考查数据库的基本概念。数据库通常采用三级模式结构，其中，视图对应外模式、基本表对应模式、存储文件对应内模式。","analysis":"B"},{"product_id":"20151205135956046","ans":"本题考查对数据库应用系统设计中逻辑结构设计的掌握。在数据库设计中，将E-R图转换为关系模式是逻辑设计的主要内容。转换中将实体转换为关系模式，对实体中的派生属性不予考虑，组合属性只取各组合分量，若包含多值属性，通常一个实体对应一个关系模式。对实体中的多值属性，取实体的码和多值属性构成新增的关系模式，且该新增关系模式中，实体的码多值决定多值属性，属于平凡的多值依赖，关系属于4NF。","analysis":"C"},{"product_id":"20151205140132093","ans":"本题考查分布式数据库基本概念。分片透明是指用户或应用程序不需要知道逻辑上访问的表具体是怎么分块存储的，复制透明是指采用复制技术的分布方法，用户不需要知道数据是复制到哪些节点，如何复制的。位置透明是指用户无须知道数据存放的物理位置，逻辑透明，即局部数据模型透明，是指用户或应用程序无须知道局部场地使用的是哪种数据模型。","analysis":"D"},{"product_id":"20151205140206843","ans":"本题考查分布式数据库基本概念。分片透明是指用户或应用程序不需要知道逻辑上访问的表具体是怎么分块存储的，复制透明是指采用复制技术的分布方法，用户不需要知道数据是复制到哪些节点，如何复制的。位置透明是指用户无须知道数据存放的物理位置，逻辑透明，即局部数据模型透明，是指用户或应用程序无须知道局部场地使用的是哪种数据模型。","analysis":"A"},{"product_id":"20151205140523530","ans":"本题主要考核关系模式规范化方面的相关知识。根据函数依赖集F可知属性A3和A5只出现在函数依赖的左部，故必为候选关键字属性，又因为A3A5可以决定关系R中的全部属性，故关系模式R的一个主键是A3A5。","analysis":"C"},{"product_id":"20151205140637639","ans":"根据函数依赖集F可知，R中的每个非主属性完全函数依赖于A3A5，但该函数依赖集中存在传递依赖，所以R是2NF。","analysis":"B"},{"product_id":"20151205140846061","ans":"本题考查数据结构基础知识。栈和队列都是线性的数据结构。栈的操作要求是入桟和出栈都在表尾进行，即在栈中有多个元素时，后进去的元素先出来，特点是后进先出，元素入栈的顺序与出桟的顺序可以相同也可以不同。而队列的修改要求是在队尾加入元素，在队头删除元素，特点是先进先出，元素的入队顺序与出队顺序一定相同。将一个栈和队列连接后，进出队列的元素顺序是相同的，而进入队列的元素顺序正是从栈中出来的元素顺序，因此，正确的叙述为出队序列与出栈序列一定相同。","analysis":"B"},{"product_id":"20151205141106671","ans":"本题考查数据结构基础知识。解答该问题需先计算排列在Aij之前的元素个数。在按行存储方式下，存储在Aij之前的元素分为i-1行，除第1行外，每行3个元素。在第i行上，Aij之前的元素个数分为三种情况：i>j时为0个，i=j时有1个，i<j时为2个，概括为j-i+1个。综上，排列在Aij之前的元素个数为(i-1)x3-1+j-i+1，即2i+j-3。由于数组B的下标从1开始，所以k=2i+j-3+1。","analysis":"A"},{"product_id":"20151205141231936","ans":"本题考查数据结构基础知识。由于序列的第一个元素是结点7，最后一个元素是结点1，因此，左右子树的遍历顺序是先右后左。观察结点7的左子树，遍历顺序为654，因此是中序遍历过程。所以答案为RDL。","analysis":"D"},{"product_id":"20151205141412921","ans":"本题考查数据结构基础知识。对55个元素构成的有序表进行折半查找时，可用判定树描述查找过程由于A[19]小于中间元素A[28]，所以判定树的左分支如下图所示。从中可知，查找过程中参与比较的元素分别为A[28]、A[14]、A[21]、A[17]、A[19]。","analysis":"B"},{"product_id":"20151205141514296","ans":"本题考查数据结构基础知识。通过一个例子说明。某有向图及其邻接矩阵如下图所示。邻接矩阵中的每个非零元素都表示一条弧，所以非零元素数目为弧的个数e。","analysis":"A"},{"product_id":"20151205142021202","ans":"本题考查算法分析的基础知识。根据主方法，先计算算法A的时间复杂度，a=8，b=2，logba=log28=3，而f(n)=n2，因此时间复杂度为θ(n3)。然后计算算法B的时间复杂度，a=X，b=4，logba=log4X，而f(n)=n2，若算法B和算法A的效率一样，则X应该为64(log464=3)，而现在要使得B比A快，则X应该比64小，因此最大的整数应该为63。","analysis":"D"},{"product_id":"20151205142058905","ans":"本题考查算法分析的基础知识。根据主方法，先计算算法A的时间复杂度，a=8，b=2，logba=log28=3，而f(n)=n2，因此时间复杂度为®(n3)。然后计算算法B的时间复杂度，a=X，b=4，logba=log4X，而f(n)=n2，若算法B和算法A的效率一样，则X应该为64(log464=3)，而现在要使得B比A快，则X应该比64小，因此最大的整数应该为63。","analysis":"C"},{"product_id":"20151205142143999","ans":"本题考查算法设计和排序的基础知识。排序是一类最基本的操作，因此要求考生熟悉一些典型的排序算法，包括其算法思想、时空复杂度以及应用场合。若数据基本有序，插入排序应该是最佳选择，输入数据是否有序对归并和计数排序算法并没有影响。对传统的快速排序算法，输入数据有序反而使其效率最低。若关键字取值范围较小，则计数排序是最佳选择，因为在该情况下，该算法的时间复杂度为线性时间。","analysis":"A"},{"product_id":"20151205142440468","ans":"本题考查算法设计和排序的基础知识。排序是一类最基本的操作，因此要求考生熟悉一些典型的排序算法，包括其算法思想、时空复杂度以及应用场合。若数据基本有序，插入排序应该是最佳选择，输入数据是否有序对归并和计数排序算法并没有影响。对传统的快速排序算法，输入数据有序反而使其效率最低。若关键字取值范围较小，则计数排序是最佳选择，因为在该情况下，该算法的时间复杂度为线性时间。","analysis":"D"},{"product_id":"20151205142548858","ans":"集线器是物理层设备，相当于在10BASE2局域网中把连接工作站的同轴电缆收拢在一个盒子里，这个盒子只起到接收和发送的功能，可以检测发送冲突，但不能识别数据链路层的帧。网桥是数据链路层设备，它可以识别数据链路层MAC地址，有选择地把帧发送到输出端口，网桥也可以有多个端口，如果网桥端口很多，并配置了加快转发的硬件，就成为局域网交换机。","analysis":"B"},{"product_id":"20151205142800077","ans":"本题考查POP3协议及POP3服务器方面的基础知识。POP3协议是TCP/IP协议簇中用于邮件接收的协议。邮件客户端通过与服务器之间建立TCP连接，采用Client/Server计算模式来传送邮件。","analysis":"B"},{"product_id":"20151205142959233","ans":"TCP的流量控制采用了可变大小的滑动窗口协议，由接收方指明接收缓冲区的大小(字节数)，发送方发送了规定的字节数后等待接收方的下一次请求。固定大小的滑动窗口协议用在数据链路层的HDLC中。可变大小的滑动窗口协议可以应付长距离通信过程中线路延迟不确定的情况，而固定大小的滑动窗口协议则适合链路两端点之间通信延迟固定的情况。","analysis":"C"},{"product_id":"20151205143057608","ans":"主机路由的子网掩码是255.255.255.255。网络路由要指明一个子网，所以不可能为全1，默认路由是访问默认网关，而默认网关与本地主机属于同一个子网，其子网掩码也应该与网络路由相同，对静态路由也是同样的道理。","analysis":"D"},{"product_id":"20151205143158952","ans":"在层次化局域网模型中，核心层的主要功能是将分组从一个区域高速地转发到另一个区域。核心层是因特网络的高速骨干，由于其重要性，因此在设计中应该采用冗余组件设计，使其具备高可靠性，能快速适应变化。在设计核心层设备的功能时，应尽量避免使用数据包过滤、策略路由等降低数据包转发处理的特性，以优化核心层获得低延迟和良好的可管理性。汇聚层是核心层和接入层的分界点，应尽量将资源访问控制、核心层流量的控制等都在汇聚层实施。汇聚层应向核心层隐藏接入层的详细信息，汇聚层向核心层路由器进行路由宣告时，仅宣告多个子网地址汇聚而形成的一个网络。另外，汇聚层也会对接入层屏蔽网络其他部分的信息，汇聚层路由器可以不向接入路由器宣告其他网络部分的路由，而仅仅向接入设备宣告自己为默认路由。接入层为用户提供了在本地网段访问应用系统的能力，接入层要解决相邻用户之间的互访需要，并且为这些访问提供足够的带宽。接入层还应该适当负责一些用户管理功能，包括地址认证、用户认证和计费管理等内容。接入层还负责一些用户信息收集工作，例如用户的IP地址、MAC地址和访问日志等信息。","analysis":"B"},{"product_id":"20151205143238921","ans":"在这个世界上，似乎我们有太多的事情要去做，有太多的事情要去思考，那么需要做的最后一件事就是必须学习新事物。而用例恰恰可以解决带有需求的问题：如果具有严格声明的需求，则很难描述事件的步骤和序列。简单地说，用例可以将事件序列的说明放在一起，引导系统完成有用的任务。正如听起来一样简单——这很重要。在面对很多需求的时候，通常不太可能理解需求的作者真正想要系统做什么。在前面的例子中，通过指定特定行为发生的时间和条件，用例减少了需求的不确定性。这样的话，行为的顺序就可以当作是一种需求。用例特别适用于捕捉这类需求。尽管听起来可能很简单，但事实情况是由于常规的需求捕捉方法所侧重的是声明需求和“应该怎么样”的陈述，因此完全无法捕捉系统行为的动态方面。用例是一种简单而有效的表达系统行为的方式，使用这种方式所有参与者都很容易理解。但是与任何事物一样，用例也存在自己的问题——在用例非常有用的同时，人们也可能误用它，结果就产生了比原来更为糟糕的问题。因此重点在于：如何有效地使用用例，而又不会产生出比原来更严重的问题。","analysis":"D"},{"product_id":"20151205143313233","ans":"在这个世界上，似乎我们有太多的事情要去做，有太多的事情要去思考，那么需要做的最后一件事就是必须学习新事物。而用例恰恰可以解决带有需求的问题：如果具有严格声明的需求，则很难描述事件的步骤和序列。简单地说，用例可以将事件序列的说明放在一起，引导系统完成有用的任务。正如听起来一样简单——这很重要。在面对很多需求的时候，通常不太可能理解需求的作者真正想要系统做什么。在前面的例子中，通过指定特定行为发生的时间和条件，用例减少了需求的不确定性。这样的话，行为的顺序就可以当作是一种需求。用例特别适用于捕捉这类需求。尽管听起来可能很简单，但事实情况是由于常规的需求捕捉方法所侧重的是声明需求和“应该怎么样”的陈述，因此完全无法捕捉系统行为的动态方面。用例是一种简单而有效的表达系统行为的方式，使用这种方式所有参与者都很容易理解。但是与任何事物一样，用例也存在自己的问题——在用例非常有用的同时，人们也可能误用它，结果就产生了比原来更为糟糕的问题。因此重点在于：如何有效地使用用例，而又不会产生出比原来更严重的问题。","analysis":"A"},{"product_id":"20151205143358624","ans":"在这个世界上，似乎我们有太多的事情要去做，有太多的事情要去思考，那么需要做的最后一件事就是必须学习新事物。而用例恰恰可以解决带有需求的问题：如果具有严格声明的需求，则很难描述事件的步骤和序列。简单地说，用例可以将事件序列的说明放在一起，引导系统完成有用的任务。正如听起来一样简单——这很重要。在面对很多需求的时候，通常不太可能理解需求的作者真正想要系统做什么。在前面的例子中，通过指定特定行为发生的时间和条件，用例减少了需求的不确定性。这样的话，行为的顺序就可以当作是一种需求。用例特别适用于捕捉这类需求。尽管听起来可能很简单，但事实情况是由于常规的需求捕捉方法所侧重的是声明需求和“应该怎么样”的陈述，因此完全无法捕捉系统行为的动态方面。用例是一种简单而有效的表达系统行为的方式，使用这种方式所有参与者都很容易理解。但是与任何事物一样，用例也存在自己的问题——在用例非常有用的同时，人们也可能误用它，结果就产生了比原来更为糟糕的问题。因此重点在于：如何有效地使用用例，而又不会产生出比原来更严重的问题。","analysis":"B"},{"product_id":"20151205143436077","ans":"在这个世界上，似乎我们有太多的事情要去做，有太多的事情要去思考，那么需要做的最后一件事就是必须学习新事物。而用例恰恰可以解决带有需求的问题：如果具有严格声明的需求，则很难描述事件的步骤和序列。简单地说，用例可以将事件序列的说明放在一起，引导系统完成有用的任务。正如听起来一样简单——这很重要。在面对很多需求的时候，通常不太可能理解需求的作者真正想要系统做什么。在前面的例子中，通过指定特定行为发生的时间和条件，用例减少了需求的不确定性。这样的话，行为的顺序就可以当作是一种需求。用例特别适用于捕捉这类需求。尽管听起来可能很简单，但事实情况是由于常规的需求捕捉方法所侧重的是声明需求和“应该怎么样”的陈述，因此完全无法捕捉系统行为的动态方面。用例是一种简单而有效的表达系统行为的方式，使用这种方式所有参与者都很容易理解。但是与任何事物一样，用例也存在自己的问题——在用例非常有用的同时，人们也可能误用它，结果就产生了比原来更为糟糕的问题。因此重点在于：如何有效地使用用例，而又不会产生出比原来更严重的问题。","analysis":"C"},{"product_id":"20151205143511264","ans":"在这个世界上，似乎我们有太多的事情要去做，有太多的事情要去思考，那么需要做的最后一件事就是必须学习新事物。而用例恰恰可以解决带有需求的问题：如果具有严格声明的需求，则很难描述事件的步骤和序列。简单地说，用例可以将事件序列的说明放在一起，引导系统完成有用的任务。正如听起来一样简单——这很重要。在面对很多需求的时候，通常不太可能理解需求的作者真正想要系统做什么。在前面的例子中，通过指定特定行为发生的时间和条件，用例减少了需求的不确定性。这样的话，行为的顺序就可以当作是一种需求。用例特别适用于捕捉这类需求。尽管听起来可能很简单，但事实情况是由于常规的需求捕捉方法所侧重的是声明需求和“应该怎么样”的陈述，因此完全无法捕捉系统行为的动态方面。用例是一种简单而有效的表达系统行为的方式，使用这种方式所有参与者都很容易理解。但是与任何事物一样，用例也存在自己的问题——在用例非常有用的同时，人们也可能误用它，结果就产生了比原来更为糟糕的问题。因此重点在于：如何有效地使用用例，而又不会产生出比原来更严重的问题。","analysis":"A"}]},{"paperId":"359","field":"20151","question_list":[{"product_id":"20150725152155285","ans":"本题考查计算机系统的基础知识。二进制数据在计算机系统中的表示方法是最基本的专业知识。补码本身是带符号位的，补码表示的数字中0是唯一的，不像原码有+0和-0之分，也就意味着n位进制编码可以表示2n个不同的数。","analysis":"A"},{"product_id":"20150725152357488","ans":"本题考查计算机系统的基础知识。计算机系统中的CPU内部对通用寄存器的存取操作是速度最快的，其次是Cache,内存的存取速度再次，选项中访问速度最慢的就是作为外存的硬盘。它们共同组成分级存储体系来解决存储容量、成本和速度之间的矛盾。","analysis":"C"},{"product_id":"20150725152911441","ans":"本题考查计算机组成的基础知识。Cache工作时，需要拷贝主存信息到Cache中，就需要建变主存地址和Cache地址的映射关系。Cache的地址映射方法主要有三种，即全相联映像、直接映像和组相联映像。其中全相联方式意味着主存的任意一块可以映像到Cache中的任意一块，其特点是块冲突概率低，Cache空间利用率高，但是相联目录表容量大导致成本高、查表速度慢;直接映像方式是指主存的每一块只能映像到Cache的一个特定的块中，整个Cache地址与主存地址的低位部分完全相同，其特点是硬件简单，不需要相联存储器，访问速度快(无须地址变换），但是Cache块冲突概率高导致Cache空间利用率很低；组相联方式是对上述两种方式的折中处理，对Cache分组，实现组间直接映射，组内全相联，从而获得较低的块冲突概率、较高的块利用率，同时得到较快的速度和较低的成本。","analysis":"A"},{"product_id":"20150725153030207","ans":"本题考查计算机系统的基础知识。中断系统是计算机实现中断功能的软硬件总称。一般在CPU中设置中断机构，在外设接口中设置中断控制器，在软件上设置相应的中断服务程序。中断源在需要得到CPU服务时，请求CPU暂停现行工作转向为中断源服务，服务完成后，再让CPU回到原工作状态继续完成被打断的工作。中断的发生起始于中断源发出中断请求，中断处理过程中，中断系统需要解决一系列问题，包括中断响应的条件和时机，断点信息的保护与恢复，中断服务程序入口、中断处理等。中断响应时间，是指从发出中断请求到开始进入中断服务程序所需的时间。","analysis":"D"},{"product_id":"20150725153231113","ans":"本题考查计算机系统的基础知识。总线宽度是指总线的线数，即数据信号的并行传输能力，也体现总线占用的物理空间和成本；总线的带宽是指总线的最大数据传输率，即每秒传输的数据总量。总线宽度与时钟频率共同决定了总线的带宽。32bit/8=4Byte,200MHz/5X4Byte=160MB/s","analysis":"C"},{"product_id":"20150725153928832","ans":"本题考查计算机系统结构的基础知识。对指令流水线性能的度量主要有吞吐率，加速比和效率等指标。吞吐率是指单位时间内流水线所完成的任务数或输出结果的数量，最大吞吐率则是流水线在达到稳定状态后所得到的吞吐率，它取决于流水线中最慢一段所需的时间，所以该段成为流水线的瓶颈。流水线的加速比定义为等功能的非流水线执行时间与流水线执行时间之比，加速比与吞吐率成正比，如果流水线断流，实际吞吐率将会明显下降，则加速比也会明显下降。流水线的效率是指流水线的设备利用率，从时空图上看效率就是n个任务所占的时空区与m个段总的时空区之比。因此要使加速比和效率最大化应该流水线各级采用相同的运行时间。另外，流水线釆用异步控制并不会给流水线性能带来改善，反而会增加控制电路的复杂性。","analysis":"D"},{"product_id":"20150725154153738","ans":"终端设备与远程站点之间建立安全连接的协议是SSH。SSH为SecureShell的缩写，是由IETF制定的建立在应用层和传输层基础上的安全协议。SSH是专为远程登录会话和其他网络服务提供安全性的协议。利用SSH协议可以有效防止远程管理过程中的信息泄露问题。SSH最初是UNIX上的程序，后来又迅速扩展到其他操作平台。","analysis":"C"},{"product_id":"20150725154313988","ans":"机房安全属于物理安全，入侵检测属于网络安全，漏洞补丁管理属于系统安全，而数据库安全则是应用安全。","analysis":"C"},{"product_id":"20150725154358972","ans":"机房安全属于物理安全，入侵检测属于网络安全，漏洞补丁管理属于系统安全，而数据库安全则是应用安全。","analysis":"D"},{"product_id":"20150725154504035","ans":"本题考查知识产权的基本知识。依据著作权法第十一条、第十六条规定，职工为完成所在单位的工作任务而创作的作品属于职务作品。职务作品的著作权归属分为两种情况。①虽是为完成工作任务而为，但非经法人或其他组织主持，不代表其意志创作，也不由其承担责任的职务作品，如教师编写的教材，著作权应由作者享有，但法人或者其他组织在其业务范围内有优先使用的权利，期限为2年。②由法人或者其他组织主持，代表法人或者其他组织意志创作，并由法人或者其他组织承担责任的职务作品，如工程设计、产品设计图纸及其说明、计算机软件、地图等职务作品，以及法律规定或合同约定著作权由法人或非法人单位单独享有的职务作品，作者享有署名权，其他权利由法人或者其他组织享有。","analysis":"A"},{"product_id":"20150725154622644","ans":"本题考查知识产权的基本知识。当两个以上的申请人分别就同样的发明创造申请专利的，专利权授给最先申请的人。如果两个以上申请人在同一日分别就同样的发明创造申请专利的，应当在收到专利行政管理部门的通知后自行协商确定申请人。如果协商不成，专利局将驳回所有申请人的申请，即均不授予专利权。我国专利法规定“两个以上的申请人分别就同样的发明创造申请专利的，专利权授予最先申请的人。”我国专利法实施细则规定：“同样的发明创造只能被授予一项专利。依照专利法第九条的规定，两个以上的申请人在同一日分别就同样的发明创造申请专利的，应当在收到国务院专利行政部门的通知后自行协商确定申请人。”","analysis":"D"},{"product_id":"20150725154813253","ans":"本题考查多媒体的基本知识。感觉媒体指直接作用于人的感觉器官，使人产生直接感觉的媒体，如引起听觉反应的声音，引起视觉反应的图像等。","analysis":"D"},{"product_id":"20150725154920003","ans":"本题考查多媒体的基本知识。表现媒体是指进行信息输入和输出的媒体，如键盘、鼠标、话筒，以及显示器、打印机、_机等；表示媒体指传输感觉媒体的中介媒体，即用于数据交换的编码，如图像编码、文本编码和声音编码等；传输媒体指传输表示媒体的物理介质，如电缆、光缆、电磁波等；存储媒体指用于存储表示媒体的物理介质，如硬盘、光盘等。","analysis":"A"},{"product_id":"20150725155055457","ans":"本题考查多媒体的基本知识。显示分辨率是指显示器上能够显示出的像素点数目，即显示器在横向和纵向上能够显示出的像素点数目。水乎分辨率表明显示器水平方向（横向)土显示出的像素点数目，垂直分辨率表明显示器垂直方向（纵向）上显示出的像素点数目。例如，显示分辨率为1024X768则表明显示器水平方向上显示1024个像素点，垂直方向上显示768个像素点，整个显示屏就含有796432个像素点。屏幕能够显示的像素越多，说明显示设备的分辨率越高，显示的图像质量越髙。显示深度是指显示器上显示每个像素点颜色的二进制位数。","analysis":"C"},{"product_id":"20150725155216410","ans":"本题考查软件工程的基本概念。软件工程是一种层次化的技术，从底向上分别为质量、过程、方法和工具。任何工程方法必须以有组织的质量承诺为基础。软件工程的基础是过程，过程是将技术结合在一起的凝聚力，使得计算机软件能够被合理地和及时地开发，过程定义了一组关键过程区域，构成了软件项目管理控制的基础；方法提供了建造软件在技术上需要&ldquo;如何做&rdquo;，它覆盖了一系列的任务。方法也依赖于一些基本原则，这些原则控制了每一个技术区域而且包含建模活动和其他描述技术；工具对过程和方法提供了自动或半自动的支持，如：计算机辅助软件工程（CASE）。软件工程的基本要素包括方法、工具和过程。","analysis":"C"},{"product_id":"20150725155330613","ans":"本题考查软件工程的基本概念。软件设计的任务是基于需求分析的结果建立各种设计模型，给出问题的解决方案。从工程管理的角度，可以将软件设计分为两个阶段：概要设计阶段和详细设计阶段。结构化设计方法中，概要设计阶段进行软件体系结构的设计、数据设计和接口设计；详细设计阶段进行数据结构和算法的设计。面向对象设计方法中，概要设计阶段进行体系结构设计、初步的类设计/数据设计、结构设计；详细设计阶段进行构件设计。结构化设计和面向对象设计是两种不同的设计方法，结构化设计根据系统的数据流图进行设计，模块体现为函数、过程及子程序；面向对象设计基于面向对象的基本概念进行，模块体现为类、对象和构件等。","analysis":"A"},{"product_id":"20150725160533363","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上表给出的数据，构建活动图，如下图所示。从上图很容易看出，关键路径为A-D-E-F-H,其长度为19,关键路径上的活动均为关键活动。","analysis":"D"},{"product_id":"20150725160634269","ans":"本题考查软件项目管理的基础知识。活动图是描述一个项目中各个工作任务相互依赖关系的一种模型，项目的很多重要特性可以通过分析活动图得到，如估算项目完成时间，计算关键路径和关键活动等。根据上表给出的数据，构建活动图，如下图所示。从上图很容易看出，关键路径为A-D-E-F-H,其长度为19,关键路径上的活动均为关键活动。","analysis":"B"},{"product_id":"20150725164535675","ans":"本题考查软件项目管理的基础知识。风险是一种具有负面后果的、人们不希望发生的事件。风险管理是软件项目管理的一项重要任务。在进行风险管理时，根据风险的优先级来确定风险控制策略，而优先级是根据风险暴露来确定的。风险暴露是一种量化风险影响的指标，等于风险影响乘以风险概率，风险影响是当风险发生时造成的损失。风险概率是风险发生的可能性。风险控制是风险管理的一个重要活动。","analysis":"C"},{"product_id":"20150725171623472","ans":"本题考查程序语言基础知识。程序设计语言的基本成分包括数据、运算、控制和传输等涉及程序语言的一般概念，程序设计语言的基本成分包括数据、运算、控制和传输等。高级程序设计语言不依赖于具体的机器硬件考查高级语言和低级语言的概念。对于程序设计语言高级语言和低级语言是指其相对于运行程序的机器的抽象程度。低级语言在形式上更接近机器指令，汇编语言就是与机器指令一一对应的。高级语言对底层操作进行了抽象和封装，其一条语句对应多条机器指令，使编写程序的过程更符合人类的思维习惯，并且极大简化了人力劳动。高级语言不依赖于具体的机器硬件。程序中局部变量的值在运行时不能改变考查局部变量的概念，凡是在函数内部定义的变量都是局部变量（也称作内部变量)，包括在函数内部复合语句中定义的变量和函数形参表中说明的形式参数。局部变量只能在函数内部使用，其作用域是从定义位置起至函数体或复合语句体结束为止。局部变量的值通常在其生存期内是变化的。程序中常量的值在运行时不能改变考查常量的概念，程序中常量的值在运行时是不能改变的。","analysis":"C"},{"product_id":"20150725172541269","ans":"本题考查程序语言与数据结构基础知识。对算术表达式“(a+(b-c))*d”求值的运算处理顺序是：先进行b-c，然后与a相加，最后再与d相乘。","analysis":"B"},{"product_id":"20150725173043753","ans":"本题考查程序语言基础知识。程序运行时的用户内存空间一般划分为代码区、静态数据区、栈区和堆区，其中栈区和堆区也称为动态数据区。全局变量的存储空间在静态数据区。","analysis":"B"},{"product_id":"20150725173532347","ans":"根据前驱图，P1进程执行完需要通知P2进程，故需要利用V(S1)操作通知P2进程，所以空a应填V(S1)；P2进程需要等待P1进程的结果，故需要利用P(S1)操作测试P1进程是否运行完，所以空b应填P(S1)；又由于P2进程运行结束需要利用V(S2)、V(S3)操作分别通知P3、P4进程，所以空c应填V(S2)、V(S3)。","analysis":"A"},{"product_id":"20150725173621160","ans":"根据前驱图，P3进程运行前需要等待P2进程的结果，故需执行程序前要先利用1个P操作。又因为P3进程运行结束后需要利用1个V操作通知P5进程。","analysis":"B"},{"product_id":"20150725174351988","ans":"根据前驱图，P4进程执行前需要等待P2进程的结果，故空f处需要1个P操作；P5进程执行前需要等待P3和P4进程的结果，故空g处需要2个P操作。","analysis":"C"},{"product_id":"20150725174620425","ans":"根据题意，页面变换表中状态位等于0和1分别表示页面不在内存或在内存，所以0、2和3号页面在内存。当访问的页面1不在内存时。系统应该首先淘汰未被访问的页面，因为根据程序的局部性原理最近未被访问的页面下次被访问的概率更小；如果页面最近都被访问过，应该先淘汰未修改过的页面。因为未修改过的页面内存与辅存一致，故淘汰时无须写回辅存，使系统页面置换代价小。经上述分析，0、2和3号页面都是最近被访问过的，但0和2号页面都被修改过而3号页面未修改过，故应该淘汰3号页面。","analysis":"D"},{"product_id":"20150725174822691","ans":"本题考查应试者对嵌入式系统方面的基础知识。嵌入式系统初始化过程可以分为3个主要环节，按照自底向上、从硬件到软件的次序依次为：片级初始化、板级初始化和系统级初始化。片级初始化完成嵌入式微处理器的初始化，包括设置嵌入式微处理器的核心寄存器和控制寄存器、嵌入式微处理器核心工作模式和嵌入式微处理器的局部总线模式等。片级初始化把嵌入式微处理器从上电时的默认状态逐步设置成系统所要求的工作状态。这是一个纯硬件的初始化过程。板级初始化完成嵌入式微处理器以外的其他硬件设备的初始化。另外，还需设置某些软件的数据结构和参数，为随后的系统级初始化和应用程序的运行建立硬件和软件环境。这是一个同时包含软硬件两部分在内的初始化过程。系统初始化过程以软件初始化为主，主要进行操作系统的初始化。BSP将对嵌入式微处理器的控制权转交给嵌入式操作系统，由操作系统完成余下的初始化操作，包含加载和初始化与硬件无关的设备驱动程序，建立系统内存区，加载并初始化其他系统软件模块，如网络系统、文件系统等。最后，操作系统创建应用程序环境，并将控制权交给应用程序的入口。","analysis":"B"},{"product_id":"20150725175030410","ans":"本题考查应试者对嵌入式系统方面的基础知识。嵌入式系统初始化过程可以分为3个主要环节，按照自底向上、从硬件到软件的次序依次为：片级初始化、板级初始化和系统级初始化。片级初始化完成嵌入式微处理器的初始化，包括设置嵌入式微处理器的核心寄存器和控制寄存器、嵌入式微处理器核心工作模式和嵌入式微处理器的局部总线模式等。片级初始化把嵌入式微处理器从上电时的默认状态逐步设置成系统所要求的工作状态。这是一个纯硬件的初始化过程。板级初始化完成嵌入式微处理器以外的其他硬件设备的初始化。另外，还需设置某些软件的数据结构和参数，为随后的系统级初始化和应用程序的运行建立硬件和软件环境。这是一个同时包含软硬件两部分在内的初始化过程。系统初始化过程以软件初始化为主，主要进行操作系统的初始化。BSP将对嵌入式微处理器的控制权转交给嵌入式操作系统，由操作系统完成余下的初始化操作，包含加载和初始化与硬件无关的设备驱动程序，建立系统内存区，加载并初始化其他系统软件模块，如网络系统、文件系统等。最后，操作系统创建应用程序环境，并将控制权交给应用程序的入口。","analysis":"C"},{"product_id":"20150725175146675","ans":"本题考查软件过程模型的基础知识。瀑布模型将软件生存周期各个活动规定为线性顺序连接的若干阶段的模型，规定了由前至后，相互衔接的固定次序，如同瀑布流水，逐级下落。这种方法是一种理想的开发模式，缺乏灵活性，特别是无法解决软件需求不明确或不准确的问题。原型模型从初始的原型逐步演化成最终软件产品，特别适用于对软件需求缺乏准确认识的情况。增量开发是把软件产品作为一系列的增量构件来设计、编码、集成和测试，可以在增量开发过程中逐步理解需求。螺旋将瀑布模型与快速原型模型结合起来，并且加入两种模型均忽略了的风险分析，适用于复杂的大型软件。","analysis":"D"},{"product_id":"20150725175651222","ans":"本题考查敏捷方法的基础知识。在20世纪90年代后期，一些开发人员抵制产格化软件开发过程，试图强调灵活性在快速有效的软件生产中的作用，提出了敏捷宣言，即个人和交互胜过过程和工具；可以运行的软件胜过面面俱到的文档；与客户合作胜过合同谈判；对变化的反应胜过遵循计划。基于这些基本思想，有很多敏捷过程的典型方法，其中：极限编程XP是激发开发人员创造性、使得管理负担最小的一组技术.。水晶法Crystal认为每—个不同的项目都需要一套不同的策略、约定和方法论。并列争球法(Scram)使用迭代的方法，其中把每30天一次的迭代称为个冲刺，并按需求的优先级来实现产品多个自组织和自治小组并行地递增实现产品，协调是通过简短的日常情况会议进行。自适应软件开发（ASD)有六个基本的原则：①在自适应软件开发中，有一个使命作为指导，它设立了项目的目标，但不描述如何达到这个目标；②特征被视为客户键值的关键，因此，项目是围绕着构造的构件来组织并实现特征；③过程中的迭代是很重要的，因此重做与做同样重要，变化也包含其中；④变化不视为是一种更正，而是对软件开发实际情况的调整；⑤确定的交付时间迫使开发人员认真考虑每一个生产版本的关键需求；⑥风险也包含其中，它使开发人员首先跟踪最艰难的问题。","analysis":"B"},{"product_id":"20150725175814628","ans":"本题考查软件配置管理的基础知识。软件配置管理SCM用于整个软件工程过程，其主要目标是标识变更、控制变更、确保变更正确的实现，报告变更。其主要内容包括版本管理、配置支持、变更支持、过程支持、团队支持、变化报告和审计支持等。","analysis":"D"},{"product_id":"20150725181506863","ans":"本题考查软件设计的基础知识。模块独立性是创建良好设计的一个重要原则，一般采用模块间的耦合和模块的内聚两个准则来进行度量。耦合程度越低，内聚程度越高，则模块的独立性越好。存在多种模块内聚类型，从高到低依次为功能、通信、顺序、过程、时间、逻辑和偶然内聚。一个模块内的几个操作是相关的，而且必须以特定的次序执行，则该模块的内聚类型为过程内聚。模块的各个功能的执行与时间有关，通常要求所有功能必须在同一时间段内执行，则该模块的内聚类型为时间内聚。若一个模块的各个部分只是通过代码的逻辑结构相关联，则该模块的内聚类型为逻辑内聚。把访问或操作在同一数据结构的操作放在一个模块中，则该模块的内聚类型为通信内聚。","analysis":"D"},{"product_id":"20150725181939550","ans":"本题考查软件评审的基础知识。软件评审的内容包括设计质量评审、程序质量评审和与运行环境接口的评审。评审的主要目标是为了发现软件中的错误。","analysis":"C"},{"product_id":"20150725182231988","ans":"本题考查软件测试的基础知识。软件测试分为单元测试、集成测试和系统测试。集成测试把模块按系统设计说明书的要求组合起来进行测试。存在多种组合的集成测试策略：自底向上、自顶向下、一次性集成、明治集成等。其中，自底向上策略通过不断合并底层模块来测试更高层模块的方式进行。在该方法中，需要写驱动程序来调用待测试的底层模块，主要的设计问题需要到测试后期才能发现。由于从最底层的模块开始测试，因此过程中不需要写桩模块。当测试过程中发现错误时，需要进行回归测试。","analysis":"C"},{"product_id":"20150725182454003","ans":"本题考查软件度量的基础知识。软件复杂性主要表现在程序的复杂性，而程序的复杂性主要指模块内程序的复杂性。McCabe度量法是一种度量程序复杂性的方法，该方法用程序图来表示实际的程序，如上图所示，用环路数来表示程序复杂性，即V(G)=m-n+2p，其中m和n分别表示图中的边数和顶点数，p为1。本题中，m=10,n=8,因此V(G)=10-8+2=4。","analysis":"C"},{"product_id":"20150725182618660","ans":"本题考查维护方面的基础知识。软件交付给用户使用后到软件报废之前都属于软件维护阶段。软件系统的可维护性可以定义为：维护人员理解、改正、改动和改进该软件的难易程度。提供软件可维护性是开发软件系统所有步骤的关键目的，是衡量软件质量的一种重要特性，可以从可理解性、可靠性、可测试性、可行性、可移植性等方面进行度量。良好的软件开发文档可以有效地提高软件的可维护性。","analysis":"B"},{"product_id":"20150807163711894","ans":"本题考查面向对象的基本知识。面向对象的4个核心概念是对象、类、继承和消息传递。其中，对象是基本的运行时的实体，它既包括数据（属性)，也包括作用于数据的操作（行为）。所以，一个对象把属性和行为封装为一个整体。类定义了一组大体上相似的对象。一个类所包含的方法和数据描述一组对象的共同行为和属性。在进行类设计时，有些类之间存在一般和特殊关系，即一些类是某个类的特殊情况，某个类是一些类的一般情况，这就是继承关系。消息是对象之间进行通信的一种构造，包含要求接收对象去执行某些活动的信息。","analysis":"D"},{"product_id":"20150807163803425","ans":"本题考查面向对象的基本知识。在采用面向对象技术开发系统时，主要步骤有面向对象分析、面向对象设计、面向对象程序设计和面向对象测试。面向对象分析主要包括：认定对象、组织对象、描述对象间的相互作用、定义对象的操作、定义对象的内部信息。面向对象设计是设计分析模型和实现相应源代码。面向对象程序设计选择合适的面向对象程序设计语言，将程序组织为相互协作的对象集合，每个对象表示某个类的实例，类通过继承等关系进行组织。面向对象测试是尽可能早的开始进行系统测试，以发现系统中可能存在的错误并进行修复，进而保证系统质量。","analysis":"C"},{"product_id":"20150807163907003","ans":"本题考查面向对象的基本知识。在面向对象技术中，一个类可以具有多个同名而参数类型列表不同的方法，每个方法实现自己的特定行为，这种机制称为方法重载（Overloading)。对象协作过程中，对象给对象进行消息传递，通常通过方法调用进行。在继承关系中，子类重新定义父类中已经定义的方法，称为方法重置或覆盖（Overriding)。","analysis":"A"},{"product_id":"20150807164049816","ans":"本题考査统一建模语言（UML)的基本知识。UML是面向对象软件的标准化建模语言，由三个要素构成：UML的基本构造块、支配这些构造块如何放置在一起的规则和运用与整个语言的一些公共机制。UML的词汇表包含三种构造块：事物、关系和图。事物是对模型中最具有代表性的成分的抽象；关系把事物结合在一起；图聚集了相关的事物。其中关系包括4种：依赖、关联、泛化和实现。依赖（Dependency)是两个事物间的语义关系，其中一个事物（独立事物）发生变化会影响另一个事物（依赖事物）的语义。关联（Association)是一种结构关系，它描述了一组链，链是对象之间的连接。泛化（Generalization)是一种特殊/一般关系，特殊元素（子元素）的对象可替代一般元素（父元素）的对象，用这种方法，子元素共享了父元素的结构和行为。实现（Realization)是类元之间的语义关系，其中一个类元指定了由另一个类元保证执行的契约。","analysis":"B"},{"product_id":"20150807164147691","ans":"本题考査统一建模语言（UML)的基本知识。UML是面向对象软件的标准化建模语言，由三个要素构成：UML的基本构造块、支配这些构造块如何放置在一起的规则和运用与整个语言的一些公共机制。UML的词汇表包含三种构造块：事物、关系和图。事物是对模型中最具有代表性的成分的抽象；关系把事物结合在一起；图聚集了相关的事物。其中关系包括4种：依赖、关联、泛化和实现。依赖（Dependency)是两个事物间的语义关系，其中一个事物（独立事物）发生变化会影响另一个事物（依赖事物）的语义。关联（Association)是一种结构关系，它描述了一组链，链是对象之间的连接。泛化（Generalization)是一种特殊/一般关系，特殊元素（子元素）的对象可替代一般元素（父元素）的对象，用这种方法，子元素共享了父元素的结构和行为。实现（Realization)是类元之间的语义关系，其中一个类元指定了由另一个类元保证执行的契约。","analysis":"C"},{"product_id":"20150807164254066","ans":"本题考查统一建模语言（UML)的基本知识。UML中提供了多种建模系统需求的图，体现系统的静态方面和动态方面。类图（ClassDiagram)展现了一组对象、接口、协作和它们之间的关系。在面向对象系统的建模中，最常见的就是类图，它给出系统的静态设计视图。对象图（ObjectDiagram)展现了某一时刻一组对象以及它们之间的关系。对象图描述了在类图中所建立的事物的实例的静态快照，给出系统的静态设计视图或静态进程视图。用例图（UseCaseDiagram)展现了一组用例、参与者（Actor)以及它们之间的关系。这个视图主要支持系统的行为，即该系统在它的周边环境的语境中所提供的外部可见服务。用例图用于对一个系统的需求进行建模,包括说明这个系统应该做什么(从系统外部的一个视点出发)，而不考虑系统应该怎样做。交互图用于对系统的动态方面进行建模。一张交互图表现的是一个交互，由一组对象和它们之间的关系组成，包含它们之间可能传递的消息。交互图表现为序列图、通信图、交互概览图和时序图，每种针对不同的目的，能适用于不同的情况。序列图是强调消息时间顺序的交互图；通信图是强调接收和发送消息的对象的结构组织的交互图；交互概览图强调控制流的交互图。时序图（TimingDiagram)关注沿着线性时间轴、生命线内部和生命线之间的条件改变。部署图（DeploymentDiagram)是用来对面向对象系统的物理方面建模的方法，展现了运行时处理结点以及其中构件（制品）的配置。组件图（ComponentDiagram)展现了一组组件之间的组织和依赖。","analysis":"C"},{"product_id":"20150807164339269","ans":"本题考查统一建模语言（UML)的基本知识。UML中提供了多种建模系统需求的图，体现系统的静态方面和动态方面。类图（ClassDiagram)展现了一组对象、接口、协作和它们之间的关系。在面向对象系统的建模中，最常见的就是类图，它给出系统的静态设计视图。对象图（ObjectDiagram)展现了某一时刻一组对象以及它们之间的关系。对象图描述了在类图中所建立的事物的实例的静态快照，给出系统的静态设计视图或静态进程视图。用例图（UseCaseDiagram)展现了一组用例、参与者（Actor)以及它们之间的关系。这个视图主要支持系统的行为，即该系统在它的周边环境的语境中所提供的外部可见服务。用例图用于对一个系统的需求进行建模,包括说明这个系统应该做什么(从系统外部的一个视点出发)，而不考虑系统应该怎样做。交互图用于对系统的动态方面进行建模。一张交互图表现的是一个交互，由一组对象和它们之间的关系组成，包含它们之间可能传递的消息。交互图表现为序列图、通信图、交互概览图和时序图，每种针对不同的目的，能适用于不同的情况。序列图是强调消息时间顺序的交互图；通信图是强调接收和发送消息的对象的结构组织的交互图；交互概览图强调控制流的交互图。时序图（TimingDiagram)关注沿着线性时间轴、生命线内部和生命线之间的条件改变。部署图（DeploymentDiagram)是用来对面向对象系统的物理方面建模的方法，展现了运行时处理结点以及其中构件（制品）的配置。组件图（ComponentDiagram)展现了一组组件之间的组织和依赖。","analysis":"B"},{"product_id":"20150807164550191","ans":"本题考查设计模式的基本概念。每一个设计模式都集中于一个特定的面向对象设计问题或设计要点，描述了什么时候使用它，在另一些设计约束条件下是否还能使用，以及使用的效果和如何取舍。按照设计模式的目的可以分为创建型、结构型和行为型三大类。创建型模式与对象的创建有关；结构型模式处理类或对象的组合；行为型模式对类或对象怎样交互和怎样分配职责进行描述。每种设计模式都有其适应性，描述适用于解决的问题场合。创建型模式包括FactoryMethod、AbstractFactory、Builder、Prototype和Singleton。结构型模式包括Adapter(类）、Adapter(对象）、Bridge、Composite、Decorator、Fafade、Flyweight和Proxy。行为型模式包括Interpreter、TemplateMethod、ChainofResponsibility、Command、Iterator、Mediator、MementoObserverStateStrategy和Visitor。Proxy模式的结构图如下所示：Proxy模式适用于在需要比较通用和复杂的对象指针代替简单的指针的时候，常见情况有：远程代理（RemoteProxy)为一个对象在不同地址空间提供据不代表；虚代理(VirtualProxy)根据需要创建开销很大的对象；保护代理（ProtectionProxy)控制对原始对象的访问，用于对象应该有不同的访问权限的时候；智能指引（SmartReference)取代了简单的指针，它在访问对象时执行一些附加操作。Builder模式的结构图如下所示：Builder模式适用于当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时；当构造过程必须允许被构造的对象有不同的表示时。Composite模式的结构图如下所示：Composite模式适用于：想表示对象的部分-整体层次结构；希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。Observer模式的结构图如下所示：Observer模式适用于：.当一个抽象模型有两个方面，其中一个方面依赖于另一个方面。将这两者封装在独立地对象中以使它们可以各自独立地改变和复用；当对一个对象的改变需要同时改变其他对象.而不知道具体有多少对象有待改变时；当一个对象必须通知其他对象，而它又不能假定其他对象是谁，即不希望这些对象是紧耦合的。","analysis":"C"},{"product_id":"20150807164643847","ans":"本题考查设计模式的基本概念。每一个设计模式都集中于一个特定的面向对象设计问题或设计要点，描述了什么时候使用它，在另一些设计约束条件下是否还能使用，以及使用的效果和如何取舍。按照设计模式的目的可以分为创建型、结构型和行为型三大类。创建型模式与对象的创建有关；结构型模式处理类或对象的组合；行为型模式对类或对象怎样交互和怎样分配职责进行描述。每种设计模式都有其适应性，描述适用于解决的问题场合。创建型模式包括FactoryMethod、AbstractFactory、Builder、Prototype和Singleton。结构型模式包括Adapter(类）、Adapter(对象）、Bridge、Composite、Decorator、Fafade、Flyweight和Proxy。行为型模式包括Interpreter、TemplateMethod、ChainofResponsibility、Command、Iterator、Mediator、MementoObserverStateStrategy和Visitor。Proxy模式的结构图如下所示：Proxy模式适用于在需要比较通用和复杂的对象指针代替简单的指针的时候，常见情况有：远程代理（RemoteProxy)为一个对象在不同地址空间提供据不代表；虚代理(VirtualProxy)根据需要创建开销很大的对象；保护代理（ProtectionProxy)控制对原始对象的访问，用于对象应该有不同的访问权限的时候；智能指引（SmartReference)取代了简单的指针，它在访问对象时执行一些附加操作。Builder模式的结构图如下所示：Builder模式适用于当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时；当构造过程必须允许被构造的对象有不同的表示时。Composite模式的结构图如下所示：Composite模式适用于：想表示对象的部分-整体层次结构；希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。Observer模式的结构图如下所示：Observer模式适用于：.当一个抽象模型有两个方面，其中一个方面依赖于另一个方面。将这两者封装在独立地对象中以使它们可以各自独立地改变和复用；当对一个对象的改变需要同时改变其他对象.而不知道具体有多少对象有待改变时；当一个对象必须通知其他对象，而它又不能假定其他对象是谁，即不希望这些对象是紧耦合的。","analysis":"B"},{"product_id":"20150807164742909","ans":"本题考查设计模式的基本概念。每一个设计模式都集中于一个特定的面向对象设计问题或设计要点，描述了什么时候使用它，在另一些设计约束条件下是否还能使用，以及使用的效果和如何取舍。按照设计模式的目的可以分为创建型、结构型和行为型三大类。创建型模式与对象的创建有关；结构型模式处理类或对象的组合；行为型模式对类或对象怎样交互和怎样分配职责进行描述。每种设计模式都有其适应性，描述适用于解决的问题场合。创建型模式包括FactoryMethod、AbstractFactory、Builder、Prototype和Singleton。结构型模式包括Adapter(类）、Adapter(对象）、Bridge、Composite、Decorator、Fafade、Flyweight和Proxy。行为型模式包括Interpreter、TemplateMethod、ChainofResponsibility、Command、Iterator、Mediator、MementoObserverStateStrategy和Visitor。Proxy模式的结构图如下所示：Proxy模式适用于在需要比较通用和复杂的对象指针代替简单的指针的时候，常见情况有：远程代理（RemoteProxy)为一个对象在不同地址空间提供据不代表；虚代理(VirtualProxy)根据需要创建开销很大的对象；保护代理（ProtectionProxy)控制对原始对象的访问，用于对象应该有不同的访问权限的时候；智能指引（SmartReference)取代了简单的指针，它在访问对象时执行一些附加操作。Builder模式的结构图如下所示：Builder模式适用于当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时；当构造过程必须允许被构造的对象有不同的表示时。Composite模式的结构图如下所示：Composite模式适用于：想表示对象的部分-整体层次结构；希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。Observer模式的结构图如下所示：Observer模式适用于：.当一个抽象模型有两个方面，其中一个方面依赖于另一个方面。将这两者封装在独立地对象中以使它们可以各自独立地改变和复用；当对一个对象的改变需要同时改变其他对象.而不知道具体有多少对象有待改变时；当一个对象必须通知其他对象，而它又不能假定其他对象是谁，即不希望这些对象是紧耦合的。","analysis":"A"},{"product_id":"20150807164839113","ans":"本题考查设计模式的概念，对行为模式进行比较。很多行为模式注重封装变化。当一个程序的某个方面的特征经常发生改变时，这些模式就定义一个封装这个方面的对象。这样，当该程序的其他部分依赖于这个方面时，它们都可以与此对象协作。一些模式引入总是被用作参数的对象。有些模式定义一些可作为令牌进行传递的对象，这些对象将在稍后被调用。在Visitor模式中，一个Visitor对象是一个多态的accept操作的参数，这个操作作用于该Visitor对象访问的对象。在Command模式中，令牌代表一个请求;.在Memento模式中，它代表在一个对象在某个特定时刻的内部状态。在这两种情况下，令牌都可以有一个复杂的内部表示，但客户并不会倉识到这一点。.在Observer.模式中，通过引入Observer和Subject对象来分布通信。","analysis":"A"},{"product_id":"20150807164925847","ans":"本题考查程序语言基础知识。用某种高级语言或汇编语言编写的程序称为源程序，源程序不能直接在计算机上执行。汇编语言源程序需要用一个汇编程序将其翻译成目标程序后才能执行。高级语言源程序则需要对应的解释程序或编译程序对其进行翻译，然后在机器上运行。解释程序也称为解释器,它或者直接解释执行源程序，或者将源程序翻译成某种中间代码后再加以执行；而编译程序（编译器）则是将源程序翻译成目标语言程序，然后在计算机上运行目标程序。这两种语言处理程序的根本区别是：在编译方式下，机器上运行的是与源程序等价的目标程序，源程序和编译程序都不再参与目标程序的执行过程;而在解释方式下，解释程序和源程序（或其某种等价表示）要参与到程序的运行过程中，运行程序的控制权在解释程序,。简单来说，在解释方式下，翻译源程序时不生成独立的目标程序，而编译器则将源程序翻译成独立保存的目标程序。","analysis":"D"},{"product_id":"20150807165349972","ans":"本题考查程序语言基础知识。对高级语言源程序进行编译（或解释）方式的翻译过程中,，词法分析采用有限自动机作为计算模型。有限自动机分为确定的有限自动机（DFA)和不确定的有限自动机(NFA)。可将一个从NFA转换为等价的最小化DFA。题中的NFA的功能是识别空串以及b不能连续出现（即每个b后至少含有1个a.)的a、b字符串，若是非空串，则以a结尾。选项A识别的是空串以及每个b后至少含有1个a的a、b字符串，若是非空串，则以a结尾。选项B识别空串以及b不能连续出现且以b结尾的a、b字符串。选项C识别b不能连续出现且以b结尾的a、b字符串，不能识别空串。选项D识别b不能连续出现且以a结尾的a、b字符串，不能识别空串。","analysis":"A"},{"product_id":"20150807165510847","ans":"本题考查程序语言基础知识。对高级语言源程序进行编译（或解释）方式的翻译过程中，语法分析的任务是根据语言的语法规则，分析单词串是否构成短语和句子，即表达式、语句和程序等基本语言结构，同时检查和处理程序中的语法错误。程序设计语言的绝大多数语法规则可以采用上下文无关文法进行描述。语法分析方法有多种，根据产生语法树的方向，可分为自底向上和自顶向下两类。递归下降分析法和预测分析法是常用的自顶向下分析法。算符优先分析法和LR分析法属于自底向上的语法分析方法。","analysis":"B"},{"product_id":"20150807165617175","ans":"本题考查关系数据库系统中关系的键的基本概念。在关系数据库系统中，全码（All-key)是指关系模型的所有属性组是这个关系模式的候选键，本题所有属性组为HLMP。","analysis":"A"},{"product_id":"20150807165744066","ans":"本题考查关系数据库规范化理论方面的基础知识。","analysis":"D"},{"product_id":"20150813112423066","ans":"本题考查数据挖掘基本概念方面的基础知识。数据挖掘就是应用一系列技术从大型数据库或数据仓库中提取人们感兴趣的信息和知识，这些知识或信息是隐含的，事先未知而潜在有用的，提取的知识表示为概念、规则、规律、模式等形式。也可以说，数据挖掘是一类深层次的数据分析。常见和应用最广泛的数据挖掘方法如下。①决策树：决策树方法是利用信息论中的互信息（信息增益）寻找数据库中具有最大信息量的属性字段，建立决策树的一个结点，再根据该属性字段的不同取值建设树的分支；在每个分支子集中重复建立树的下层结点和分支的过程。国际上最早的、也是最有影响的决策树方法是Quiulan研究的ID3方法。②神经网络：神经网络方法是模拟人脑神经元结构，完成类似统计学中的判别、回归、聚类等功能，是一种非线性的模型，主要有三种神经网络模型：前馈式网络、反馈式网络和自组织网络。人工神经网络最大的长处是可以自动地从数据中学习，形成知识，这些知识有些是我们过去未曾发现的，因此它具有较强的创新性。神经网络的知识体现在网络连接的权值上，神经网络的学习主要表现在神经网络权值的逐步计算上。③遗传算法：遗传算法是模拟生物进化过程的算法，它由三个基本过程组成：繁殖（选择)、交叉（重组)、变异（突变)。采用遗传算法可以产生优良的后代，经过若干代的遗传，将得到满足要求的后代即问题得解。④关联规则挖掘算法：关联规则是描述数据之间存在关系的规则，形式为“A1A2...An=>B1B2...Bn”。一般分为两个步骤：求出大数据项集、用大数据项集产生关联规则。除了上述的常用方法外，还有粗集方法，模糊集合方法，BayesianBeliefNetords,最邻近算法（K-nearestNeighborsMethod,kNN)等。","analysis":"C"},{"product_id":"20150813133107050","ans":"本题考查关系数据库E-R模型的相关知识。根据题意部门和员工关系进行自然连接运算，应该去掉一个重复属性“部门代码”，所以自然连接运算的结果集为7元关系。","analysis":"C"},{"product_id":"20150813133151909","ans":"在E-R模型中，用11表示1对1联系，用1*表示1对多联系，用**表示多对多联系。","analysis":"D"},{"product_id":"20150813133244222","ans":"因为员工和项目之间是一个多对多的联系，多对多联系的向关系模式转换的规则是：多对多联系只能转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性取该联系所关联的两个多方实体的主键及联系的属性，关系的码是多方实体的主键构成的属性组。由于员工关系的主键是员工代码，项目关系的主键是项目编号，因此，根据该转换规则试题（56)员工和项目之间的联系的关系模式的主键是（员工代码，项目编号）。","analysis":"B"},{"product_id":"20150813133428691","ans":"本题考查数据结构基础知识。根据图示,可以计算得知(Q.rear-Q.front+M)%M为队列中的元素个数(即队列长度）。","analysis":"D"},{"product_id":"20150813133510253","ans":"本题考查数据结构基础知识。根据队列的特点，元素出队的顺序与入队的顺序相同，因此，可知这7个元素的出栈顺序为bdfecag。对于入栈序列abcdefg，得到出找序列bdfecag的操作过程为：push(a入）、push(b入）、pop(b出）、push(c入）、push(d入）、pop.(d出）、push(e入)、push(f入)、pop(f出）、pop(e出）、pop(c出）、pop(a出）、push(g入)、pop(g出），如下图所示，从中可知栈S中元素最多时为4。因此，S的容量最小为4。","analysis":"B"},{"product_id":"20150813133639784","ans":"本题考查数据结构基础知识。根据题中所给的遍历序列，可知其对座的二叉树如下图所示。1)完全二叉树：除最后一层外，每一层上的节点数均达到最大值；在最后一层上只缺少右边的若干结点.2)平衡二叉树(AVL)：它或者是一颗空树，或者具有以下性质的二叉树：它的左子树和右子树的深度之差的绝对值不超过1，且它的左子树和右子树都是一颗平衡二叉树.3)最优二叉树:哈夫曼树4)满二叉树:每一层上的节点数均达到最大值","analysis":"C"},{"product_id":"20150813133734816","ans":"本题考查数据结构基础知识。进行折半查找时，首先与表中间位置上的元素进行比较，若待查找的元素大于中间元素，则接下来在后半区（是比中间元素更大者组成的有序子表）进行折半查找，否则在前半区（是比中间元素更小者组成的有序子表）进行折半查找。二分查找过程可用二分查找判定树来描述，即大于中间元素时走右分支，小子中间元素时走左分支，等于时查找成功结束。四个选项的比较序列在二分查找判定树上的查找路径表示为：","analysis":"B"},{"product_id":"20150813133919425","ans":"本题考查数据结构基础知识。对214821*6317进行简单选择排序时，第一趟需交换17和21，导致21与21*的相对位置发生变化，最后的非递减序列为1721*214863,说明简单选择排序是不稳定的排序方法。","analysis":"A"},{"product_id":"20150813134206191","ans":"本题考查算法设计与分析的相关知识。优先队列是一种常用的数据结构，通常用堆实现。对应于大顶堆和小顶堆，存在最大优先队列和最小优先队列。以最大优先队列为例，优先队列除了具有堆上的一些操作，如调整堆、构建堆之外，还有获得优先队列的最大元素，抽取出优先队列的最大元素，向优先队列插入一个元素和增大优先队列中某个元素的值。其中除了获得优先队列的最大元素的时间复杂度为(Θ1)之外，其他几个操作的时间复杂度均为二叉树的高度，即Θ(lgn)。","analysis":"A"},{"product_id":"20150813134327159","ans":"本题考查算法设计与分析的相关知识。优先队列是一种常用的数据结构，通常用堆实现。对应于大顶堆和小顶堆，存在最大优先队列和最小优先队列。以最大优先队列为例，优先队列除了具有堆上的一些操作，如调整堆、构建堆之外，还有获得优先队列的最大元素，抽取出优先队列的最大元素，向优先队列插入一个元素和增大优先队列中某个元素的值。其中除了获得优先队列的最大元素的时间复杂度为Θ(1)之外，其他几个操作的时间复杂度均为二叉树的高度，即Θ(lgn)。","analysis":"C"},{"product_id":"20150813134541675","ans":"本题考查算法设计与分析的相关知识。中位数的含义：将一组数据按照由小到大（或由大到小）的顺序排列，如果数据的个数是奇数，则处于中间位置的数就是这组数据的中位数；如果数据的个数是偶数，则中间两个数据的平均数就是这组数据的中位数。根据题干的描述，选择的基准元素将数组分得越均匀越好，因此中位数是最佳选择。对于该问题，若每次都是选择中位数作为基准元素，则时间复杂度的递归式为：T(n)=T(n/2)+cn求解该递归式，得到T(n)=Θ(n)。","analysis":"C"},{"product_id":"20150813134632503","ans":"本题考查算法设计与分析的相关知识。中位数的含义：将一组数据按照由小到大（或由大到小）的顺序排列，如果数据的个数是奇数，则处于中间位置的数就是这组数据的中位数；如果数据的个数是偶数，则中间两个数据的平均数就是这组数据的中位数。根据题干的描述，选择的基准元素将数组分得越均匀越好，因此中位数是最佳选择。对于该问题，若每次都是选择中位数作为基准元素，则时间复杂度的递归式为：T(n)=T(n/2)+cn求解该递归式，得到T(n)=Θ(n)。","analysis":"A"},{"product_id":"20150813134855941","ans":"服务器A的IP地址131.1.123.24/27：10000011.00000001.01111011.00011000服务器A的地址不是广播地址。服务器A的网关地址131.1.123.33：10000011.00000001.01111011.00100001这个地址与服务器A的地址不属于同一个子网。工作站B的IP地址131.1.123.43/27：10000011.00000001.01111011.00101011这个地址不是网络地址。工作站B的网关地址131.1.123.33：10000011.00000001.01111011.00100001工作站B与网关属于同一个子网。","analysis":"D"},{"product_id":"20150813135012644","ans":"把局域网划分成多个不同的VLAN，使得网络接入不再局限于物理位置的约束，这样就简化了在网络中增加、移除和移动主机的操作，特别是动态配置的VLAN,无论主机在哪里，它都处于自己的VLAN中。VLAN内部可以相互通信，VLAN之间不能直接通信，必须经过特殊设置的路由器才可以连通。这样做的结果是，通过在较大的局域网中创建不同的VLAN,可以抵御广播风暴的影响，也可以通过设置防火墙来提高网络的安全性。VLAN并不能直接增强网络的安全性。","analysis":"A"},{"product_id":"20150813135111613","ans":"本题考查URL的使用和格式的基本知识。URL由三部分组成：资源类型、存放资源的主机域名、资源文件名。URL的一般语法格式为（带方括号[]的为可选项）：protocol://hostname[:port]/path/filename其中，protocol指定使用的传输协议，最常见的是HTTP或者HTTPS协议，也可以有其他协议，如file、ftp、,gopher、mms、ed2k等；hostname是指主机名，即存放资源的服务域名或者IP地址；port是指各种传输协议所使用的默认端口号，该选项是可选选项，例如http的默认端口号为80,一般可以省略，如果为了安全考虑，可以更改默认的端口号，这时，该选项是必选的；path是指路径，有一个或者多个“/”分隔，一般用来表示主机上的一个目录或者文件地址；filename是指文件名，该选项用于指定需要打开的文件名称。一般情况下，一个URL可以采用“主机名.域名”的形式打开指定页面，也可以单独使用“域名”来打开指定页面，但是这样实现的前提是需进行相应的设置和对应。","analysis":"A"},{"product_id":"20150813135234925","ans":"本题考查DHCP和FTP两个应用协议。DHCP协议的功能是自动分配IP地址；FTP协议的作用是文件传输，使用的传输层协议为TCP。","analysis":"D"},{"product_id":"20150813135312519","ans":"本题考查DHCP和FTP两个应用协议。DHCP协议的功能是自动分配IP地址；FTP协议的作用是文件传输，使用的传输层协议为TCP。","analysis":"A"},{"product_id":"20150813135421706","ans":"为什么要有正式的文档？首先，书面记录决策是必要的。只有记录下来，分歧才会明朗，矛盾才会突出。书写这项活动需要上百次的细小决定，正是由于它们的存在，人们才能从令人迷惑的现象中得到清晰、确定的策略。第二，文档能够作为同其他人的沟通渠道。项目经理常常会不断发现，许多理应被普遍认同的策略，完全不为团队的一些成员所知。正因为项目经理的基本职责是使每个人都向着相同的方向前进，所以他的主要工作是沟通，而不是做出决定。这些文档能极大地减轻他的负担。最后，项目经理的文档可以作为数据基础和检查列表。通过周期性的回顾，他能清楚项目所处的状态，以及哪些需要重点进行更改和调整。项目经理的任务是制订计划，并根据计划实现。但是只有书面计划是精确和可以沟通的。计划中包括了时间、地点、人物、做什么、资金。这些少量的关键文档封装了一些项目经理的工作。如果一开始就认识到它们的普遍性和重要性，那么就可以将文档作为工具友好地利用起来，而不会让它成为令人厌烦的繁重任务。通过遵循文档开展工作，项目经理能更清晰和快速地设定自己的方向。","analysis":"A"},{"product_id":"20150813135509488","ans":"为什么要有正式的文档？首先，书面记录决策是必要的。只有记录下来，分歧才会明朗，矛盾才会突出。书写这项活动需要上百次的细小决定，正是由于它们的存在，人们才能从令人迷惑的现象中得到清晰、确定的策略。第二，文档能够作为同其他人的沟通渠道。项目经理常常会不断发现，许多理应被普遍认同的策略，完全不为团队的一些成员所知。正因为项目经理的基本职责是使每个人都向着相同的方向前进，所以他的主要工作是沟通，而不是做出决定。这些文档能极大地减轻他的负担。最后，项目经理的文档可以作为数据基础和检查列表。通过周期性的回顾，他能清楚项目所处的状态，以及哪些需要重点进行更改和调整。项目经理的任务是制订计划，并根据计划实现。但是只有书面计划是精确和可以沟通的。计划中包括了时间、地点、人物、做什么、资金。这些少量的关键文档封装了一些项目经理的工作。如果一开始就认识到它们的普遍性和重要性，那么就可以将文档作为工具友好地利用起来，而不会让它成为令人厌烦的繁重任务。通过遵循文档开展工作，项目经理能更清晰和快速地设定自己的方向。","analysis":"D"},{"product_id":"20150813135544550","ans":"为什么要有正式的文档？首先，书面记录决策是必要的。只有记录下来，分歧才会明朗，矛盾才会突出。书写这项活动需要上百次的细小决定，正是由于它们的存在，人们才能从令人迷惑的现象中得到清晰、确定的策略。第二，文档能够作为同其他人的沟通渠道。项目经理常常会不断发现，许多理应被普遍认同的策略，完全不为团队的一些成员所知。正因为项目经理的基本职责是使每个人都向着相同的方向前进，所以他的主要工作是沟通，而不是做出决定。这些文档能极大地减轻他的负担。最后，项目经理的文档可以作为数据基础和检查列表。通过周期性的回顾，他能清楚项目所处的状态，以及哪些需要重点进行更改和调整。项目经理的任务是制订计划，并根据计划实现。但是只有书面计划是精确和可以沟通的。计划中包括了时间、地点、人物、做什么、资金。这些少量的关键文档封装了一些项目经理的工作。如果一开始就认识到它们的普遍性和重要性，那么就可以将文档作为工具友好地利用起来，而不会让它成为令人厌烦的繁重任务。通过遵循文档开展工作，项目经理能更清晰和快速地设定自己的方向。","analysis":"C"},{"product_id":"20150813135621566","ans":"为什么要有正式的文档？首先，书面记录决策是必要的。只有记录下来，分歧才会明朗，矛盾才会突出。书写这项活动需要上百次的细小决定，正是由于它们的存在，人们才能从令人迷惑的现象中得到清晰、确定的策略。第二，文档能够作为同其他人的沟通渠道。项目经理常常会不断发现，许多理应被普遍认同的策略，完全不为团队的一些成员所知。正因为项目经理的基本职责是使每个人都向着相同的方向前进，所以他的主要工作是沟通，而不是做出决定。这些文档能极大地减轻他的负担。最后，项目经理的文档可以作为数据基础和检查列表。通过周期性的回顾，他能清楚项目所处的状态，以及哪些需要重点进行更改和调整。项目经理的任务是制订计划，并根据计划实现。但是只有书面计划是精确和可以沟通的。计划中包括了时间、地点、人物、做什么、资金。这些少量的关键文档封装了一些项目经理的工作。如果一开始就认识到它们的普遍性和重要性，那么就可以将文档作为工具友好地利用起来，而不会让它成为令人厌烦的繁重任务。通过遵循文档开展工作，项目经理能更清晰和快速地设定自己的方向。","analysis":"A"},{"product_id":"20150813135659488","ans":"为什么要有正式的文档？首先，书面记录决策是必要的。只有记录下来，分歧才会明朗，矛盾才会突出。书写这项活动需要上百次的细小决定，正是由于它们的存在，人们才能从令人迷惑的现象中得到清晰、确定的策略。第二，文档能够作为同其他人的沟通渠道。项目经理常常会不断发现，许多理应被普遍认同的策略，完全不为团队的一些成员所知。正因为项目经理的基本职责是使每个人都向着相同的方向前进，所以他的主要工作是沟通，而不是做出决定。这些文档能极大地减轻他的负担。最后，项目经理的文档可以作为数据基础和检查列表。通过周期性的回顾，他能清楚项目所处的状态，以及哪些需要重点进行更改和调整。项目经理的任务是制订计划，并根据计划实现。但是只有书面计划是精确和可以沟通的。计划中包括了时间、地点、人物、做什么、资金。这些少量的关键文档封装了一些项目经理的工作。如果一开始就认识到它们的普遍性和重要性，那么就可以将文档作为工具友好地利用起来，而不会让它成为令人厌烦的繁重任务。通过遵循文档开展工作，项目经理能更清晰和快速地设定自己的方向。","analysis":"B"}]},{"paperId":"305","field":"20142","question_list":[{"product_id":"20150818203554110","ans":"本题考査计算机系统基础知识。这是概念题，针对不同的划分，计算机系统采用总线结构对存储器和外设进行协调。总线将信号线分成三大类，并归结为数据总线(DateBus)、地址总线(AddressBus)和控制总线(ControlBus)但总线结构是CPU总线、内存总线和IO总线","analysis":"B"},{"product_id":"20150818203812079","ans":"本题考查计算机系统基础知识。计算机系统中，高速缓存一般用SRAM,内存一般用DRAM,外存一般采用磁存储器。SRAM的集成度低、速度快、成本高。DRAM的集成度高，但是需要动态刷新。磁存储器速度慢、容量大、价格便宜。因此，不同的存储设备组成分级存储体系，来解决速度、存储容量和成本之间的矛盾。","analysis":"D"},{"product_id":"20150818204044266","ans":"本题考查计算机系统基础知识。程序计数器、指令寄存器和指令译码器都是CPU中控制单元的部件，加法器是算术逻辑运算单元的部件。","analysis":"B"},{"product_id":"20150818204255985","ans":"本题考查计算机系统基础知识。从地址A5000H到DCFFFH，存储单元数目为(DCFFFH-A5000H+1)=3700H(即224*1024)个，由于是字节编址，从而得到的存储容量为224KB。","analysis":"D"},{"product_id":"20150818204559079","ans":"本题考查计算机系统基础知识。计算机工作时就是取指令和执行指令。一条指令往往可以完成一串运算的动作，但却需要多个时钟周期来执行。随着需求的不断增加，设计的指令集越来越多，为支持这些新增的指令，计算机的体系结构会越来越复杂，发展成CISC指令结构的计算机。而在CISC指令集的各种指令中，其使用频率却相差悬殊，大约有20%的指令会被反复使用，占整个程序代码的80%。而余下的80%的指令却不经常使用，在程序中常用的只占20%，显然这种结构是不太合理的。RISC和CISC在架构上的不同主要有：①在指令集的设计上，RISC指令格式和长度通常是固定的（如ARM是32位的指令)、且寻址方式少而简单、大多数指令在一个周期内就可以执行完；CISC构架下的指令长度通常是可变的、指令类型也很多、一条指令通常要若干周期才可以执行完。由于指令集多少与复杂度上的差异，使RISC的处理器可以利用简单的硬件电路设计出指令解码功能，这样易于流水线的实现。相对的CISC则需要通过只读存储器里的微码来进行解码，CISC因为指令功能与指令参数变化较大，执行流水线作业时有较多的限制。②RISC架构中只有载入和存储指令可以访问存储器，数据处理指令只对寄存器的内容进行操作。为了加速程序的运算，RISC会设定多组的寄存器，并且指定特殊用途的寄存器。CISC构架则允许数据处理指令对存储器进行操作，对寄存器的要求相对不高。","analysis":"A"},{"product_id":"20150818204743876","ans":"本题考查计算机系统基础知识。Flynn主要根据指令流和数据流来分类，分为四类：①单指令流单数据流机器（SISD)SISD机器是一种传统的串行计算机，它的硬件不支持任何形式的并行计算，所有的指令都是串行执行，并且在某个时钟周期内，CPU只能处理一个数据流。因此这种机器被称作单指令流单数据流机器。早期的计算机都是SISD机器。②单指令流多数据流机器（SIMD)SIMD是采用一个指令流处理多个数据流。这类机器在数字信号处理、图像处理以及多媒体信息处理等领域非常有效。Intel处理器实现的MMXTM、SSE(StreamingSIMDExtensions)、SSE2及SSE3扩展指令集，都能在单个时钟周期内处理多个数据单元。也就是说人们现在用的单核计算机基本上都属于SIMD机器。③多指令流单数据流机器（MISD)MISD是采用多个指令流来处理单个数据流。在实际情况中，采用多指令流处理多数据流才是更有效的方法。因此MISD只是作为理论模型出现，没有投入实际应用。④多指令流多数据流机器（MIMD)M1MD机器可以同时执行多个指令流，这些指令流分别对不同数据流进行操作。例如，intel和AMD的双核处理器就属于MIMD的范畴。","analysis":"B"},{"product_id":"20150818205659845","ans":"本题考査防火墙的基础知识。DMZ是指非军事化区，也称周边网络，可以位于防火墙之外也可以位于防火墙之内。非军事化区一般用来放置提供公共网络服务的设备，这些设备由于必须被公共网络访问，所以无法提供与内部网络主机相等的安全性。分析四个备选答案，Web服务器是为一种为公共网络提供Web访问的服务器；网络管理服务器和入侵检测服务器是管理企业内部网和对企业内部网络中的数据流进行分析的专用设备，一般不对外提供访问；而财务服务器是一种仅针对财务部门内部访问和提供服务的设备，不提供对外的公共服务。","analysis":"B"},{"product_id":"20150818205837313","ans":"本题考查拒绝服务攻击的基础知识。拒绝服务攻击是指不断对网络服务系统进行干扰，改变其正常的作业流程，执行无关程序使系统响应减慢直至瘫痪，从而影响正常用户的使用。当网络服务系统响应速度减慢或者瘫痪时，合法用户的正常请求将不被响应，从而实现用户不能进入计算机网络系统或不能得到相应的服务的目的。DDoS是分布式拒绝服务的英文缩写。分布式拒绝服务的攻击方式是通过远程控制大量的主机向H标主机发送大量的干扰消息的一种攻击方式。","analysis":"C"},{"product_id":"20150818210245579","ans":"本题考查计算机病毒的基础知识。“蠕虫”（Worm)是一个程序或程序序列。它利用网络进行复制和传播，传染途径是通过网络、移动存储设备和电子邮件。最初的蠕虫病毒定义是在DOS环境下，病毒发作时会在屏幕上出现一条类似虫子的东西，胡乱吞吃屏幕上的字母并将其改形，蠕虫病毒因此而得名。常见的蠕虫病毒有红色代码、爱虫病毒、熊猫烧香、Nimda病毒、爱丽兹病毒等。冰河是木马软件，主要用于远程监控，冰河木马后经其他人多次改写形成多种变种，并被用于入侵其他用户的计算机的木马程序。","analysis":"C"},{"product_id":"20150818210348454","ans":"委托开发软件著作权关系的建立，通常由委托方与受委托方订立合同而成立。委托开发软件关系中，委托方的责任主要是提供资金、设备等物质条件，并不直接参与开发软件的创作开发活动。受托方的主要责任是根据委托合同规定的目标开发出符合条件的软件。关于委托开发软件著作权的归属，《计算机软件保护条例》第十二条规定：“受他人委托开发的软件，其著作权的归属由委托者与受委托者签定书面协议约定，如无书面协议或者在协议中未作明确约定，其著作权属子受委托者。”根据该条的规定，确定委托开发的软件著作权的归属应当掌握两条标准：①委托开发软件系根据委托方的要求，由委托方与受托方以合同确定的权利和义务的关系而进行开发的软件，因此软件著作权归属应当作为合同的重要条款予以明确约定。对于当事人已经在合同中约定软件著作权归属关系的，如事后发生纠纷，软件著作权的归属仍应当根据委托开发软件的合同来确定。②对于在委托开发软件活动中，委托者与受委托者没有签定书面协议，或者在协议中未对软件著作权归属作出明确的约定，其软件著作权属于受委托者，即属于实际完成软件的开发者。","analysis":"A"},{"product_id":"20150818210601376","ans":"我国商标注册采取“申请在先”的审查原则，当两个或两个以上申请人在同一种或者类似商品上申请注册相同或者近似商标时，商标主管机关根据申请时间的先后，决定商标权的归属，申请在先的人可以获得注册。对于同日申请的情况，使用在先的人可以获得注册。如果同日使用或均未使用，则采取申请人之间协商解决，协商不成的，由各申请人抽签决定。类似商标是指在同一种或类似商品上用作商标的文字、图形、读音、含义或文字与图形的整体结构上等要素大体相同的商标，即易使消费者对商品的来源产生误认的商标。甲、乙两公司申请注册的商标，“大堂”与“大唐”读音相同、文字相近似，不能同时获准注册。在协商不成的情形下，由甲、乙公司抽签结果确定谁能获准注册。","analysis":"D"},{"product_id":"20150818210747235","ans":"本题考查多媒体基础知识。传输媒体指传输表示媒体的物理介质，如电缆、光缆、电磁波等；表示媒体指传输感觉媒体，如声音、图像等的中介媒体，即用于数据交换的编码，如文本编码、声音编码和图像编码等；表现媒体是指进行信息输入和输出的媒体，如键盘、鼠标、话筒以及显示器、打印机、喇叭等；存储媒体指用于存储表示媒体的物理介质，如硬盘、光盘等。声音信号的两个基本参数是幅度和频率。幅度是指声波的振幅，通常用动态范围表示，一般用分贝（dB)为单位来计量。频率是指声波每秒钟变化的次数，用Hz表示。人们把频率小于20Hz声波信号称为亚音信号(也称次音信号);频率范围为20Hz〜20kHz的声波信号称为音频信号；高于20kHz的信号称为超音频信号（也称超声波)。","analysis":"B"},{"product_id":"20150818210824141","ans":"本题考查多媒体基础知识。传输媒体指传输表示媒体的物理介质，如电缆、光缆、电磁波等；表示媒体指传输感觉媒体，如声音、图像等的中介媒体，即用于数据交换的编码，如文本编码、声音编码和图像编码等；表现媒体是指进行信息输入和输出的媒体，如键盘、鼠标、话筒以及显示器、打印机、喇叭等；存储媒体指用于存储表示媒体的物理介质，如硬盘、光盘等。声音信号的两个基本参数是幅度和频率。幅度是指声波的振幅，通常用动态范围表示，一般用分贝（dB)为单位来计量。频率是指声波每秒钟变化的次数，用Hz表示。人们把频率小于20Hz声波信号称为亚音信号(也称次音信号);频率范围为20Hz〜20kHz的声波信号称为音频信号；高于20kHz的信号称为超音频信号（也称超声波)。","analysis":"D"},{"product_id":"20150818211117704","ans":"本题考查考生多媒体基础知识。图像深度是指存储每个像素所用的位数，它是用来度量图像的色彩分辨率的，即确定彩色图像的每个像素可能有的颜色数，或者确定灰度图像的每个像素可能有的灰度级数。显示深度是显示器上每个点用于显示颜色的二进制位数。使用显示器显示数字图像时，应当使显示器的显示深度大于或等于数字图像的深度，这样显示器就可以完全反映数字图像中使用的全部颜色。","analysis":"D"},{"product_id":"20150818211423110","ans":"本题考查结构化开发方法的基础知识。结构化开发方法由结构化分析、结构化设计和结构化程序设计构成，是一种面向数据流的开发方法。结构化方法总的指导思想是自顶向下、逐层分解，基本原则是功能的分解与抽象。它是软件工程中最早出现的开发方法，特别适合于数据处理领域的问题，但是不适合解决大规模的、特别复杂的项目，而且难以适应需求的变化。","analysis":"C"},{"product_id":"20150818211605626","ans":"本题考查软件设计的相关知识。模块独立性是创建良好设计的一个重要原则，一般采用模块间的耦合和模块的内聚两个准则来进行度量。内聚是指模块内部各元素之间联系的紧密程度，内聚度越高，则模块的独立性越好。内聚性一般有以下几种：①巧合内聚，指一个模块内的各处理元素之间没有任何联系。②逻辑内聚，指模块内执行几个逻辑上相似的功能，通过参数确定该模块完成哪一个功能。③时间内聚，把需要同时执行的动作组合在一起形成的模块。④通信内聚，指模块内所有处理元素都在同一个数据结构上操作，或者指各处理使用相同的输入数据或者产生相同的输出数据。⑤顺序内聚，指一个模块中各个处理元素都密切相关于同一功能且必须顺序执行，前一个功能元素的输出就是下一个功能元素的输入。⑥功能内聚是最强的内聚，指模块内所有元素共同完成一个功能，缺一不可。","analysis":"D"},{"product_id":"20150818211733204","ans":"本题考查软件开发风险的基本概念。风险是一种具有负面后果的、人们不希望发生的事件。从不同的角度可以对风险进行不同的分类。如从风险涉及的范围，风险可以分为项目风险、技术风险和商业风险等。技术风险涉及设计方案、实现、接口、验证以及维护等方面的问题。此外，包括需求规格说明的不确定性、技术的不确定性、技术的陈旧以及采用不成熟的前沿技术等可能会带来技术风险。技术风险威胁着开发产品的质量和交付产品的时间。","analysis":"B"},{"product_id":"20150818211937141","ans":"本题考查程序语言基础知识。XML(可扩展标记语言）是标准通用标记语言的子集，是一种用于标记电子文件使其具有结构性的标记语言。Python是一种面向对象、解释型计算机程序设计语言。Prolog是逻辑型程序设计语言。C++为面向对象的编译型语言，而非解释型语言。","analysis":"B"},{"product_id":"20150818212520720","ans":"本题考查活动图的基础知识。根据关键路径法，计算出关键路径为A—B—D—I—J—L，关键路径长度为20,因此里程碑B在关键路径上，而里程碑E、C和K不在关键路径上。包含活动GH的最长路径是A—E—G—H—K—L，长度为17，因此该活动的松弛时间为20-17=3。","analysis":"A"},{"product_id":"20150818212650595","ans":"本题考查活动图的基础知识。根据关键路径法，计算出关键路径为A—B—D—I—J—L，关键路径长度为20,因此里程碑B在关键路径上，而里程碑E、C和K不在关键路径上。包含活动GH的最长路径是A—E—G—H—K—L，长度为17，因此该活动的松弛时间为20-17=3。","analysis":"D"},{"product_id":"20150818213047485","ans":"本题考查程序语言基础知识。后缀式（逆波兰式）是波兰逻辑学家卢卡西维奇发明的一种表示表达式的方法。这种表示方式把运算符写在运算对象的后面，例如把a+b写成ab+,所以也称为后缀式。算术表达式“(a-b)*(c+d)“的后缀式是“ab-cd+*”。","analysis":"A"},{"product_id":"20150818213202782","ans":"本题考查程序语言基础知识。从原理上讲，对源程序进行语义分析之后就可以直接生成目标代码，但由于源程序与目标代码的逻辑结构往往差别很大，特别是考虑到具体机器指令系统的特点，要使翻译一次到位很困难，而且用语法制导方式机械生成的目标代码往往是繁琐和低效的，因此有必要设计一种中间代码，将源程序首先翻译成中间代码表示形式，以利于进行与机器无关的优化处理。由于中间代码实际上也起着编译器前端和后端分水岭的作用，所以使用中间代码也有助于提高编译程序的可移植性。常用的中间代码有后缀式、三元式、四元式和树（图）等形式。","analysis":"D"},{"product_id":"20150818213358048","ans":"本题考查操作系统PV操作方面的基本知识。系统采用PV操作实现进程同步与互斥，若有n个进程共享两台打印机，那么信号量S初值应为2。当第1个进程执行P(S)操作时，信号量S的值减去1后等于1;当第2个进程执行P(S)操作时，信号量S的值减去1后等于0;当第3个进程执行P(S)操作时，信号量S的值减去1后等于-1;当第4个进程执行P(S)操作时，信号量S的值减去1后等于-2;……；当第n个进程执行P(S)操作时，信号量S的值减去1后等于-(n-2)。可见，信号量S的取值范围为-(n-2)〜2。","analysis":"D"},{"product_id":"20150818213855345","ans":"本题考查操作系统页式存储管理方面的基础知识。从图中可见，页内地址的长度是12位，212=4096,即4K;页号部分的地址长度是10位，每个段最大允许有210=1024个页；段号部分的地址长度是10位，210=1024,最多可有1024个段。","analysis":"D"},{"product_id":"20150818214122173","ans":"在块设备输入时，假定从磁盘把一块数据输入到缓冲区的时间为T，缓冲区中的数据传送到用户工作区的时间为M，而系统处理（计算）的时间为C，如图（a)所示。当第一块数据送入用户工作区后，缓冲区是空闲的，可以传送第二块数据。这样第一块数据的处理C1与第二块数据的输入T2是可以并行的，如图（b)所示，依次类推。系统对毎一块数据的处理时间为：Max(C，T)+M。因为当T>C时，处理时间为本题每一块数据的处理时间为10+5=15,Doc1文件的处理时间为15*10+2。”","analysis":"C"},{"product_id":"20150818214231157","ans":"双缓冲工作方式基本方法是在设备输入时，先将数据输入到缓冲区1，装满后便转向缓冲区2。此时系统可以从缓冲区1中提取数据传送到用户区，最后由系统对数据进行处理，如图（c)所示。双缓冲可以实现对缓冲区中数据的输入T和提取M，与CPU的计算C，三者并行工作，如图（c)所示。从图中可以看出，双缓冲进一步加快了I/O的速度，提高了设备的利用率。在双缓冲时，系统处理一块数据的时间可以粗略地认为是Max(C，T)。如果C<T,可使块设备连续输入；如果C>T，则可使系统不必等待设备输入。本题每一块数据的处理时间为10,采用双缓冲需要花费的时间为10*10+5+2=107。","analysis":"B"},{"product_id":"20150818214731110","ans":"图中R1资源只有2个，P2进程申请该资源得不到满足，故P2进程是阻塞节点；R2资源只有3个，P1申请该资源得不到满足，故P1进程也是阻塞节点；R3资源只有2个，分配给P1进程1个，P3申请1个该资源可以得到满足，故P3是非阻塞节点。","analysis":"C"},{"product_id":"20150818214813954","ans":"R3资源有2个，已分配1个，R3申请1个R2资源可以得到满足，故进程P3可以运行完毕释放其占有的资源。这样可以使得P1、P2都变为非阻塞节点，得到所需资源运行完毕，因此，进程资源图是可化简的。其化简顺序可以为P3—P1—P2或P3—P2—P1。","analysis":"B"},{"product_id":"20150818215037157","ans":"本题考查软件开发过程的基础知识。软件开发过程以系统需求作为输入，以要交付的产品作为输出，涉及活动、约束和资源使用的一系列工具和技术。瀑布模型、快速原型化模型、增量模型、螺旋模型等都是典型的软件开发过程模型。增量模型是Mills等于1980年提出來的。在使用该模型开发软件时，把软件产品作为一系列的增量构件来设计、编码、集成和测试。每个构件由多个相互作用的模块构成，并能够完成特定的功能。其优点包括能在较短时间内向用户提交可完成一些有用的工作产品；用户有充裕的时间来学习和适应不断增加的产品功能；项目失败风险较低；优先级最高的服务首先交付，然后再逐步增加新的构件，这样最重要的构件被测试得最充分。在四个选项中，只有选项B是描述增量模型的，要求需求被清晰定义是瀑布模型的一个典型特点，风险评估是螺旋模墦的特点。在当今市场竞争激烈的条件下，用增量模型可以快速的交付一部分产品，是适于商业产品的开发的。","analysis":"B"},{"product_id":"20150818215149438","ans":"本题考查软件过程的基础知识。CMM(CapabilityMaturityModel)是指软件过程能力成熟度模型，该模型按照软件过程的不同成熟度划分了5个等级，1级被认为成熟度最低，5级则为成熟度最高。一般来说，采用更成熟的软件过程模型，往往可以得到更高质量的软件产品。1997年美国卡内基•梅隆大学软件工程研究所SEI将已有的几个CMM模型结合在一起，构造成“集成模型”即CMMI(CapabilityMaturityModelIntegration)。","analysis":"B"},{"product_id":"20150818215302813","ans":"本题考查软件质量的基础知识。ISO/IEC9126软件质量模型由三个层次组成：第一层是质量特性，第二层是质量子特性，第三层是度量指标。可靠性是一个重要的质量特性，其子特性包括成熟性、容错性和易恢复性。","analysis":"D"},{"product_id":"20150818215358454","ans":"本题考查软件测试的基础知识。软件测试的基本目标是为了发现软件中的错误，但软件测试分为几个不同的阶段，每个阶段的侧重点是有所不同的。单元测试主要是发现程序代码中的问题，针对详细设计和软件实现阶段的工作进行的；集成测试验证系统模块是否能够根据系统和程序设计规格说明的描述进行工作，即模块以及模块之间的接口的测试：而系统测试则是验证系统是否确实执行需求规格说明中描述的功能和非功能要求，因此测试目标在需求分析阶段就已经定义。","analysis":"A"},{"product_id":"20150818215538501","ans":"本题考查软件文档的相关知识。软件由程序、数据和相关文档构成，因此文档是软件不可或缺的重要组成部分。软件开发各个阶段都需要撰写相关文档，如开发计划、需求分析文档、设计文档等，这些文档是开发人员之间以及和其他人员之间进行沟通的重要依据，高质量的文档对于提高软件开发质量具有重要的意义。尽管在开发过程中编写文档需要占用开发时间，但是相对于没有文档而言，编写文档使得开发人员对各个阶段的工作都进行周密思考，全盘权衡，从而减少返工。并且可以在开发早期发现错误和不一致性，便于及时加以纠正，因此可以提高软件开发效率。","analysis":"B"},{"product_id":"20150818215743970","ans":"本题考查程序结构和复杂性的基本概念和相关知识。重新画出上述流程图，给相关的操作加上编号，并给出对应的等价图，如下图（a)和（b)所示。从图(a)可知，共有3条简单路径，即①②③④；①②③⑤⑦③；①②③⑤⑥⑦③。根据图（b)计算程序复杂性，得到n=7,e=8,因此复杂性为e-n+2=3。","analysis":"A"},{"product_id":"20150818215810891","ans":"本题考查程序结构和复杂性的基本概念和相关知识。重新画出上述流程图，给相关的操作加上编号，并给出对应的等价图，如下图（a)和（b)所示。从图(a)可知，共有3条简单路径，即①②③④；①②③⑤⑦③；①②③⑤⑥⑦③。根据图（b)计算程序复杂性，得到n=7,e=8,因此复杂性为e-n+2=3。","analysis":"A"},{"product_id":"20150818215903407","ans":"本题考查软件维护的相关知识。软件产品在交付给用户之后，就进入了维护阶段。在该阶段针对系统改变所做的任何工作，都属于维护活动。软件维护期通常比开发期要长得多，根据统计数据一般项目花费1到2年的开发时间，但是需要额外的5到6年的维护时间。维护的成本也比开发成本高得多，另外一些企业数据表明，平均39%的工作量花在开发上，其余的在维护上。软件可维护性是指在给定的条件下，在规定的时间间隔内，使用规定的过程和资源完成维护活动的概率。通过多个方面来提高软件产品的可维护性，其中进行质量保证审查是一个重要的手段。在软件开发的各个阶段都需要考虑提高软件产品的可维护性，而不仅仅是在软件维护阶段。","analysis":"D"},{"product_id":"20150818215959751","ans":"本题考查面向对象的基本知识。在进行类设计时，有些类之间存在一般和特殊关系，即一些类是某个类的特殊情况，某个类是一些类的一般情况，这就是继承关系。继承是类之间的一种关系，在定义和实现一个类的时候，可以在一个已经存在的类（一般情况）的基础上来进行，把这个己经存在的类所定义的内容作为自己的内容，并加入若干新的内容，即子类比父类更加具体化。交通工具是泛指各类交通工具，而汽车、飞机和轮船分别都是具体的交通工具类，且具有自己的特性。因此交通工具是汽车、飞机和轮船类的一般情况，分别与汽车、轮船和飞机存在一般与特殊的关系。","analysis":"B"},{"product_id":"20150818220304501","ans":"本题考查面向对象的基本知识。面向对象系统中，在收到消息时，对象要予以相应。多态（polymorphism)是不同的对象收到同一消息可以进行不同的响应，产生完全不同的结果，用户可以发送一个通用的消息，而实现细节则由接收对象自行决定，使得同一个消息就可以调用不同的方法，即一个对象具有多种形态。Cardelli和Wegner将多态分为4种不同的形式：参数多态、包含多态、过载多态和强制多态。其中参数多态是应用比较广的多态，包含多态在许多语言中都存在，最常见的例子就是子类型化。过载多态是同一个名字在不同的上下文中所代表的含义。","analysis":"B"},{"product_id":"20150818220421766","ans":"本题考查面向对象的基本知识。在面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类（父类）和子类之间共享数据和方法的机制。面向对象语言中对象通过消息传递的方式进行相互通信。在继承的支持下，不同的对象收到同一消息可以进行不同的响应，并且会产生完全不同的结果，这种现象称为多态。好的面向对象程序设计语言一般应该支持被封装的对象、类与实例的概念、支持继承和多态等面向对象技术中的概念。","analysis":"A"},{"product_id":"20150818220458798","ans":"本题考查面向对象的基本知识。在面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类（父类）和子类之间共享数据和方法的机制。面向对象语言中对象通过消息传递的方式进行相互通信。在继承的支持下，不同的对象收到同一消息可以进行不同的响应，并且会产生完全不同的结果，这种现象称为多态。好的面向对象程序设计语言一般应该支持被封装的对象、类与实例的概念、支持继承和多态等面向对象技术中的概念。","analysis":"C"},{"product_id":"20150818220707157","ans":"本题考査统一建模语言（UML)的基本知识。UML是面向对象软件的标准化建模语言，由三个要素构成：UML的基本构造块、支配这些构造块如何放置在一起的规则和运用与整个语言的一些公共机制。UML的词汇表包含三种构造块：事物、关系和图。事物是对模型中最具有代表性的成分的抽象；关系把事物结合在一起；图聚集了相关的事物。UML中有4种事物：结构事物、行为事物、分组事物和注释事物。结构事物是UML模型中的名词，它们通常是模型的静态部分，描述概念或物理元素。结构事物包括类(class)、接口（interface)、协作（collaboration)、用例（usecase)、主动类（activeclass)、构件（component)、制品（artifact)和结点（node)。行为事物是UML模型的动态部分，它们是模型中的动词，描述了跨越时间和空间的行为。行为事物包括：交互（interaction)、状态机（statemachine)和活动（activity)。分组事物是UML模型的组织部分，是一些由模型分解成的“盒子”。在所有的分组事物中最主要的分组事物是包（package)。注释事物是UML模型的解释部分。这些注释事物用来描述、说明和标注模型的任何元素。注解（note)是一种主要的注释事物。注解是一个依附于一个元素或者一组元素之上，对它进行约束或解释的简单符号。","analysis":"A"},{"product_id":"20150818220748079","ans":"本题考査统一建模语言（UML)的基本知识。UML是面向对象软件的标准化建模语言，由三个要素构成：UML的基本构造块、支配这些构造块如何放置在一起的规则和运用与整个语言的一些公共机制。UML的词汇表包含三种构造块：事物、关系和图。事物是对模型中最具有代表性的成分的抽象；关系把事物结合在一起；图聚集了相关的事物。UML中有4种事物：结构事物、行为事物、分组事物和注释事物。结构事物是UML模型中的名词，它们通常是模型的静态部分，描述概念或物理元素。结构事物包括类(class)、接口（interface)、协作（collaboration)、主动类（activeclass)、构件（component)、制品（artifact)和结点（node)。行为事物是UML模型的动态部分，它们是模型中的动词，描述了跨越时间和空间的行为。行为事物包括：交互（interaction)、状态机（statemachine)和活动（activity)。分组事物是UML模型的组织部分，是一些由模型分解成的“盒子”。在所有的分组事物中最主要的分组事物是包（package)。注释事物是UML模型的解释部分。这些注释事物用来描述、说明和标注模型的任何元素。注解（note)是一种主要的注释事物。注解是一个依附于一个元素或者一组元素之上，对它进行约束或解释的简单符号。","analysis":"D"},{"product_id":"20150818220850610","ans":"本题考查设计模式的基本概念。解释器（Interpreter)设计模式是给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。策略（Strategy)设计模式定义一系列算法，把它们一个个封装起来，并且使它们可相互替换。这一模式使得算法可独立于它的客户而变化。中介者（Mediator)用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。观察者（Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。以上四种设计模式都是行为设计模式。行为设计模式大多注重封装变化，当一个程序的某个方面的特征经常发生改变时，这些模式就定义一个封装这个方面的对象。这样，当该程序的其他部分依赖于这个方面时，它们都可以与此对象协作。这些模式通常定义一个抽象类来描述这些封装变化的对象，并且通常该模式依据这个对象来命名。例如：一个Strategy对象封装一个算法，一个Mediator对象封装对象间的协议。Mediator和Observer是相互竞争的模式，之间的差别是：Observer通过引入Observer和Subject对象来分布通信，而Mediator对象则封装了其他对象间的通信。","analysis":"C"},{"product_id":"20150818220924157","ans":"本题考查设计模式的基本概念。解释器（Interpreter)设计模式是给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。策略（Strategy)设计模式定义一系列算法，把它们一个个封装起来，并且使它们可相互替换。这一模式使得算法可独立于它的客户而变化。中介者（Mediator)用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。观察者（Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。以上四种设计模式都是行为设计模式。行为设计模式大多注重封装变化，当一个程序的某个方面的特征经常发生改变时，这些模式就定义一个封装这个方面的对象。这样，当该程序的其他部分依赖于这个方面时，它们都可以与此对象协作。这些模式通常定义一个抽象类来描述这些封装变化的对象，并且通常该模式依据这个对象来命名。例如：一个Strategy对象封装一个算法，一个Mediator对象封装对象间的协议。Mediator和Observer是相互竞争的模式，之间的差别是：Observer通过引入Observer和Subject对象来分布通信，而Mediator对象则封装了其他对象间的通信。","analysis":"D"},{"product_id":"20150818221012266","ans":"本题考查统一建模语言（UML)的基本知识。UML中提供了多种建模系统的图，体现系统的静态方面和动态方面。对象图（objectdiagram)展现了某一时刻一组对象以及它们之间的关系。对象图描述了在类图中所建立的事物的实例的静态快照，给出系统的静态设计视图或静态进程视图。序列图（sequencediagram)是场景（scenario)的图形化表示，描述了以时间顺序组织的对象之间的交互活动。通信图（communicationdiagram)强调收发消息的对象的结构组织。时序图（TimingDiagram)关注沿着线性时间轴、生命线内部和生命线之间的条件改变，描述对象状态随着时间改变的情况，很像示波器，适合分析周期和非周期性任务。交互概览图（InteractionOverviewDiagram)是UML2.0新增的交互图之一，它是活动图的变体，描述业务过程中的控制流概览，软件过程中的详细逻辑概览，以及将多个图进行连接，抽象掉了消息和生命线。序列图、通信图、交互概览图和时序图均被称为交互图。","analysis":"B"},{"product_id":"20150818221215438","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。抽象工厂（AbstractFactory)模式提供一个创建一系列相关或相互依赖对象的接口，而无需指定他们具体的类。抽象工厂模式适用于一个系统要独立于它的产品的创建、组合和表示时；一个系统要由多个产品系列中的一个来配置时；当要强调一系列相关的产品对象的设计以便进行联合使用时：当提供一个产品类库，而只想显示它们的接口而不是实现时。生成器（Builder)模式将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。生成器模式适用于当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时：当构造过程必须允许被构造的对象有不同的表示时。工厂方法（FactoryMethod)定义一个用于创建对象的接口，让子类决定将哪一个类实例化，使一个类的实例化延迟到其子类。工厂方法模式适用于当一个类不知道它所必须创建的对象的类的时候：当一个类希望由它的子类来指定它所创建的对象的时候；当类将创建对象的职责委托给多个帮助子类中的某一个，并且你希望将哪一个帮助子类是代理者这一信息局部化的时候。原型（Prototype)模式用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。原型模式适用于：当一个系统应该独立于它的产品创建、构成和表示时;当要实例化的类是在运行时刻指定时，例如通过动态装载，为了避免创建一个与产品类层次平行的工厂类层次时；当一个类的实例只能有几个不同状态组合中的一种时，建立相应数目的原型并克隆它们可能比每次用合适的状态手工实例化该类更方便一些。","analysis":"B"},{"product_id":"20150818221302173","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。抽象工厂（AbstractFactory)模式提供一个创建一系列相关或相互依赖对象的接口，而无需指定他们具体的类。抽象工厂模式适用于一个系统要独立于它的产品的创建、组合和表示时；一个系统要由多个产品系列中的一个来配置时；当要强调一系列相关的产品对象的设计以便进行联合使用时：当提供一个产品类库，而只想显示它们的接口而不是实现时。生成器（Builder)模式将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。生成器模式适用于当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时：当构造过程必须允许被构造的对象有不同的表示时。工厂方法（FactoryMethod)定义一个用于创建对象的接口，让子类决定将哪一个类实例化，使一个类的实例化延迟到其子类。工厂方法模式适用于当一个类不知道它所必须创建的对象的类的时候：当一个类希望由它的子类来指定它所创建的对象的时候；当类将创建对象的职责委托给多个帮助子类中的某一个，并且你希望将哪一个帮助子类是代理者这一信息局部化的时候。原型（Prototype)模式用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。原型模式适用于：当一个系统应该独立于它的产品创建、构成和表示时;当要实例化的类是在运行时刻指定时，例如通过动态装载，为了避免创建一个与产品类层次平行的工厂类层次时；当一个类的实例只能有几个不同状态组合中的一种时，建立相应数目的原型并克隆它们可能比每次用合适的状态手工实例化该类更方便一些。","analysis":"C"},{"product_id":"20150818221359720","ans":"本题考查程序语言基础知识。编译程序的功能是把某高级语言书写的源程序翻译成与之等价的目标程序（汇编语言或机器语言)。编译程序的工作过程可以分为词法分析、语法分析、语义分析、中间代码生成、代码优化、目标代码生成、符号表管理和出错处理等部分，如下图所示。目标代码生成是编译器工作的最后一个阶段。这一阶段的任务是把中间代码变换成特定机器上的绝对指令代码、可重定位的指令代码或汇编指令代码，这个阶段的工作与具体的机器密切相关。因此在目标代码生成阶段分配寄存器。","analysis":"D"},{"product_id":"20150818221541407","ans":"本题考查程序语言基础知识。自动机识别字符串的过程是：从初态出发，根据字符串的当前字符实现状态转移。如果存在从初态到终态的状态转移路径与字符串中的各个字符相匹配，那么就说该自动机可以识别该字符串。题中所给自动机的初态和终态都是编号为1的状态，从其状态图可知，从状态1开始，识别出字符“a”时仍然转移到状态1，而识别出字符“b”时才离开状态1进入状态2,状态2仅对字符“a”有状态转移，且转回状态1。因此，该自动机识别的字符串仅包含a、b字符，但是字符“b”不能连续出现，连续出现“a”是可以的。","analysis":"A"},{"product_id":"20150818221632516","ans":"本题考查程序语言的基础知识。乔姆斯基（Chomsky)把文法分成四种类型，即0型、1型、2型和3型。0型文法也称为短语文法，其能力相当于图灵机，任何0型语言都是递归可枚举的；反之，递归可枚举集也必定是一个0型语言。1型文法也称为上下文有关文法，这种文法意味着对非终结符的替换必须考虑上下文。2型文法就是上下文无关文法，非终结符的替换无需考虑上下文。3型文法等价于正规式，因此也被称为正规文法或线性文法。通用程序设计语言的大多数语法可由上下文无关文法表示。","analysis":"B"},{"product_id":"20150818221725954","ans":"本题考查数据库系统基本概念方面的基础知识。数据库设计主要分为用户需求分析、概念结构、逻辑结构和物理结构设计四个阶段。其中，在用户需求分析阶段中，数据库设计人员采用一定的辅助工具对应用对象的功能、性能、限制等要求所进行的科学分析，并形成需求说明文档、数据字典和数据流程图。用户需求分析阶段形成的相关文档用以作为概念结构设计的设计依据。","analysis":"A"},{"product_id":"20150818221757610","ans":"本题考查数据库系统基本概念方面的基础知识。数据库设计主要分为用户需求分析、概念结构、逻辑结构和物理结构设计四个阶段。其中，在用户需求分析阶段中，数据库设计人员采用一定的辅助工具对应用对象的功能、性能、限制等要求所进行的科学分析，并形成需求说明文档、数据字典和数据流程图。用户需求分析阶段形成的相关文档用以作为概念结构设计的设计依据。","analysis":"C"},{"product_id":"20150818222155235","ans":"本题考查关系代数运算与SQL查询方面的基础知识。","analysis":"C"},{"product_id":"20150818222247282","ans":"","analysis":"D"},{"product_id":"20150818222556516","ans":"关系代数表达式查询优化的原则如下：①提早执行选取运算。对于有选择运算的表达式，应优化成尽可能先执行选择运算的等价表达式，以得到较小的中间结果，减少运算量和从外存读块的次数。②合并乘积与其后的选择运算为连接运算。在表达式中，当乘积运算后面是选择运算时，应该合并为连接运算，使选择与乘积一道完成，以避免做完乘积后，需再扫描一个大的乘积关系进行选择运算。③将投影运算与其后的其他运算同时进行，以避免重复扫描关系。④将投影运算和其前后的二目运算结合起来，使得没有必要为去掉某些字段再扫描一遍关系。⑤在执行连接前对关系适当地预处理，就能快速地找到要连接的元组。方法有两种：索引连接法、排序合并连接法。⑥存储公共子表达式。对于有公共子表达式的结果应存于外存（中间结果)，这样，当从外存读出它的时间比计算的时间少时，就可节约操作时间。","analysis":"B"},{"product_id":"20150818222658235","ans":"本题考查关系数据库基础知识。关系模式R中，属性AE仅出现在函数依赖集F左部，而其余属性都不是左右都未出现的厲性，所以AE必为R的唯一候选码。","analysis":"C"},{"product_id":"20150818222841407","ans":"本题考查数据结构基础知识。对于线性表(a1，a2,…，an)，顺序存储时表中元素占用的存储单元地址是连续的，因此逻辑上相邻的元素，其物理位置也相邻，如下图（a）所示。线性表采用链式存储有单链表、双向链表、循环链表等形式，单链表如下图（b)所示。链式存储的基本特点是逻辑上相邻的元素不要求物理位置上相邻，所以需要在元素的存储单元中专门表示下一个（或上一个）元素的存储位置信息，从而可以得到元素间的顺序信息。","analysis":"A"},{"product_id":"20150818223000766","ans":"本题考查数据结构基础知识。以n等于4举例说明。输入序列为1234,输出序列的第一个元素可以为1或2。若为1，则输出序列可能为1234、1243、1342、1324、1432；若为2,则输出序列为2134、2143、2314、2341、2431。以上序列都可由合法的入栈、出栈操作序列给出，从中可知无法确定输出序列中最后1个元素的值。","analysis":"D"},{"product_id":"20150818223047626","ans":"本题考查数据结构基础知识。非空二叉查找树中的结点分布特点是左子树中的结点均小于树根，右子树中的结点均大于树根。因此，在二叉査找树中进行查找时，走了一条从树根出发到所找到结点的路径，到达一个空的子树则表明查找失敗。根据定义，高度为h的满二叉树中有2h-l个结点，每一层上的结点数都达到最大值。完全二叉树的最高层只要求结点先占据左边的位置。例如，高度为3的满二叉树如下图(a)所示，具有6个结点的完全二叉树如下图（b)所示。在平衡二叉树中，任何一个结点的左子树髙度与右子树髙度之差的绝对值不大于1单枝树中给每个结点只有1个子树。例如，具有3个结点的单枝树如下图所示。显然，在结点数确定后，二叉查找树的形态为单枝树时查找效率最差。","analysis":"C"},{"product_id":"20150818223207548","ans":"本题考査字符串的模式匹配运算知识。KMP是进行字符串模式匹配运算效率较高的算法。根据对next函数的定义，模式串前两个字符的next值为0、1。对于第3个字符“a”，其在模式串中的前缀为“ab”，从该子串找不出前缀和后缀相同的部分，因此，根据定义，该位置字符的next值为1。对于第4个字符“a”，其在模式串中的前缀为“aba”，该子串只有长度为1的前缀“a”和后缀“a”相同，根据定义，该位置字符的next值为2。对于第5个字符“c”，其在模式串中的前缀为“abaa”，该子串只有长度为1的前缀“a”和后缀“a”相同，根据定义，该位置字符的next值为2。综上可得，模式串“abaac”的next函数值为01122。","analysis":"B"},{"product_id":"20150818223347423","ans":"本题考查快速排序算法。快速排序算法是应用最为广泛的排序算法之一。其基本思想是将n个元素划分为两个部分：一部分元素值小于某个数；另一部分元素值大于某个数，该数的位置确定：然后进一步划分前面部分和后面部分。根据该叙述，可以知道，这里采用的是分治算法设计策略。","analysis":"A"},{"product_id":"20150818223451829","ans":"本题考查快速排序算法。快速排序算法是应用最为广泛的排序算法之一。其基本思想是将n个元素划分为两个部分：一部分元素值小于某个数；另一部分元素值大于某个数，该数的位置确定：然后进一步划分前面部分和后面部分。根据该叙述，可以知道，这里采用的是分治算法设计策略。","analysis":"D"},{"product_id":"20150818223547891","ans":"本题考查简单排序算法特点。直接插入排序的思想是：是将n个待排序的元素由一个有序表和一个无序表组成，开始时有序表中只包含一个元素。排序过程中，每次从无序表中取出第一个元素，将其插入到有序表中的适当位置，使有序表的长度不断加长，完成排序过程。例如，对序列21，48,21*，9进行直接插入排序，21和21*的相对位置在排序前后可保持，如下所示：第一趟得到有序子序列：21，48第二趟得到有序子序列：21，21*，48第三趟得到有序序列：9,21，21*，48简单选择排序的过程是：第一趟在n个记录中选取最小记录作为有序序列的第一个记录；第二趟在n-1个记录中选取最小记录作为有序序列的第二个记录：第i趟在n-i+1个记录中选取最小的记录作为有序序列中的第i个记录，直到将序列排列有序。对序列21，48,21*，9进行简单选择排序，过程如下：第一趟选出最小元素，将其交换至1号位置，序列为：9,48,21*，21第二趟选出次小元素，将其交换至2号位置，序列为：9,21*，48,21第三趟选出第三小元素，将其交换至3号位置，序列为：9,21*，21，48从该例可知，简单选择排序过程不能保证排序码相同的两个元素在排序前后的相对位置不变，直接插入排序则可以。","analysis":"C"},{"product_id":"20150818224055970","ans":"本题考査Huffman编码的相关知识。字符在计算机中是用二进制表示的，每个字符用不同的二进制编码来表示。码的长度影响存储空间和传输效率。若是定长编码方法，用2位码长，只能表示4个字符，即00、01、10和11;若用3位码长，则可以表示8个字符，即000、001、010、011、100、101、110、111。对于题中给出的例子，一共有6个字符，因此采用3位码长的编码可以表示这些字符。Huffman编码是一种最优的不定长编码方法，可以有效的压缩数据。要使用Huffman编码，除了知道文件中出现的字符之外，还需要知道每个宇符出现的频率。下图（a)是题下中给出对应的编码树，可以看到，每个字符及其对应编码为图（b)，因此字符序列“face”的编码应为110001001101。","analysis":"B"},{"product_id":"20150818224139173","ans":"本题考査Huffman编码的相关知识。字符在计算机中是用二进制表示的，每个字符用不同的二进制编码来表示。码的长度影响存储空间和传输效率。若是定长编码方法，用2位码长，只能表示4个字符，即00、01、10和11;若用3位码长，则可以表示8个字符，即000、001、010、011、100、101、110、111。对于题中给出的例子，一共有6个字符，因此采用3位码长的编码可以表示这些字符。Huffman编码是一种最优的不定长编码方法，可以有效的压缩数据。要使用Huffman编码，除了知道文件中出现的字符之外，还需要知道每个宇符出现的频率。下图（a)是题下中给出对应的编码树，可以看到，每个字符及其对应编码为图（b)，因此字符序列“face”的编码应为110001001101。","analysis":"A"},{"product_id":"20150818224322516","ans":"PPP认证是可选的。PPP扩展认证协议（ExtensibleAuthenticationProtocol，EAP)可支持多种认证机制，并且允许使用后端服务器来实现复杂的认证过程。例如通过Radius服务器进行Web认证时，远程访问服务器（RAS)只是作为认证服务器的代理传递请求和应答报文，并且当识别出认证成功/失败标志后结束认证过程。通常PPP支持的两个认证协议是：①口令验证协议（PasswordAuthenticationProtocol，PAP)：提供了一种简单的两次握手认证方法，由终端发送用户标识和口令字，等待服务器的应答，如果认证不成功，则终止连接。这种方法不安全，因为采用文本方式发送密码，可能会被第三方窃取。②质询握手认证协议（ChallengeHandshakeAuthenticationProtocol，CHAP)；采用三次握手方式周期地验证对方的身份。首先是逻辑链路建立后认证服务器就要发送一个挑战报文（随机数)，终端计算该报文的Hash值并把结果返回服务器，然后认证服务器把收到的Hash值与自己计算的Hash值进行比较，如果匹配，则认证通过，连接得以建立，否则连接被终止。计算Hash值的过程有一个双方共享的密钥参与，而密钥是不通过网络传送的，所以CHAP是更安全的认证机制。在后续的通信过程中，每经过一个随机的间隔，这个认证过程都可能被重复，以缩短入侵者进行持续攻击的时间。值得注意的是，这种方法可以进行双向身份认证，终端也可以向服务器进行挑战，使得双方都能确认对方身份的合法性。","analysis":"C"},{"product_id":"20150818224513985","ans":"ICMP(InternetcontrolMessageProtocol)与IP协议同属于网络层，用于传送有关通信问题的消息，例如数据报不能到达目标站，路由器没有足够的缓存空间，或者路由器向发送主机提供最短通路信息等。ICMP报文封装在IP数据报中传送，因而不保证可靠的提交。","analysis":"B"},{"product_id":"20150818224608110","ans":"ICMP(InternetcontrolMessageProtocol)与IP协议同属于网络层，用于传送有关通信问题的消息，例如数据报不能到达目标站，路由器没有足够的缓存空间，或者路由器向发送主机提供最短通路信息等。ICMP报文封装在IP数据报中传送，因而不保证可靠的提交。","analysis":"D"},{"product_id":"20150818224757954","ans":"本试题考査DHCP协议的工作原理。DHCP客户端可从DHCP服务器获得本机IP地址、DNS服务器的地址、DHCP服务器的地址、默认网关的地址等，但没有Web服务器、邮件服务器地址。","analysis":"B"},{"product_id":"20150818224901048","ans":"由于分配给公司网络的地址块是210.115.192.0/20,留给子网掩码的比特数只有4位，所以只能划分为16个C类子网，这16个C类子网的子网号为11000000〜11001111，即192〜207，所以210.115.210.0不属于该公司的网络地址。","analysis":"C"},{"product_id":"20150818225000970","ans":"大多数工程项目需要团队完成。虽然有些小规模的硬件或软件产品可以由个人完成，但是现代系统的规模大、复杂性髙以及开发周期短的极高需求，使得一个人完成大多工程工作已经不再现实。系统开发是一个团队活动，团队的效率很大程度上决定工程的质量。开发团队经常表现的像是棒球队或篮球队，即使棒球队或篮球队可能有多种不同专长，但是所有的队员都朝着一个目标努力。然而在系统维护和增强团队，工程师们的工作就像摔跤和田径队一样经常相对独立。团队不仅仅是一群人碰巧在一起工作，团队工作需要实践，涉及到多种特殊的技能。团队需要共同的过程，需要达成一致的目标，需要有效地指导和领导。尽管指导和领导这样的团队的方法是众所周知的，但是它们并不明显。","analysis":"C"},{"product_id":"20150818225028204","ans":"大多数工程项目需要团队完成。虽然有些小规模的硬件或软件产品可以由个人完成，但是现代系统的规模大、复杂性髙以及开发周期短的极高需求，使得一个人完成大多工程工作己已经不再现实。系统开发是一个团队活动，团队的效率很大程度上决定工程的质量。开发团队经常表现的像是棒球队或篮球队，即使棒球队或篮球队可能有多种不同专长，但是所有的队员都朝着一个目标努力。然而在系统维护和增强团队，工程师们的工作就像摔跤和田径队一样经常相对独立。团队不仅仅是一群人碰巧在一起工作，团队工作需要实践，涉及到多种特殊的技能。团队需要共同的过程，需要达成一致的目标，需要有效地指导和领导。尽管指导和领导这样的团队的方法是众所周知的，但是它们并不明显。","analysis":"A"},{"product_id":"20150818225057938","ans":"大多数工程项目需要团队完成。虽然有些小规模的硬件或软件产品可以由个人完成，但是现代系统的规模大、复杂性髙以及开发周期短的极高需求，使得一个人完成大多工程工作已经不再现实。系统开发是一个团队活动，团队的效率很大程度上决定工程的质量。开发团队经常表现的像是棒球队或篮球队，即使棒球队或篮球队可能有多种不同专长，但是所有的队员都朝着一个目标努力。然而在系统维护和增强团队，工程师们的工作就像摔跤和田径队一样经常相对独立。团队不仅仅是一群人碰巧在一起工作，团队工作需要实践，涉及到多种特殊的技能。团队需要共同的过程，需要达成一致的目标，需要有效地指导和领导。尽管指导和领导这样的团队的方法是众所周知的，但是它们并不明显。","analysis":"B"},{"product_id":"20150818225127954","ans":"大多数工程项目需要团队完成。虽然有些小规模的硬件或软件产品可以由个人完成，但是现代系统的规模大、复杂性髙以及开发周期短的极高需求，使得一个人完成大多工程工作已经不再现实。系统开发是一个团队活动，团队的效率很大程度上决定工程的质量。开发团队经常表现的像是棒球队或篮球队，即使棒球队或篮球队可能有多种不同专长，但是所有的队员都朝着一个目标努力。然而在系统维护和增强团队，工程师们的工作就像摔跤和田径队一样经常相对独立。团队不仅仅是一群人碰巧在一起工作，团队工作需要实践，涉及到多种特殊的技能。团队需要共同的过程，需要达成一致的目标，需要有效地指导和领导。尽管指导和领导这样的团队的方法是众所周知的，但是它们并不明显。","analysis":"C"},{"product_id":"20150818225155016","ans":"大多数工程项目需要团队完成。虽然有些小规模的硬件或软件产品可以由个人完成，但是现代系统的规模大、复杂性髙以及开发周期短的极高需求，使得一个人完成大多工程工作已经不再现实。系统开发是一个团队活动，团队的效率很大程度上决定工程的质量。开发团队经常表现的像是棒球队或篮球队，即使棒球队或篮球队可能有多种不同专长，但是所有的队员都朝着一个目标努力。然而在系统维护和增强团队，工程师们的工作就像摔跤和田径队一样经常相对独立。团队不仅仅是一群人碰巧在一起工作，团队工作需要实践，涉及到多种特殊的技能。团队需要共同的过程，需要达成一致的目标，需要有效地指导和领导。尽管指导和领导这样的团队的方法是众所周知的，但是它们并不明显。","analysis":"D"}]},{"paperId":"304","field":"20141","question_list":[{"product_id":"20150326223750958","ans":"本题考查计算机系统基础知识。CPU中有一些重要的寄存器，程序计数器（PC）用于存放指令的地址。当程序顺序执行时，每取出一条指令，PC内容自动增加一个值，指向下一条要取的指令，当程序出现转移时，则将转移地址送入PC，然后由PC给出新的指令地址。状态寄行器用于记录运算中产生的标志信息。状态寄存器中的每一位单独使用，成为标志位。标志位的取值反映了ALU当前的工作状态，可以作为条件转移指令的转移条件。典型的标志位有以下几种：进位标志位（C）、零标志位（Z）、符号标志位（S）、溢出标志位（V）、奇偶标志位（P）。通用寄存器组是CPU中的一组工作寄存器，运算时用于暂存操作数或地址。在程序中使用通用寄存器可以减少访问内存的次数，提高运算速度。累加器（accumulator）是一个数据寄存器，在运算过程中暂时存放操作数和中间运算结果，不能用于长时间地保存一个数据。","analysis":"D"},{"product_id":"20150326223922281","ans":"本题考查计算机系统中的数据表示基础知识。机器字长为n，最高位为符号位，则剩余的n-1位用来表示数值，其最大值是这n-1位都为1，也就是2n-1-1。","analysis":"B"},{"product_id":"20150326224803728","ans":"本题考查数据校验基础知识。设数据位是n位，校验位是k位，则n和k必须满足以下关系：2k-1≥n+k。若n=48，则k为6时可满足26-1≥48+6。海明码的编码规则如下。设k个校验位为Pk，Pk-1，…，P1，n个数据位为Dn-1，Dn-2，…，D1，D0。对应的海明码为Hn+k，Hn+k-1，…，H1，那么：①Pi在海明码的第2i-1位置，即Hj=Pi，且j＝2i-1；数据位则依序从低到高占据海明码中剩下的位置。②海明码中的任一位都是由若干个校验位来校验的。其对应关系如下：被校验的海明位的下标等于所有参与校验该位的校验位的下标之和，而校验位则由自身校验。","analysis":"C"},{"product_id":"20150326225201770","ans":"本题考查指令系统基础知识。指令顺序执行时，每条指令需要9△t（4△t+2△t+3△t），执行完600条指令需要5400△t。","analysis":"D"},{"product_id":"20150326225247071","ans":"本题考查指令系统基础知识。若采用流水方式，则在分析和执行第1条指令时，就可以读取第2条指令，当第1条指令执行完成，第2条指令进行分析和执行，而第3条指令可进行读取操作。流水线执行时间计算公式：一条指令所需时间+（指令条数-1）*时间最长的指令的一段，即:（4+2+3）+（600-1）*4=9△+599×4=2405","analysis":"B"},{"product_id":"20150326225841501","ans":"本题考查计算机系统中存储器知识。地址400000000H到4000FFFFFH共FFFFFH（即220）个以字节为单位的编址单元，而256K×8bit的存储器芯片可提供218个以字节为单位的编址单元，因此需要4片（220/218）这种芯片来构成上述内存区域。","analysis":"A"},{"product_id":"20150326230059656","ans":"本题考查木马程序的基础知识。木马程序一般分为服务器端（Server）和客户端（Client），服务器端是攻击者传到目标机器上的部分，用来在目标机上监听等待客户端连接过来。客户端是用来控制目标机器的部分，放在攻击者的机器上。木马（Trojans）程序常被伪装成工具程序或游戏，一旦用户打开了带有特洛伊木马程序的邮件附件或从网上直接下载，或执行了这些程序之后，当你连接到互联网上时，这个程序就会通知黑客用户的P地址及被预先设定的端口。黑客在收到这些资料后，再利用这个潜伏其中的程序，就可以恣意修改用户的计算机设定、复制任何文件、窥视用户整个硬盘内的资料等，从而达到控制用户的计算机的目的。现在有许多这样的程序，国外的此类软件有BackOffice、Netbus等，国内的此类软件有Netspy、YAI、SubSeven、冰河、“广外女生”等。Sniffer是一种基于被动侦听原理的网络分析软件。使用这种软件，可以监视网络的状态、数据流动情况以及网络上传输的信息，其不属于木马程序。","analysis":"B"},{"product_id":"20150326230407598","ans":"本题考查防火墙的基础知识。防火墙的性能及特点主要由以下两方面所决定。①工作层次。这是决定防火墙效率及安全的主要因素。一般来说，工作层次越低，则工作效率越高，但安全性就低了；反之，工作层次越高，工作效率越低，则安全性越高。②防火墙采用的机制。如果采用代理机制，则防火墙具有内部信息隐藏的特点，相对而言，安全性高，效率低；如果采用过滤机制，则效率高，安全性却降低了。","analysis":"D"},{"product_id":"20150326235446320","ans":"本题考查防火墙的基础知识。显然，包过滤防火墙采用包过滤技术对应用和用户是透明的。","analysis":"B"},{"product_id":"20150327000253998","ans":"本题考查知识产权基本知识。绘画、书法、雕塑等美术作品的原件可以买卖、赠与。但获得一件美术作品并不意味着获得该作品的著作权。我国著作权法规定：“美术等作品原件所有权的转移，不视为作品著作权的转移，但美术作品原件的展览权由原件所有人享有。”这就是说作品物转移的事实并不引起作品著作权的转移，受让人只是取得物的所有权和作品原件的展览权，作品的著作权仍然由作者享有。","analysis":"D"},{"product_id":"20150330020336343","ans":"《中华人民共和国商标法》第二十九条两个或者两个以上的商标注册申请人，在同一种商品或者类似商品上，以相同或者近似的商标申请注册的，初步审定并公告申请在先的商标；同一天申请的，初步审定并公告使用在先的商标，驳回其他人的申请，不予公告。《中华人民共和国商标法实施条例》第十九条两个或者两个以上的申请人，在同一种商品或者类似商品上，分别以相同或者近似的商标在同一天申请注册的，各申请人应当自收到商标局通知之日起30日内提交其申请注册前在先使用该商标的证据。同日使用或者均未使用的，各申请人可以自收到商标局通知之日起30日内自行协商，并将书面协议报送商标局；不愿协商或者协商不成的，商标局通知各申请人以抽签的方式确定一个申请人，驳回其他人的注册申请。商标局已经通知但申请人未参加抽签的，视为放弃申请，商标局应当书面通知未参加抽签的申请人。所以，同日申请选择先使用的，即“用有”。","analysis":"C"},{"product_id":"20150330020424281","ans":"本题考查多媒体基础知识。国际电话电报咨询委员会（CCITT）将媒体分为感觉媒体、表示媒体、表现媒体、存储媒体和传输媒体5类。感觉媒体指直接作用于人的感觉器官.，使人严生内接感觉的媒体，如引起听觉反应的声音、引起视觉反应的图像等；传输媒体指传输表示媒体的物理介质，如电缆、光缆。电磁波等；表示媒体指传输感觉媒体的中介媒体，即用于数据交换的编码，如图像编码、文本编码和声音编码等；表现媒体是指进行信息输入和输出的媒体，如键盘、鼠标、话筒，以及显示器、打印机、喇叭等；存储媒体指用于存储表示媒体的物理介质，如硬盘、光盘等。","analysis":"B"},{"product_id":"20150330020548437","ans":"本题考查多媒体基础知识。国际电话电报咨询委员会（CCITT）将媒体分为感觉媒体、表示媒体、表现媒体、存储媒体和传输媒体5类。感觉媒体指直接作用于人的感觉器官.，使人严生内接感觉的媒体，如引起听觉反应的声音、引起视觉反应的图像等；传输媒体指传输表示媒体的物理介质，如电缆、光缆。电磁波等；表示媒体指传输感觉媒体的中介媒体，即用于数据交换的编码，如图像编码、文本编码和声音编码等；表现媒体是指进行信息输入和输出的媒体，如键盘、鼠标、话筒，以及显示器、打印机、喇叭等；存储媒体指用于存储表示媒体的物理介质，如硬盘、光盘等。","analysis":"D"},{"product_id":"20150330020846218","ans":"本题考查多媒体基础知识。显示分辨率是指显示器上能够显示出的像素点数目，即显示器在横向和纵向上能够显示出的像素点数目。水平分辨率表明显示器水平方向（横向）上显示出的像素点数目，垂直分辨率表明显示器垂直方向（纵向）上显示出的像素点数目。例如，显示分辨率为1024X768则表明显示器水平方向上显示1024个像素点，垂直方向上显示768个像素点，整个显示屏就含有796432个像素点。屏幕能够显示的像素越多，说明显示设备的分辨率越高，显示的图像质量越高。显示深度是指显示器上显示每个像素点颜色的二进制位数。","analysis":"B"},{"product_id":"20150330021200734","ans":"本题考查结构化开发方法的结构化设计。结构化设计方法是一种面向数据流的设计方法，与结构化分析方法衔接。在需求分析阶段，结构化分析方法产生了数据流图，而在设计阶段，结构化设计方法将数据流映射为软件系统的模块结构。数据流图中从系统的输入数据流到系统的输出数据流的一连串变换形成了一条信息流。其中的信息流一般情况下包括变换流型和事物流型不同类型的数据流到程序模块的映射方法不同。-一个软件系统往往不仅仅有一种数据流类型。","analysis":"D"},{"product_id":"20150330023823921","ans":"本题考査结构化开发方法的基础知识。通常，可以按照在软件系统中的功能将模块分为四种类型。①传入模块:取得数据或输入数据，经过某些处理，再将其传送给其他模块.②传出模块：输出数据，在输出之前可能进行某些处理，数据可能被输出到系统的外部，或者会输出到其他模块进行进一步处理。③变换模块：从上级调用模块得到数据，进行特定的处理，转换成其他形式，在将加工结果返回给调用模块。④协调模块一般不对数据进行加工，主要是通过调用、协调和管理其他模块来完成特定的功能。","analysis":"C"},{"product_id":"20150330024259343","ans":"本题考査软件项目管理的基础知识。Putnam和COCOMO都是软件成本估算模型。Putnam模型是一种动态多变量模型，假设在软件开发的整个生存期中工作量有特定的分布。结构性成本模型COCOMO模型分为基本COCOMO模型、中级COCOMO模型和详细COCOMO。基本COCOMO模型是一个静态单变量模型，对整个软件系统进行估算；中级COCOMO模型是一个静态多变量模型，将软件系统模型分为系统和部件两个层次，系统由部件构成；详细COCOMO模型将软件系统模型分为系统、子系统和模块三个层次，除了包括中级模型所考虑的因素外，还考虑了在需求分析、软件设计等每一步的成本驱动属性的影响。","analysis":"B"},{"product_id":"20150330024347312","ans":"本题考查软件项目管理的基础知识。Gantt图是一种简单的水平条形图，以日历为基准描述项目任务。水平轴表示日历时间线，如日、周和月等，每个条形表示一个任务，任务名称垂直的列在左边的列中，图中水平条的起点和终点对应水平轴上的时间，分别表示该任务的开始时间和结束时间，水平条的长度表示完成该任务所持续的时间。当日历中同一时段存在多个水平条时，表示任务之间的并发。Gantt图能清晰地描述每个任务从何时开始，到何时结束，任务的进展情况以及各个任务之间的并行性。但它不能清晰地反映出各任务之间的依赖关系，难以确定整个项目的关键所在，也不能反映计划中有潜力的部分。","analysis":"D"},{"product_id":"20150330024442468","ans":"本题考査软件项目管理的基础知识。项目经理需要尽早预测项目中的风险，这样就可以制订有效的风险管理计划以减少风险的影响，所以，早期的风险识别是非常重要的，一般来说，影响软件项目的风险主要有三种类别：项目风险涉及到各种形式的预算、进度、人员、资源以及和客户相关的问题；技术风险涉及到潜在的设计、实现、对接、测试即维护问题；业务风险组括建立一个无人想要的优秀产品的风险、失去预算或人员承诺的风险等：商业风险包括如市场风险、策略风险、管理风险和预算风险等.","analysis":"A"},{"product_id":"20150330024613968","ans":"本题考查程序语言基础知识。网页文件本身是一种文本文件，通过在其中添加标记符，可以告诉浏览器如何显示其中的内容。HTML是超文本标记语言，超文本是指页面内可以包含图片、链接，甚至音乐、程序等非文字元素。PHP(超文本预处理器）是一种通用开源脚本语言，它将程序嵌入到HTML文档中去执行，从而产生动态网页。","analysis":"C"},{"product_id":"20150330024919984","ans":"本题考査程序语言基础知识。值调用和引用调用是实现函数调用时传递参数的两种基本方式。在值调用方式下，是将实参的值传给形参，在引用调用方式下，是将实参的地址传递给形参。","analysis":"B"},{"product_id":"20150330025052406","ans":"本题考查程序语言基础知识。编译是实现高级程序设计语言的一种方式，编译过程可分为词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成等阶段，还需要进行出错处理和符号表管理。符号表的作用是记录源程序中各个符号的必要信息，以辅助语义的正确性检查和代码生成，在编译过程中需要对符号表进行快速有效地査找、插入、修改和删除等操作符号表的建立可以始于词法分析阶段，也可以放到语法分析和语义分析阶段，但符号表的使用有时会延续到目标代码的运行阶段。","analysis":"A"},{"product_id":"20150330032202515","ans":"操作系统设计的目的是管理计算机系统中的软硬件资源，为用户与计算机之间提供方便的接口。","analysis":"D"},{"product_id":"20150330032232468","ans":"本题考查对操作系统进程管理信号量方面的基础知识。选项A是错误的，因为每个进程都需要1个资源R，系统为3个进程各分配1个，系统中资源R的可用数为3,3个进程都能得到所需资源，故不发生死锁；选项B是错误的，因为，每个进程都需要2个资源R，系统为3个进程各分配2个，系统中资源R的可用数为6,3个进程都能得到所需资源，故也不发生死锁；选项C是正确的，因为，每个进程都需要3个资源R，系统为3个进程各分配2个，系统中资源R的可用数为6,3个进程再申请1个资源R得不到满足，故发生死锁；选项D显然是错误的。","analysis":"C"},{"product_id":"20150330032314890","ans":"早在1965年荷兰学者Dijkstra提出信号量机制是一种有效的进程同步与互斥工具。目前，信号量机制有了很大的发展，主要有整型信号量、记录型信号量和信号量集机制。对于整型信号量，可以根据控制对象的不同被陚予不同的值。通常将信号量分为公用信号暈和私用信号量两类。其中，公用信号量用于实现进程间的互斥，初值为1或资源的数目；私用信号量用于实现进程间的同步，初值为0或某个正整数。信号量S的物理意义是：S≥0表示某资源的可用数，若S<0,则其绝对值表示阻塞队列中等待该资源的进程数。本题由于信号量S的当前值为-2,则意味着系统中资源R的可用个数M=0,等待资源R的进程数N=2。","analysis":"D"},{"product_id":"20150330032442890","ans":"根据题意页面大小为4K，逻辑地址为十六进制1D16H其页号为1，页内地址为D16H,查页表后可知物理块号为3,该地址经过变换后，其物理地址应为物理块号3拼上页内地址D16H，即十六进制3D16H。","analysis":"B"},{"product_id":"20150330032612015","ans":"本题考查对操作系统文件管理方面的基础知识。路径名是指操作系统查找文件所经过的目录名以及目录名之间的分隔符构成的。通常，操作系统中全文件名是指路径名+文件名。按查找文件的起点不同可以将路径分为：绝对路径和相对路径。从根目录开始的路径称为绝对路径；从用户当前工作目录开始的路径称为相对路径，相对路径是随着当前工作目录的变化而改变的。","analysis":"D"},{"product_id":"20150330032646687","ans":"本题考查对操作系统文件管理方面的基础知识。路径名是指操作系统查找文件所经过的目录名以及目录名之间的分隔符构成的。通常，操作系统中全文件名是指路径名+文件名。按查找文件的起点不同可以将路径分为：绝对路径和相对路径。从根目录开始的路径称为绝对路径；从用户当前工作目录开始的路径称为相对路径，相对路径是随着当前工作目录的变化而改变的。","analysis":"B"},{"product_id":"20150330032747390","ans":"本题考查软件过程模型的基础知识。UP(统一过程）模型是一种以用例和风险为驱动、以架构为中心、迭代并且增量的开发过程，由UML方法和工具支持。UP过程定义了五个阶段，起始阶段、精化阶段、构建阶段、移交阶段和产生阶段。开发过程中有多次迭代，每次迭代都包含计划、分析、设计、构造、集成和测试，以及内部和外部发布。每个迭代有五个核心工作流，捕获系统应该做什么的需求工作流、精化和结构化需求的分析工作流、在系统结构内实现需求的设计工作流、构造软件的实现工作流和验证是否如期望那样工作的测试工作流。","analysis":"B"},{"product_id":"20150330032821687","ans":"本题考查软件过程模型的基础知识。瀑布模型将软件生存周期各个活动规定为线性顺序连接的若干阶段的模型，规定了由前至后，相互衔接的固定次序，如同瀑布流水，逐级下落。这种方法是一种理想的开发模式，缺乏灵活性，特别是无法解决软件需求不明确或不准确的问题。原型模型从初始的原型逐步演化成最终软件产品，特别适用于对软件需求缺乏准确认识的情况。螺旋将瀑布模型与快速原型模型结合起来，并且加入两种模型均忽略了的风险分析，适用于复杂的大型软件。增量是开发把软件产品作为一系列的增量构件来设计、编码、集成和测试，可以在增最开发过程中逐步理解需求。","analysis":"A"},{"product_id":"20150330032905218","ans":"本题考査软件容错技术的基础知识。容错技术是对某些无法避开的差错，使其影响减至最小的技术。通常冗余技术分为四类，结构冗余、信息冗余、时间冗余和冗余附加技术。其中冗余附加技术是指为实现其他类型冗余技术所需要的资源和技术，包括程序指令、数据、存放和调动它们的空间和通道等。在屏蔽硬件错误的容错技术中，冗余附加技术包括：关键程序和数据的冗余存储及调用：检测、表决、切换、重构、纠错和复算的实现。在屏蔽软件错误的容错技术中，冗余附加技术包括：冗余备份程序的存储及调用；实现错误检测和错误恢复的程序；实现容错软件所需的固化程序。","analysis":"A"},{"product_id":"20150330033016171","ans":"本题考查软件质量的基础知识。McCabe度量法是一种基于程序控制流的复杂性度量方法，环路复杂性为V(G)=m-n+2，图中m=8，n=6，V(G)=8-6+2=4。","analysis":"C"},{"product_id":"20150330033057734","ans":"本题考查软件文档的基础知识。软件文档不仅仅描述和规定了软件的使用范围及相关的操作命令，还包括硬件采购和网络设计中形成的文档。文档是软件产品的重要组成部分。软件文档的编制在软件开发工作中占有突出的地位和相当大的工作量，对发挥软件产品的效益具有重要的意义。","analysis":"A"},{"product_id":"20150330033140484","ans":"本题考查软件维护的基础知识。软件维护一般包括四种类型：正确性维护是指改正在系统开发阶段已发生而系统测试阶段尚未发现的错误；适应性维护是指使应用软件适应新型技术变化和管理需求变化而进行的修改；完善性维护是指为扩充功能和改善性能而进行的修改，主要是指对己有的软件系统增加一些在系统分析和设计阶段中没有规定的功能与性能特征；预防性维护是指为了改进应用软件的可靠性和可维护性，为了适应未来的软硬件环境的变化，主动增加预防性的功能，以使应用系统适应各类变化而不被淘汰。","analysis":"C"},{"product_id":"20150330033328765","ans":"本题考查软件测试的基础知识。测试用例①（x=0，y=3)在第一个判断结果为Y，执行语句A;测试用例②（x=1，y=2)在第一个判断结果为N，第二个判断结果为N,执行语句B;测试用例③(x=-1,y=2)和④（x=3,y=1）在第一个判断结果为N,第二个判断结果为Y。至少需要测试用例①②才能完成语句覆盖，至少需要测试用例①②③或①②④才能完成路径覆盖。","analysis":"A"},{"product_id":"20150330033402171","ans":"本题考查软件测试的基础知识。测试用例①（x=0，y=3)在第一个判断结果为Y，执行语句A;测试用例②（x=1，y=2)在第一个判断结果为N，第二个判断结果为N,执行语句B;测试用例③(x=-1,y=2)和④（x=3,y=1）在第一个判断结果为N,第二个判断结果为Y。至少需要测试用例①②才能完成语句覆盖，至少需要测试用例①②③或①②④才能完成路径覆盖。","analysis":"D"},{"product_id":"20150330033440375","ans":"本题考查面向对象的基本知识。泛化是一个类与它的一个或多个细化类之间的关系，表达一般与特殊的关系。关联是类与类之间的一种结构关系。聚集是一种关系，其中一个较大的整体类包含一个或多个较小的部分类；相反地，一个较小的部分类是一个较大的整体类的一部分。组合是一种聚合关系，其中整体负责其部分的创建和销毁，如果整体不存在了，部分也将不存在。","analysis":"A"},{"product_id":"20150330033537312","ans":"本题考查面向对象的基本知识。绑定是一个把过程调用和响应调用所需要执行的代码加以结合的过程。在一般的程序设计语言中，绑定是在编译时进行的，叫做静态绑定。动态绑定则是在运行时进行的，因此，一个给定的过程调用和代码的结合直到调用发生时才进行。","analysis":"C"},{"product_id":"20150330033619656","ans":"本题考查面向对象的基本知识。面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类（父类）和子类之间共享数据和方法的机制。父类定义公共的属性和操作，一个父类可以有多个子类，即多个特例。子类可以继承其父类或祖先类中的属性和操作作为自己的内容而不必自己定义，也可以覆盖这些操作，并加入新的内容。绑定是一个把过程调用和响应调用所需要执行的代码加以结合的过程。绑定有在编译时进行的，即静态绑定，有在运行时进行的，即动态绑定。不同的对象收到同一消息可以进行不同的响应，产生完全不同的结果，用户可以发送一个通用的消息，而实现细节则由接收对象自行决定，使得同一个消息就可以调用不同的方法，即一个对象具有多种形态，称为多态。不同类的对象通过消息相互通信。","analysis":"D"},{"product_id":"20150330033659375","ans":"本题考查面向对象的基本知识。面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类（父类）和子类之间共享数据和方法的机制。父类定义公共的属性和操作，一个父类可以有多个子类，即多个特例。子类可以继承其父类或祖先类中的属性和操作作为自己的内容而不必自己定义，也可以覆盖这些操作，并加入新的内容。绑定是一个把过程调用和响应调用所需要执行的代码加以结合的过程。绑定有在编译时进行的，即静态绑定，有在运行时进行的，即动态绑定。不同的对象收到同一消息可以进行不同的响应，产生完全不同的结果，用户可以发送一个通用的消息，而实现细节则由接收对象自行决定，使得同一个消息就可以调用不同的方法，即一个对象具有多种形态，称为多态。不同类的对象通过消息相互通信。","analysis":"B"},{"product_id":"20150330033749781","ans":"本题考查采用统一建模语言（UML)的基本知识。采用UML对系统进行建模时，首先确定系统边界，识别出主要用例，建模用例图。然后对用例图中的复杂用例采用活动图进一步进行建模，以对用例中执行过程中对象如何通过消息相互交互进行建模。系统的领域模型采用类图进行建模，交互关系采用顺序图、交互概览图等进行建模。","analysis":"D"},{"product_id":"20150330033902187","ans":"本题考查采用统一建模语言（UML)的基本知识。UML序列图（SequenceDiagram)以二维图的形式显示对象之间交互，纵轴自上而下表示时间，横轴表示要交互的对象，主要体现对象间消息传递的时间顺序，强调参与交互的对象及其间消息交互的时序。序列图中包括的建模元素主要有：活动者（Actor)、对象(Object)、生命线（Lifeline)、控制焦点(Focusofcontrol)和消息(Message)等。其中对象名标有下划线；生命线表示为虚线，沿竖线向下延伸；消息在序列图中标记为箭头；控制焦点由薄矩形表示。消息是从一个对象的生命线到另一个对象生命线的箭头，用从上而下的时间顺序来安排。一般分为同步消息，异步消息和返回消息。本题图中balance为返回消息，其他为同步消息。src和tgt均为Account对象，所以Account应该实现checkBalance()、withdraw()和deposit()方法，FundsTransactionManager应该实现start()方法。","analysis":"B"},{"product_id":"20150330033952328","ans":"本题考查采用统一建模语言（UML)的基本知识。UML序列图（SequenceDiagram)以二维图的形式显示对象之间交互，纵轴自上而下表示时间，横轴表示要交互的对象，主要体现对象间消息传递的时间顺序，强调参与交互的对象及其间消息交互的时序。序列图中包括的建模元素主要有：活动者（Actor)、对象(Object)、生命线（Lifeline)、控制焦点(Focusofcontrol)和消息(Message)等。其中对象名标有下划线；生命线表示为虚线，沿竖线向下延伸；消息在序列图中标记为箭头；控制焦点由薄矩形表示。消息是从一个对象的生命线到另一个对象生命线的箭头，用从上而下的时间顺序来安排。一般分为同步消息，异步消息和返回消息。本题图中balance为返回消息，其他为同步消息。src和tgt均为Account对象，所以Account应该实现checkBalance()、withdraw()和deposit()方法，FundsTransactionManager应该实现start()方法。","analysis":"D"},{"product_id":"20150330034238781","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图和适用场景。适配器（Adapter)模式将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适用于想使用一个已经存在的类，而其接口不符合要求的情况。责任链（ChainofResponsibility)模式使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系，将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。适用于有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定的情况。桥接（Bridge)模式将抽象部分与其实现部分分离，使它们都可以独立地变化。适用于不希望在抽象和它的实现部分之间有一个固定的绑定关系的情况。外观（Facade)模式为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。适用于需要为一个复杂子系统提供一个简单接口的情况。","analysis":"C"},{"product_id":"20150330034342671","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图和适用场景。适配器（Adapter)模式将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适用于想使用一个已经存在的类，而其接口不符合要求的情况。责任链（ChainofResponsibility)模式使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系，将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。适用于有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定的情况。桥接（Bridge)模式将抽象部分与其实现部分分离，使它们都可以独立地变化。适用于不希望在抽象和它的实现部分之间有一个固定的绑定关系的情况。外观（Facade)模式为子系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。适用于需要为一个复杂子系统提供一个简单接口的情况。","analysis":"D"},{"product_id":"20150330034422171","ans":"本题考査设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。适配器（Adapter)模式将一个类或对象的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。既是类结构模式，又是对象结构模式。桥接（Bridge)模式将抽象部分与其实现部分分离，使它们都可以独立地变化。适配器模式和桥接模式具有类似的特征，都给另一个对象提供了一定程度上的间接性，都涉及到自身以外的一个接口向这个对象转发请求。组合（Composite)模式将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。装饰器（Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。","analysis":"B"},{"product_id":"20150330034454437","ans":"本题考査设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。适配器（Adapter)模式将一个类或对象的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。既是类结构模式，又是对象结构模式。桥接（Bridge)模式将抽象部分与其实现部分分离，使它们都可以独立地变化。适配器模式和桥接模式具有类似的特征，都给另一个对象提供了一定程度上的间接性，都涉及到自身以外的一个接口向这个对象转发请求。组合（Composite)模式将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。装饰器（Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。","analysis":"A"},{"product_id":"20150330034544484","ans":"本题考查程序语言基础知识。用某种高级语言或汇编语言编写的程序称为源程序，源程序不能直接在计算机上执行。如果源程序是用汇编语言编写的，则需要一个称为汇编程序的翻译程序将其翻泽成目标程序后才能执行。如果源程序是用某种高级语言编写的，则需要对应的解释程序或编译程序对其进行翻译，然后在机器上运行。解释程序也称为解释器，它可以直接解释执行源程序，或者将源程序翻译成某种中间表示形式后再加以执行；而编译程序（编译器）则首先将源程序翻译成目标语言程序，然后在计算机上运行目标程序。这两种语言处理程序的根本区别是：在编译方式下，机器上运行的是与源程序等价的目标程序，源程序和编译程序都不再参与目标程序的执行过程；而在解释方式下，解释程序和源程序（或其某种等价表示）要参与到程序的运行过程中，运行程序的控制权在解释程序。解释器翻译源程序时不产生独立的目标程序，而编译器则需将源程序翻译成独立的目标程序。","analysis":"A"},{"product_id":"20150330034635515","ans":"本题考査程序语言基础知识。乔姆斯基文法体系共分为短语结构文法、上下文有关文法、上下文有关文法和正规文法4类。短语结构文法或无限制文法也称为0型文法，其描述能力相当于图灵机，可使用任何的语法描述形式。上下文有关文法也称为1型文法，其描述能力相当于线性有界自动机，语法形式为：xSy->xAy。也就是说，S(非终结符号）推导出A(非终结符号与终结符号的混合串）是和上下文x，y相关的，即S只有在上下文x，y的环境中才能推导出A。上下文无关文法也称为2型文法，其描述能力相当于下推自动机，语法形式如下：S->A,即S可以无条件的推导出A，与上下文无关。正规文法也称为3型文法，等价于正则表达式，其描述能力相当于有穷自动机，语法形式如下：S->Aa，其中最后一个a必须为非终结符。大多数程序语言的语法现象可用上下文无关文法描述。","analysis":"B"},{"product_id":"20150330034728468","ans":"本题考查程序语言基础知识。对程序中含有变量的表达式求值发生在运行时，若除数为0进行除运算在运行时报告异常。","analysis":"D"},{"product_id":"20150330034814500","ans":"本题考查关系数据库事务处理方面的基础知识。为了保证数据库中数据的安全可靠和正确有效，数据库管理系统（DBMS)提供数据库恢复、并发控制、数据完整性保护与数据安全性保护等功能。数据库在运行过程中由于软硬件故障可能造成数据被破坏，数据库恢复就是在尽可能短的时间内，把数据库恢复到故障发生前的状态。具体的实现方法有多种，如：定期将数据库作备份；在进行事务处理时，将数据更新（插入、删除、修改）的全部有关内容写入日志文件；当系统正常运行时，按一定的时间间隔，设立检查点文件，把内存缓冲区内容还未写入到磁盘中去的有关状态记录到检查点文件中；当发生故障时，根据现场数据内容、日志文件的故障前映像和检查点文件来恢复系统的状态。","analysis":"C"},{"product_id":"20150330034900078","ans":"本题考查关系数据库事务处理方面的基础知识。为了保证数据库中数据的安全可靠和正确有效，数据库管理系统（DBMS)提供数据库恢复、并发控制、数据完整性保护与数据安全性保护等功能。数据库在运行过程中由于软硬件故障可能造成数据被破坏，数据库恢复就是在尽可能短的时间内，把数据库恢复到故障发生前的状态。具体的实现方法有多种，如：定期将数据库作备份；在进行事务处理时，将数据更新（插入、删除、修改）的全部有关内容写入日志文件；当系统正常运行时，按一定的时间间隔，设立检查点文件，把内存缓冲区内容还未写入到磁盘中去的有关状态记录到检查点文件中；当发生故障时，根据现场数据内容、日志文件的故障前映像和检查点文件来恢复系统的状态。","analysis":"B"},{"product_id":"20150330034951750","ans":"本题考査数据库事务处理方面的知识。事务具有原子性（atomicity)、一致性（consistency)、隔离性（isolation)和持久性(durability)。这4个特性也称事务的ACID性质。其中，事务的隔离性是指事务相互隔离，即当多个事务并发执行时，任一事务的更新操作直到其成功提交的整个过程，对其他事务都是不可见的。","analysis":"C"},{"product_id":"20150330035311625","ans":"SQL提供可为关系和属性重新命名的机制，这是通过使用具有“old-nameasnew-name”形式的as子句来实现的。As子句即可出现在select子句，也可出现在from子句中。","analysis":"A"},{"product_id":"20150330035352406","ans":"因为本题是按部门进行分组，ORDERBY子句的含义是对其后跟着的属性进行排序，故选项A和B均是错误的；GROUPBY子句就是对元组进行分组，保留字GROUPBY后面跟着一个分组属性列表。根据题意，要査询部门员工的平均工资，选项C显然是错误的。","analysis":"D"},{"product_id":"20150330035429515","ans":"因为WHERE语句是对表进行条件限定，所以选项A和B均是错误的。在GROUPBY子句后面跟一个HAVING子句可以对元组在分组前按照某种方式加上限制。COUNT(*)是某个关系中所有元组数目之和，但COUNT(A)却是A属性非空的元组个数之和。COUNT(DISTINCT(部门))的含义是对部门属性值相同的只统计1次。HAVINGCOUNT(DISTINCT(部门))语句分类统计的结果均为1，故选项D是错误的；HAVINGCOUNT(姓名）语句是分类统计各部门员工，故正确的答案为选项C。","analysis":"C"},{"product_id":"20150330035522093","ans":"本题考查数据结构基础知识。线性表的元素在逻辑上是一个线性序列，若最常用的操作是访问任意指定序号的元素，而且其插入和删除元素的操作均在表尾进行，不需要移动其他元素，则其存储结构采用顺序表最为合适。","analysis":"A"},{"product_id":"20150330035701734","ans":"本题考查数据结构基础知识。题图所示的二叉树有6个结点，根结点的编号为1，其左孩子和右孩子分别为2和3,按照右孩子链继续，3号结点的右孩子编号为7,7号结点的右孩子编号为15,因此该二叉树进行顺序存储时数组大小至少为15。采用三叉链表存储时，每个结点有3个指针域，共18个指针域，其中，12个孩子指针用了5个，剩余7个为空指针，6个父结点指针用了5个，剩余1个为空（即根结点无双亲)，因此，结点中的指针域有8个为空。","analysis":"D"},{"product_id":"20150330035730953","ans":"本题考查数据结构基础知识。题图所示的二叉树有6个结点，根结点的编号为1，其左孩子和右孩子分别为2和3,按照右孩子链继续，3号结点的右孩子编号为7,7号结点的右孩子编号为15,因此该二叉树进行顺序存储时数组大小至少为15。采用三叉链表存储时，每个结点有3个指针域，共18个指针域，其中，12个孩子指针用了5个，剩余7个为空指针，6个父结点指针用了5个，剩余1个为空（即根结点无双亲)，因此，结点中的指针域有8个为空。","analysis":"B"},{"product_id":"20150330035928468","ans":"本题考查数据结构基础知识。按照题目所述，当e1、e2从A端口按次序全部进入队列，e3、e4从B端口按次序全部进入队列后，双端队列的状态如下图所示。在这种情形下，e1和e3不可能先出队列，所以排除选项A和C。若e2先出队列，则剩下的3个元素中，只能是e1或e4出队列，所以e2、e3、e4、e1是不可能的出队序列，这样就排除了选项B。选项D的e4、e3、e2、e1是可能的出队序列。","analysis":"D"},{"product_id":"20150330040025031","ans":"本题考查数据结构基础知识。二分查找是一种高效的查找方法，其思路是待查找元素先与序列中间位置上的元素比较，若相等，则查找成功：若待查找元素较大，则接下来到序列的后半区进行二分查找，否则到序列的前半区进行二分查找。显然，要快速定位序列的中间位置，査找表必须进行顺序存储；其次，从二分查找过程可知，序列必须有序排列才行。","analysis":"B"},{"product_id":"20150330040243921","ans":"本题考查算法分析的基础知识。直接展开递归式T(n)=T(n-l)+n=T(n-2)+(n-1)+n=T(n-3)+(n-2)+(n-1)+n=1+2+...+n=n(n-1)/2=得到该算法的时间复杂度为，当问题的规模增加了16倍时，运行时间增加了162=256倍。","analysis":"C"},{"product_id":"20150330040328578","ans":"本题考查算法分析的基础知识。直接展开递归式T(n)=T(n-l)+n=T(n-2)+(n-1)+n=T(n-3)+(n-2)+(n-1)+n=1+2+...+n=n(n-1)/2=得到该算法的时间复杂度为，当问题的规模增加了16倍时，运行时间增加了162=256倍。","analysis":"C"},{"product_id":"20150330040432265","ans":"本题考查算法设计与分析的基础知识。Prim算法从扩展顶点开始，每次总是“贪心的”选择与当前顶点集合中距离域短的顶点，而Kruscal算法从扩展边开始，每次总是“贪心的”选择剩余的边中最小权重的边，因此两个算法都是基于贪心策略进行的。Prim算法的时间复杂度为0(n2)，其中n为图的顶点数，该算法的计算时间与图中的边数无关，因此该算法适合于求边稠密的图的最小生成树：Kruscal算法的时间复杂度为O(mlgm)，其中m为图的边数，该算法的计算时间与图中的顶点数无关，因此该算法适合于求边稀疏的图的最小生成树。当图稠密时，用Prim算法效率更高。但若事先没有关于图的拓扑特征信息时，无法判断两者的优劣。由于一个图的最小生成树可能有多棵，因此不能保证用这两种算法得到的是同一棵最小生成树。","analysis":"B"},{"product_id":"20150330040545890","ans":"本题考查算法设计与分析的基础知识。Prim算法从扩展顶点开始，每次总是“贪心的”选择与当前顶点集合中距离域短的顶点，而Kruscal算法从扩展边开始，每次总是“贪心的”选择剩余的边中最小权重的边，因此两个算法都是基于贪心策略进行的。Prim算法的时间复杂度为0(n2)，其中n为图的顶点数，该算法的计算时间与图中的边数无关，因此该算法适合于求边稠密的图的最小生成树：Kruscal算法的时间复杂度为O(mlgm)，其中m为图的边数，该算法的计算时间与图中的顶点数无关，因此该算法适合于求边稀疏的图的最小生成树。当图稠密时，用Prim算法效率更高。但若事先没有关于图的拓扑特征信息时，无法判断两者的优劣。由于一个图的最小生成树可能有多棵，因此不能保证用这两种算法得到的是同一棵最小生成树。","analysis":"A"},{"product_id":"20150330040636203","ans":"地址块155.32.80.192/26包含了6位主机地址，所以包含的主机地址为62个。网络地址155.32.80.192/26的二进制为:10011011001000000101000011000000地址155.32.80.202的二进制为：10011011001000000101000011001010地址155.32.80.191的二进制为：10011011001000000101000010111111地址155.32.80.253的二进制为：10011011001000000101000011111101地址155.32.80.195的二进制为：10011011001000000101000011000011可以看出，地址155.32.80.191不属于网络155.32.80.192/26。","analysis":"C"},{"product_id":"20150330040727765","ans":"地址块155.32.80.192/26包含了6位主机地址，所以包含的主机地址为62个。网络地址155.32.80.192/26的二进制为:10011011001000000101000011000000地址155.32.80.202的二进制为：10011011001000000101000011001010地址155.32.80.191的二进制为：10011011001000000101000010111111地址155.32.80.253的二进制为：10011011001000000101000011111101地址155.32.80.195的二进制为：10011011001000000101000011000011可以看出，地址155.32.80.191不属于网络155.32.80.192/26。","analysis":"D"},{"product_id":"20150330040919875","ans":"如果采用动态地址分配方案，本地计算机应设置为“自动获得IP地址”。","analysis":"A"},{"product_id":"20150330041022531","ans":"本题主要考查网络故障判断的相关知识。如果本地的DNS服务器工作不正常或者本地DNS服务器网络连接中断都有可能导致该计算机的DNS无法解析域名，而如果直接将该计算机的DNS服务器设置错误也会导致DNS无法解析域名，从而出现使用域名不能访问该网站，但是使用该网站的IP地址可以访问该网站。但是该计算机与DNS服务器不在同一子网不会导致DNS无法解析域名的现象发生，通常情况下大型网络里面的上网计算机与DNS服务器本身就不在一个子网，只要路由可达DNS都可以正常工作。","analysis":"C"},{"product_id":"20150330041119312","ans":"1985年，ITU提出了对第三代移动通信标准的需求，1996年正式命名为IMT-2000(InternationalMobileTelecommunications-2000),其中的2000有3层含义：使用的频段在2000MHz附近。通信速率约为2000kb/s(即2Mb/s)。预期在2000年推广商用。1999年ITU批准了五个IMT-2000的无线电接口，这五个标准是：IMT-DS(DirectSpread)：即W-CDMA,属于频分双工模式，在日本和欧洲制定的UMTS系统中使用。IMT-MC(Multi-Carrier)：即CDMA-2000,属于频分双工模式，是第二代CDMA系统的继承者。IMT-TC(Time-Codc)：这一标准是中国提出的TD-SCDMA，属于时分双工模式。IMT-SC(SingleCarrier)：也称为EDGE,是一种2.75G技术。IMT-FT(FrequencyTime)：也称为DECT。2007年10月19日，ITU会议批准移动WiMAX作为第6个3G标准，称为IMT-2000OFDMATDDWMAN，即无线城域网技术。第三代数字蜂窝通信系统提供第二代蜂窝通信系统提供的所有业务类型，并支持移动多媒体业务。在高速车辆行驶时支持144kb/s的数据速率，步行和慢速移动环境下支持384kb/s的数据速率，室内静止环境下支持2Mb/s的高速数据传输，并保证可靠的服务质量。","analysis":"B"},{"product_id":"20150330041225796","ans":"本题考查对英语资料的阅读理解。本段英文简要介绍云计算相关概念。云计算是用来描述各种计算概念的短语，包括大量计算机通过网络相互连接以实现分布计算，意思是同时在很多互联的计算机上运行程序或应用的能力。云的架构分为基础设施层、平台层和应用层三层。基础设施层由虚拟计算、存储和网络资源构成。平台层用于一组软件资源重复使用的通用目的。应用层由一组所需的软件模块构成，即软件即服务（SaaS)。基础设施层作为构建平台层的基础。相反，平台层是应用层的基础，为SaaS应用实现应用层。","analysis":"A"},{"product_id":"20150330041302031","ans":"本题考查对英语资料的阅读理解。本段英文简要介绍云计算相关概念。云计算是用来描述各种计算概念的短语，包括大量计算机通过网络相互连接以实现分布计算，意思是同时在很多互联的计算机上运行程序或应用的能力。云的架构分为基础设施层、平台层和应用层三层。基础设施层由虚拟计算、存储和网络资源构成。平台层用于一组软件资源重复使用的通用目的。应用层由一组所需的软件模块构成，即软件即服务（SaaS)。基础设施层作为构建平台层的基础。相反，平台层是应用层的基础，为SaaS应用实现应用层。","analysis":"D"},{"product_id":"20150330041338187","ans":"本题考查对英语资料的阅读理解。本段英文简要介绍云计算相关概念。云计算是用来描述各种计算概念的短语，包括大量计算机通过网络相互连接以实现分布计算，意思是同时在很多互联的计算机上运行程序或应用的能力。云的架构分为基础设施层、平台层和应用层三层。基础设施层由虚拟计算、存储和网络资源构成。平台层用于一组软件资源重复使用的通用目的。应用层由一组所需的软件模块构成，即软件即服务（SaaS)。基础设施层作为构建平台层的基础。相反，平台层是应用层的基础，为SaaS应用实现应用层。","analysis":"A"},{"product_id":"20150330041419234","ans":"本题考查对英语资料的阅读理解。本段英文简要介绍云计算相关概念。云计算是用来描述各种计算概念的短语，包括大量计算机通过网络相互连接以实现分布计算，意思是同时在很多互联的计算机上运行程序或应用的能力。云的架构分为基础设施层、平台层和应用层三层。基础设施层由虚拟计算、存储和网络资源构成。平台层用于一组软件资源重复使用的通用目的。应用层由一组所需的软件模块构成，即软件即服务（SaaS)。基础设施层作为构建平台层的基础。相反，平台层是应用层的基础，为SaaS应用实现应用层。","analysis":"B"},{"product_id":"20150330041504859","ans":"本题考查对英语资料的阅读理解。本段英文简要介绍云计算相关概念。云计算是用来描述各种计算概念的短语，包括大量计算机通过网络相互连接以实现分布计算，意思是同时在很多互联的计算机上运行程序或应用的能力。云的架构分为基础设施层、平台层和应用层三层。基础设施层由虚拟计算、存储和网络资源构成。平台层用于一组软件资源重复使用的通用目的。应用层由一组所需的软件模块构成，即软件即服务（SaaS)。基础设施层作为构建平台层的基础。相反，平台层是应用层的基础，为SaaS应用实现应用层。","analysis":"C"}]},{"paperId":"91","field":"20132","question_list":[{"product_id":"20150314204459674","ans":"本题考查计算机系统基础知识。Cache的工作是建立在程序与数据访问的局部性原理上。经过对大量程序执行情况的结果分析：在一段较短的时间间隔内程序集中在某一较小的内存地址空间执行，这就是程序执行的局部性原理。同样，对数据的访问也存在局部性现象。为了提高系统处理速度才将主存部分存储空间中的内容复制到工作速度更快的Cache中，同样为了提高速度的原因，Cache系统都是由硬件实现的。","analysis":"A"},{"product_id":"20150314204613767","ans":"本题考查计算机系统基础知识。指令寄存器是CPU中的关键寄存器，其内容为正在执行的指令，显然其位数取决于指令字长。","analysis":"B"},{"product_id":"20150314204727986","ans":"本题考查计算机系统基础知识。当表示数据时并规定了位数后，其能表示的数值范围就确定了，在两个数进行相加运算的结果超出了该范围后，就发生了溢出。在二进制情况下，溢出时符号位将变反，即两个正数相加，结果的符号位是负数，或者两个负数相加，结果的符号位是正数。采用两个符号位时，溢出发生后两个符号位就不一致了，这两位进行异或的结果一定为1。","analysis":"D"},{"product_id":"20150314205023221","ans":"本题考查计算机系统基础知识。流水线的吞吐率指的是计算机中的流水线在特定的时间内可以处理的任务或输出数据的结果数量。流水线的吞吐率可以进一步分为最大吞吐率和实际吞吐率。该题目中要求解的是实际吞吐率，以流水方式执行8条指令的执行时间是28△t，因此吞吐率为8/28△t。","analysis":"C"},{"product_id":"20150314205115252","ans":"本题考查计算机系统基础知识。RISC(ReducedInstructionSetComputer,精简指令集计算机)的主要特点是重叠寄存器窗口技术；优化编译技术。RISC使用了大量的寄存器，如何合理分配寄存器、提高寄存器的使用效率及减少访存次数等，都应通过编译技术的优化来实现；超流水及超标量技术。为了进一步提高流水线速度而采用的技术；硬布线逻辑与微程序相结合在微程序技术中。","analysis":"A"},{"product_id":"20150314205307252","ans":"本题考查计算机系统基础知识。内存容量2GB=2*1024*1024*1024*8位，按字编址时，存储单元的个数为2*1024*1024*1024*8/32=512*1024*1024,即可寻址范围为512MB。","analysis":"C"},{"product_id":"20150314205457471","ans":"本试题考查网络安全相关知识。特洛伊木马是附着在应用程序中或者单独存在的一些恶意程序，它可以利用网络远程控制网络另一端的安装有服务端程序的主机，实现对被植入了木马程序的计算机的控制，或者窃取被植入了木马程序的计算机上的机密资料。拒绝服务攻击通过网络的内外部用户来发动攻击。内部用户可以通过长时间占用系统的内存、CPU处理时间使其他用户不能及时得到这些资源，而引起拒绝服务攻击；外部黑客也可以通过占用网络连接使其他用户得不到网络服务。SYNFlooding攻击以多个随机的源主机地址向目的路由器发送SYN包，在收到目的路由器的SYNACK后并不回应，于是目的路由器就为这些源主机建立大量的连接队列，由于没有收到ACK—直维护着这些队列，造成了资源的大量消耗而不能向正常请求提供服务，甚至导致路由器崩溃。服务器要等待超时才能断开己分配的资源，所以SYNFlooding攻击是一种DoS攻击。端口欺骗攻击是采用端口扫描找到系统漏洞从而实施攻击。IP欺骗攻击是产生的IP数据包为伪造的源IP地址，以便冒充其他系统或发件人的身份。","analysis":"B"},{"product_id":"20150314205840877","ans":"本题考查PKI体制。PKI体制中，为保障数字证书不被篡改而且要发送到证书主人手中，需要用CA的私钥对数字证书签名，防伪造，不可抵赖。","analysis":"A"},{"product_id":"20150314205936971","ans":"本题考查加密算法的基础知识。常用的加密算法依据所使用的秘钥数分为单钥和双钥加密体制，也称私钥和公钥加密算法。ECC、DSA和RSA都属于公开密钥加密算法，DES是典型的私钥加密体制。","analysis":"D"},{"product_id":"20150314210044767","ans":"本题考査多媒体方面的基础知识。矢量图形是用一系列计算机指令来描述和记录的一幅图的内容，即通过指令描述构成一幅图的所有直线、曲线、圆、圆弧、矩形等图元的位置、维数和形状，也可以用更为复杂的形式表示图像中的曲面、光照、材质等效果。矢量图法实质上是用数学的方式(算法和特征)来描述一幅图形图像，在处理图形图像时根据图元对应的数学表达式进行编辑和处理。在屏幕上显示一幅图形图像时，首先要解释这些指令，然后将描述图形图像的指令转换成屏幕上显示的形状和颜色。编辑矢量图的软件通常称为绘图软件，如适于绘制机械图、电路图的AutoCAD软件等。","analysis":"C"},{"product_id":"20150314210143924","ans":"本题考查多媒体方面的基础知识。视频信息是指活动的、连续的图像序列。一幅图像称为一帧，帧是构成视频信息的基本单元。","analysis":"A"},{"product_id":"20150314210601002","ans":"本题考查多媒体编辑软件方面的知识。多媒体编辑软件分为：文本工具、图形/图像工具、动画工具、视频工具、音频工具和播放工具。“WPS”属于文本工具类软件，主要用于文字编辑和处理；“Xara3D”属于动画工具类软件，主要用于动画编辑和处理；“PhotoShop”属于图形/图像工具类软件，主要用于显示图形/图像、图形/图像编辑、图像压缩、围像捕捉、图形/图像素材库；“CoolEditPro”属于音频工具类软件，主要用于音频播放、音频编辑、音频录制和声音素材库4个功能。","analysis":"B"},{"product_id":"20150314214003939","ans":"本题考查知识产权方面的基础知识。“既可引用发表的作品，也可引用未发表的作品”的说法显然是错误的。因为，为说明某一问题，在学术论文中需要引用某些资料必须是已发表的作品，但只能限于介绍、评论作品，只要不构成自己作品的主要部分，可适当引用资料，而不必征得原作者的同意，不需要向他支付报酬。","analysis":"A"},{"product_id":"20150314214108314","ans":"本题考查知识产权方面的基础知识。“国务院颁布的《计算机软件保护条例》”的说法显然是错误的。因为，国务院颁布的《计算机软件保护条例》是国家为了管理需要制定的政策法规，故不适用著作权法保护。","analysis":"D"},{"product_id":"20150314214440861","ans":"本题考查结构化分析方法的基础知识。分层的数据流图是结构化分析方法的重要组成部分。对数据流图中的每个基本加工，需要有一个加工规格说明，描述把输入数据流变换为输出数据流的加工规则，但不需要描述实现加工的具体流程。可以用结构化语言、判定表和判定树来表达基本加工。","analysis":"C"},{"product_id":"20150314214538955","ans":"本题考查软件设计的基础知识。模块的控制范围包括模块本身及其所有的从属模块。模块的作用范围是指模块一个判定的作用范围，凡是受这个判定影响的所有模块都属于这个判定的作用范围.，原则上一个模块的作用范围应该在其控制范围之内，若没有，则可以将判定所在模块合并到父模块中，使判定处于较高层次。","analysis":"D"},{"product_id":"20150314214746611","ans":"本题考查软件项目管理的基础知识。根据关键路径法，计算出关键路径为A—C—G—J—K，关键路径长度为65。因此里程碑C在关键路径上，而里程碑B、D和I不在关键路径上。若完成活动DG需要15天，则相当于A--D--G--J--K也是一个关键路径，而且活动AD推迟了三天才能完成，此时，完成项目的最短时间应该是68天，比原来的最短时间65天多了3天。","analysis":"B"},{"product_id":"20150314214901846","ans":"本题考查软件项目管理的基础知识。根据关键路径法，计算出关键路径为A—C—G—J—K，关键路径长度为65。因此里程碑C在关键路径上，而里程碑B、D和I不在关键路径上。若完成活动DG需要15天，则相当于A--D--G--J--K也是一个关键路径，而且活动AD推迟了三天才能完成，此时，完成项目的最短时间应该是68天，比原来的最短时间65天多了3天。","analysis":"B"},{"product_id":"20150314215011596","ans":"本题考查软件项目管理的基础知识。软件开发过程中不可避免会遇到风险，有效地管理软件风险对项目管理具有重要的意义。对不同的风险采取不同的风险管理策略。如对关键职员在项目未完成时就跳槽的风险，可以通过培养后备人员、让项目组人员了解开发信息、评审开发工作等来降低风险。通过临时招聘新职员，即使新职员具有相关的能力，由于对项目的开发进展、团队组成等多种情况不了解，并不能很好地降低风险。","analysis":"C"},{"product_id":"20150314215118330","ans":"本题考查程序语言基础知识。进行函数调用时，常需要在调用环境中的数据传递给被调用函数，作为输入参数由被调用函数处理，基本的调用方式为值调用(或传值调用)和引用调用。其中，值调用方式下是将实参的值单向地传递给被调用函数的形参，引用调用方式下通过将实参的地址传递给形参，在被调用函数中通过指针实现对实参变量数据的间接访问和修改，从而达到将修改后的值“传回来”的效果。","analysis":"A"},{"product_id":"20150314215312033","ans":"本题考查程序语言基础知识。用文法表示语言的语法规则时，推导是产生语言句子的基本方式。以题H中的文法为例，推导出1010的过程为S→A0→S10→A010→1010，推导出0110的过程为S→A0→S10→B110→0110,对于0000、1111、1100、0011等则推导不出。因为由S先推导出A0后，再去推导A则必然产生一个与0相邻(在0的左边)的1，而由S先推导出B1，则下一步必然要推导出一个与1相邻(在1的左边)的0。这保证了当1出现时，马上就会出现0,或者反之，且0和1的距离很近。分析更多的例子发现，仅有“某些0和1个数相等的字符串”是正确的。","analysis":"C"},{"product_id":"20150314215521627","ans":"本题考查程序语言基础知识。后缀式的特点是将运算符号写在运算数的后面。对于表达式，其计算次序是相减、相乘、相加，其后缀式为“abc-d*+”。","analysis":"B"},{"product_id":"20150314215625861","ans":"本题考查操作系统PV操作方面的基本知识。系统采用PV操作实现进程的同步与互斥，当执行一次P操作表示申请一个资源，信号量S减1，如果S<0,其绝对值表示等待该资源的进程数。本题信号量S的值为-3,表示系统中有3个等扫描仪的进程。","analysis":"C"},{"product_id":"20150314232211564","ans":"本题考查操作系统页式存储管理方面的基础知识。从图中可见，页内地址的长度是12位，212=4096,即4K;页号部分的地址长度是12位，每个段最大允许有4096个页;段号部分的地址长度是8位，28=256,最多可有256个段。","analysis":"B"},{"product_id":"20150314233433252","ans":"本题考查操作系统文件管理方面的基本知识。文件管理系统是在外存上建立一张位示图(bitmap),记录文件存储器的使用情况。每一位对应文件存储器上的一个物理块，取值0和1分别表示空闲和占用，如下图所示。由于系统中字长为32位，所以每个字可以表示32个物理块的使用情况。又因为文件存储器上的物理块依次编号为：0、1、2、位示图表示物理块的情况如下，从下图可见，16385号物理块应该在位示图的第512个字中描述。又因为磁盘物理块的大小为4MB,1GB=1024M=256个物理块，需要8个字表示，故磁盘的容量为1000GB，那么位示图需要1000×8=8000个字表示。","analysis":"C"},{"product_id":"20150314233546314","ans":"本题考查操作系统文件管理方面的基本知识。文件管理系统是在外存上建立一张位示图(bitmap),记录文件存储器的使用情况。每一位对应文件存储器上的一个物理块，取值0和1分别表示空闲和占用，如下图所示。由于系统中字长为32位，所以每个字可以表示32个物理块的使用情况。又因为文件存储器上的物理块依次编号为：0、1、2、位示图表示物理块的情况如下，从下图可见，16385号物理块应该在位示图的第512个字中描述。又因为磁盘物理块的大小为4MB,1GB=1024M=256个物理块，需要8个字表示，故磁盘的容量为1000GB，那么位示图需要1000×8=8000个字表示。","analysis":"D"},{"product_id":"20150314234004564","ans":"初始时系统的可用资源数分别为10、5和3。在T0时刻已分配资源数分别为8、5和2,因此系统剩余的可用资源数分别为2、0和1。","analysis":"D"},{"product_id":"20150314234542439","ans":"安全状态是指系统能按某种进程顺序(P1，P2,…，Pn)，来为每个进程Pi分配其所需的资源，直到满足每个进程对资源的最大需求，使每个进程都可以顺利完成。如果无法找到这样的一个安全序列，则称系统处于不安全状态。本题进程的执行序列已经给出，我们只需将四个选项按其顺序执行一遍，便可以判断出现死锁的三个序列。P1→P2→P4→P5→P3是不安全的序列。因为在该序列中，进程P1先运行，P1尚需资源数为(4，2，0)，假设将资源R1分配2台给进程P1，则系统剩余的可用资源数为(0，0，1)，将导致系统所有的进程都不能作上能完成标志“True”。P5→P2→P4→P3→P1是安全的序列。因为所有的进程都能作上能完成标志“True”，如下表所示。P5→P2→P4→P3→P1具体分析如下：.①进程P5运行，系统剩余的可用资源数为(2，0，1)，P5尚需资源数为(1，0，1)，系统可进行分配，故进程P5能作上能完成标志“True”，释放P5占有的资源数(1，1，0)，系统可用资源数为(3，1，1)。②进程P2运行，系统剩余的可用资源数为(3，1，1)，P2尚需资源数为(1，1，1),系统可进行分配，故进程P2能作上能完成标志“True”，释放P2占有的资源数(2，1，0)，系统可用资源数为(5，2，1)。③进程P4运行，系统剩余的可用资源数为(5，2，1)，P4尚需资源数为(2，2，1)，系统可进行分配，故进程P4能作上能完成标志“True”，释放P4占有的资源数(1，1，1)，系统可用资源数为(6，3，2)。④进程P3运行，系统剩余的可用资源数为(6，3，2)，P3尚需资源数为(3，0，1)，系统可进行分配，故进程P3能作上能完成标志“True”，释放P3占有的资源数(3，1，0)，系统可用资源数为(9，4，2)。⑤进程P1运行，系统剩余的可用资源数为(9，4，2)，P1尚需资源数为(4，2，0)，系统可进行分配，故进程P1能作上能完成标志“True”，释放P1占有的资源数(1，1，1)，系统可用资源数为(10，5，3)。P4→P2→P1→P5→P3是不安全的序列。因为在该序列中，进程P4先运厅，P4尚需资源数为(2，2，1)，假设将资源R1分配2台给进程P4,则系统剩余的可用资源数为(0,0，1)，将导致系统所有的进程都不能作上能完成标志“True”。P5→P1→P4→P2→P3是不安全的序列。因为在该序列中，进程P5先运行，系统剩余的可用资源数为(2，0，1),P5尚需资源数为(1，0，1)，系统可进行分配，故进程P5能作上能完成标志“True”，释放P5占有的资源数(1，1，0)，系统可用资源数为(3,1，1)。进程P1运行，P1尚需资源数为(4,2,0)，假设将资源R1分配3台给进程P1，则系统剩余的可用资源数为(0，1，1)，将导致系统中的进程P1、P2、P3和P4都不能作上能完成标志“True”。","analysis":"B"},{"product_id":"20150314234647205","ans":"本题考査软件过程模型的基础知识。瀑布模型将软件生存周期各个活动规定为线性顺序连接的若干阶段的模型，规定了由前至后，相互衔接的固定次序，如同瀑布流水，逐级下落。这种方法是一种理想的现象开发模式，缺乏灵活性，特别是无法解决软件需求不明确或不准确的问题。演化模型从初始的原型逐步演化成最终软件产品，特别适用于对软件需求缺乏准确认识的情况。螺旋将瀑布模型与快速原型模型结合起来，并且加入两种模型均忽略了的风险分析，适用于复杂的大型软件。增量开发是把软件产品作为一系列的增量构件来设计、编码、集成和测试，可以在增量开发过程中逐步理解需求。","analysis":"A"},{"product_id":"20150314234806767","ans":"本题考查过程模型的基础知识。增量开发是把软件产品作为一系列的增量构件来设计、编码、集成和测试。每个构件由多个相互作用的模块构成，并且能够完成特定的功能。其优点包括：能在较短时间内向用户提交可完成-些有用的工作产品；逐步增加产品的功能可以使用户有较充裕的时间学习和适应新产品；项目失败的风险较低；优先级高的服务首先交付，使得最重要的系统服务将接受最多的测试。","analysis":"D"},{"product_id":"20150314234906642","ans":"本题考查软件质量的基础知识。程序质量评审通常是从开发者的角度进行，与开发技术直接相关，考虑软件本身的结构、与运行环境的接口以及变更带来的影响等。其中，软件结构包括功能结构、功能的通用性、模块的层次性、模块结构和处理过程的结构，而模块结构包括控制流结构、数据流结构、模块结构与功能结构之间的对应关系。","analysis":"A"},{"product_id":"20150314235026174","ans":"本题考查软件过程和软件过程改进的基础知识。CMM是指软件开发能力成熟度模型，该模型给出了从混乱的个别的过程达到成熟的规范化过程的一个框架，分成5个等级，从1级到5级成熟度逐步提高。级别1为初始级，特点是混乱和不可预测；级别2为重复级级别，特点是项目得到管理监控和跟踪，有稳定的策划和产品基线；级别3为确定级级别，通过软件过程的定义和制度化确保对产品质量的控制；级别4为管理级级别，特点是产品质量得到策划，软件过程基于度量的跟踪；级别5为优化级，特点是持续的过程能力改进。","analysis":"C"},{"product_id":"20150314235114939","ans":"本题考查软件质量的基础知识。软件的可维护性是指纠正软件系统出现的错误和缺陷，以及为满足新的要求进行修改、扩充或压缩的容易程度，是软件开发阶段各个时期的关键目标。其中，可理解性、可测试性和可修改性是衡量可维护性的重要指标。","analysis":"C"},{"product_id":"20150314235202205","ans":"本题考査软件工程的基础知识。逆向工程从详细的源代码实现中抽取抽象规格说明，一般来说是在原软件交付用户使用之后进行的，即在原软件的维护阶段进行。","analysis":"D"},{"product_id":"20150314235336471","ans":"本题考查软件测试的基础知识。常用的测试技术包括白盒测试和黑盒测试。白盒测试是利用程序内部的逻辑结构及有关信息，设计或选择测试用例，对程序所在逻辑路径进行测试，又称为结构测试或逻辑驱动测试。黑盒测试根据程序的需求规格兑明书，检查程序的功能是否符合它的功能说明。等价类划分是一类黑盒测试技术，该方法把输入数据分为若干个等价类，包括有效的和无效的等价类。基于等价类设计测试用例时，每个测试用例至多覆盖一个无效等价类，选项C包含两个无效等价类，故不是一个好的测试用例。","analysis":"C"},{"product_id":"20150314235431033","ans":"本题考查软件测试的基础知识。单元测试又称为模块测试，是针对软件设计的最小单元(程序模块)，进行正确性检验的测试。其目的在于发现个模块内不可能存在的各种问题和错误。单元测试需要从程序的内部结构出发设计测试用例。模块可以单独进行单元测试。单元测试测试以下几个方面：模块接口、局部数据结构、执行路径、错误处理和边界。","analysis":"C"},{"product_id":"20150314235532580","ans":"本题考查面向对象的基本知识。定义领域模型是面向对象分析的关键步骤之一。领域模型是从按对象分类的角度来创建对象领域的描述，包括定义概念、属性和重要的关联，其结果用一组显示领域概念和对象的图形一一类图来组织，图中还包括多重性、关联关系、泛化/特化关系以及聚合关系等。","analysis":"D"},{"product_id":"20150314235835064","ans":"本题考查统一建模语言(UML)的基本知识。UML活动图用于构建系统的活动。建模用例执行过程中对象如何通过消息相互交互，将系统作为一个整体或者几个子系统进行考虑。对象在运行时可能会存在两个或多个并发运行的控制流，为了对并发控制流进行建模，UML中引入同步的概念，用同步棒——黑色粗线条表示并发分支与汇合。","analysis":"C"},{"product_id":"20150315000830314","ans":"本题考查统一建模语言(UML)的基本知识。UML序列图(SequenceDiagram)以二维图的形式显示对象之间交互的图，纵轴自上而下表示时间，横轴表示要交互的对象，主要体现对象间消息传递的时间顺序，强调参与交互的对象及其间消息交互的时序。序列图中包括的建模元素主要有：活动者(Actor)、对象(Object)、生命线(Lifeline)、控制焦点(Focusofcontrol)和消息(Message)等。其中对象名标有下划线；生命线表示为虚线，沿竖线向下延伸；消息在序列图中标记为箭头；控制焦点由薄矩形表示。消息是从一个对象的生命线到了一个对象生命线的箭头，用从上而下的时间顺序来安排。一般分为同步消息(→)，异步消息()和返回消息()。本题图中evaluation为返回消息，其他为同步消息。al和a2均为Account对象，所以Account应该实现了xfer()、minus()和plus()方法，Person应该实现check()方法。","analysis":"C"},{"product_id":"20150315000950939","ans":"本题考查统一建模语言(UML)的基本知识。UML序列图(SequenceDiagram)以二维图的形式显示对象之间交互的图，纵轴自上而下表示时间，横轴表示要交互的对象，主要体现对象间消息传递的时间顺序，强调参与交互的对象及其间消息交互的时序。序列图中包括的建模元素主要有：活动者(Actor)、对象(Object)、生命线(Lifeline)、控制焦点(Focusofcontrol)和消息(Message)等。其中对象名标有下划线；生命线表示为虚线，沿竖线向下延伸；消息在序列图中标记为箭头；控制焦点由薄矩形表示。消息是从一个对象的生命线到了一个对象生命线的箭头，用从上而下的时间顺序来安排。一般分为同步消息(→)，异步消息()和返回消息()。本题图中evaluation为返回消息，其他为同步消息。al和a2均为Account对象，所以Account应该实现了xfer()、minus()和plus()方法，Person应该实现check()方法。","analysis":"B"},{"product_id":"20150315001059361","ans":"本题考查面向对象技术的基础知识。在面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类(父类)和子类之间共享数据和方法的机制。在定义和实现一个类的时候，可以在一个已经存在的类的基础上来进行，子类可以继承其父类中的属性和操作作为自己的内容而不必自己定义，也可以用更具体地方式实现从父类继承来的方法，称为覆盖。不同的对象收到同一消息可以进行不同的响应，产生完全不同的结果，用户可以发送一个通用的消息，而实现细节则由接收对象自行决定，使得同一个消息就可以调用不同的方法，即一个对象具有多种形态，称为多态。不同类的对象通过消息相互通信。","analysis":"B"},{"product_id":"20150315001152939","ans":"本题考查面向对象技术的基础知识。在面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类(父类)和子类之间共享数据和方法的机制。在定义和实现一个类的时候，可以在一个已经存在的类的基础上来进行，子类可以继承其父类中的属性和操作作为自己的内容而不必自己定义，也可以用更具体地方式实现从父类继承来的方法，称为覆盖。不同的对象收到同一消息可以进行不同的响应，产生完全不同的结果，用户可以发送一个通用的消息，而实现细节则由接收对象自行决定，使得同一个消息就可以调用不同的方法，即一个对象具有多种形态，称为多态。不同类的对象通过消息相互通信。","analysis":"A"},{"product_id":"20150315001244674","ans":"本题考查面向对象技术的基础知识。在面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类(父类)和子类之间共享数据和方法的机制。在定义和实现一个类的时候，可以在一个已经存在的类的基础上来进行，子类可以继承其父类中的属性和操作作为自己的内容而不必自己定义，也可以用更具体地方式实现从父类继承来的方法，称为覆盖。不同的对象收到同一消息可以进行不同的响应，产生完全不同的结果，用户可以发送一个通用的消息，而实现细节则由接收对象自行决定，使得同一个消息就可以调用不同的方法，即一个对象具有多种形态，称为多态。不同类的对象通过消息相互通信。","analysis":"C"},{"product_id":"20150315001423158","ans":"本题考查设计模式的基本概念。策略(Strategy)设计模式定义一系列算法，把它们一个个封装起来，并且使它们可相互替换。这一模式使得算法可独立于它的客户而变化。抽象工厂(AbstractFactory)模式提供一个创建一系列相关或相互依赖对象的接口，而无需指定他们具体的类。观察者(Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状恶发生改变时，所有依赖于它的对象都得到通知并被自动更新。状态(State)模式是使得一个对象在其内部状态改变时通过调用另一个类中的方法改变其行为，使这个对象看起来如同修改了它的类。","analysis":"A"},{"product_id":"20150315001615486","ans":"本题考查设计模式的基本概念。适配器(Adapter)模式将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。观察者(Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新，其别名为发布-订阅(Publish-Subscribe)模式。状态(State)模式是使得一个对象在其内部状态改变时通过调用另一个类中的方法改变其行为，使这个对象看起来如同修改了它的类。","analysis":"D"},{"product_id":"20150315001807267","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。适配器(Adapter)模式将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。组合(Composite)模式将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。组件Component为组合的对象声明接口，通常定义父组件引用，Leaf和Composite类可以继承这个引用以及管理这个应用的那些操作。装饰器(Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。","analysis":"C"},{"product_id":"20150315001908189","ans":"本题考查设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。适配器(Adapter)模式将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。组合(Composite)模式将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。组件Component为组合的对象声明接口，通常定义父组件引用，Leaf和Composite类可以继承这个引用以及管理这个应用的那些操作。装饰器(Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。","analysis":"A"},{"product_id":"20150315002010424","ans":"本题考查程序语言基础知识。“中间代码”是一种简单且含义明确的记号系统，可以有若干种形式，它们的共同特征是与具体的机器无关，此时所作的优化一般建立在对程序的控制流和数据流分析的基础之上，与具体的机器无关。","analysis":"B"},{"product_id":"20150315002110611","ans":"本题考查程序语言基础知识。语言中具有独立含义的最小语法单位是符号(单词)，如标识符、无符号常数与界限符等。词法分析的任务是把构成源程序的字符串转换成单词符号序列。有限自动机是一种识别装置的抽象概念，它能准确地识别正规集。有限自动机分为两类：确定的有限自动机(DFA)和不确定的有限自动机(NFA)。","analysis":"A"},{"product_id":"20150315002154830","ans":"本题考查程序语目基础知识。弱/强类型指的是语言类型系统的类型检査的严格程度，动态类型和静态类型则指变量与类型的绑定方法。静态类型指编译器在编译源程序期间执行类型检查，动态类型指编译器(虚拟机)在程序运行时执行类型检查。简单地说，在声明了一个变量之后，不能改变其类型的语言，是静态语言；能够随时改变其类型的语言，是动态语言。弱类型相对于强类型来说类型检查更不严格，比如说允许变量类型的隐式转换，允许强制类型转换等等。","analysis":"C"},{"product_id":"20150315003119971","ans":"本题考查关系代数运算与SQL查询方面的基础知识。在π1，3，6，7(σ3<6(RS))中，自然联结RS运算后去掉右边重复的属性列名S.B、S.C后为:R.A、R.B、R.C、R.D、R.E、S.F和S.G，空（51）的正确答案为7。","analysis":"C"},{"product_id":"20150315003604705","ans":"本题考查关系代数运算与SQL查询方面的基础知识。在π1，3，6，7(σ3<6(RS))中，自然联结RS运算后去掉右边重复的属性列名S.B、S.C后为:R.A、R.B、R.C、R.D、R.E、S.F和S.G，空（51）的正确答案为7。π1，3，6，7(σ3<6(RS))的含义是从RS结果集中选取R.C<S.F的元组，再进行R.A、R.C、S.F和S.G投影，因此，空（52）的正确答案为A,R.C,F,G。","analysis":"A"},{"product_id":"20150315004045689","ans":"本题考查关系代数运算与SQL查询方面的基础知识。在π1，3，6，7(σ3<6(RS))中，自然联结RS运算后去掉右边重复的属性列名S.B、S.C后为:R.A、R.B、R.C、R.D、R.E、S.F和S.G，空（51）的正确答案为7。π1，3，6，7(σ3<6(RS))的含义是从RS结果集中选取R.C<S.F的元组，再进行R.A、R.C、S.F和S.G投影，因此，空（52）的正确答案为A,R.C,F,G。显然，空（53）的答案为R，S。","analysis":"D"},{"product_id":"20150315004811517","ans":"本题考查关系代数运算与SQL查询方面的基础知识。在π1，3，6，7(σ3<6(RS))中，自然联结RS运算后去掉右边重复的属性列名S.B、S.C后为:R.A、R.B、R.C、R.D、R.E、S.F和S.G，空（51）的正确答案为7。π1，3，6，7(σ3<6(RS))的含义是从RS结果集中选取R.C<S.F的元组，再进行R.A、R.C、S.F和S.G投影，因此，空（52）的正确答案为A,R.C,F,G。显然，空（53）的答案为R，S。空（54）的正确答案为R.B=S.BANDR.C=S.CANDR.C<S.F。因为，自然联结RS需要用条件“WHERER.B=S.BANDR.C=S.C”来限定，选取运算σ3<6需要用条件“WHERER.C<S.F”来限定。","analysis":"B"},{"product_id":"20150315004933314","ans":"本题考查分布式数据库基本概念。分片透明是指用户或应用程序不需要知道逻辑上访问的表具体是怎么分块存储的。复制透明是指采用复制技术的分布方法，用户不需要知道数据是复制到哪些节点，如何复制的。位置透明是指用户无需知道数据存放的物理位置，逻辑透明局部数据模型透明，是指用户或应用程序无需知道局部场地使用的是哪种数据模型。","analysis":"D"},{"product_id":"20150315005038064","ans":"本题考查关系数据库事务处理方面的基础知识。为了保证数据库中数据的安全可靠和正确有效，数据库管理系统(DBMS)提供数据库恢复、并发控制、数据完整性保护与数据安全性保护等功能。数据库在运行过程中由于软硬件故障可能造成数据被破坏，数据库恢复就是在尽可能短的时间内，把数据库恢复到故障发生前的状态。具体的实现方法有多种，如：定期将数据库作备份；在进行事务处理时，对数据更新(插入、删除、修改)的全部有关内容写入日志文件；当系统正常运行时，按一定的时间间隔，设立检查点文件，把内存缓冲区内容还未写入到磁盘中去的有关状态记录到检查点文件中；当发生故障时，根据现场数据内容、日志文件的故障前映像和检査点文件来恢复系统的状态。","analysis":"D"},{"product_id":"20150315005156752","ans":"本题考查数据结构基础知识。线性表进行顺序存储时，逻辑上相邻的元素，其物理位置也相邻，因此在己知第一个元素存储位置和元素序号的情况下，可计算出表中任意指定序号元素的存储位置，即按照序号访问元素时随机的，该运算的时间复杂度为0(1)，也就是常量级。而插入元素时就需要移动一些元素了，在最坏情况下要移动表中的所有元素，因此该运算的时间复杂度为O(n)，其中n为线性表的长度。线性表进行链式存储时，逻辑上相邻的元素，其物理位置不要求相邻，因此需要额外的存储空间表示元素之间的顺序关系。在链表上查找元素和插入元素的运算时间复杂度都为0(n)。","analysis":"A"},{"product_id":"20150315005340111","ans":"本题考查数据结构基础知识。根据题目中所给的示意图，Q.front为队头元素的指针，该指针加1后得到队列中的第2个元素(即y)的指针，由于队列中存储位置编号是在0〜M-1之间循环的，队头指针加上1个增量后可能会超出该范围，应该用整除取余运算恢复一下，因此由Q.front可以算出队列尾部元素的指针为(Q.front+Q.size-1+M)%M。","analysis":"B"},{"product_id":"20150315010219799","ans":"本题考查数据结构基础知识。对一个有向图G进行拓扑排序的方法如下。①G中选择一个入度为0(没有前驱)的顶点且输出它；②从网中删除该顶点及其与该顶点有关的所有弧；③重复上述两步，直至网中不存在入度为0的顶点为止。显然，若存在弧<vi，vj>，则vj的入度就不为0,而要删除该弧，则vi的入度应为0,因此在拓扑序列中，vi必然在'之前。另外，进行拓扑排序时，可能存在vi和vj的入度同时为0的情形，此时，在第①步可先输出vi，后输出vj。因此在拓扑序列中，顶点vi排列在vj之前，不一定存在弧<vi，vj>，一定不存在弧<vj，vi>,也一定不存在vj到vi的路径，而可能存在vi到vj的路径。","analysis":"C"},{"product_id":"20150315010445096","ans":"本题考查数据结构基础知识。哈夫曼树是一类带权路径长度最短的树，根据一组权值构造出来。构造过埕为：①根据给定的n个权值{w1，w2,…，wn}，构成n棵二叉树的集合F={T1，T2,…，Tn},其中每棵树Ti中只有一个带权为wi的根结点，其左右子树均空。②在F中选取两棵权值最小的树作为左、右子树构造一棵新的二叉树，置新构造二叉树的根结点的权值为其左、右子树根结点的权值之和。③从F中删除这两棵树，同时将新得到的二叉树加入到F中。根据权值集合{0.25,0.30,0.08,0.25,0.12}构造的哈夫曼树如下图所示，从中可以知道，哈夫曼树中叶子结点的权值越小则距离树根越远、叶子结点的权值越大则距离树根越近。","analysis":"D"},{"product_id":"20150315010609002","ans":"本题考查数据结构基础知识。在应用散列函数构造哈希表(或散列表)时，由于设计散列函数的目标是：作为一个压缩映像函数，它应具有较大的压缩性，以节省存储空间；哈希函数应具有较好的散列性，虽然冲突是不可避免的，但应尽量减少。题中所给是常用的除留余数法，P值一般为不大于n且最接近n的质数。","analysis":"A"},{"product_id":"20150315010851424","ans":"本题考查算法分析的基础知识。排序和查找是基本的计算问题，存在很多相关的算法，不同的算法适用于不同的场合。不同的数据输入特点相同的算法也有不同的计算时间。若数据基本有序，对插入排序算法而言，则可以在近似线性时间内完成排序，即O(n);而对于快速排序而已，则是其最坏情况，需要二次时间才能完成排序，即O(n2)。两个算法在排序时仅需要一个额外的存储空间，即空间复杂度均为常数时间复杂度O(1)。","analysis":"D"},{"product_id":"20150315011021096","ans":"本题考查算法分析的基础知识。排序和查找是基本的计算问题，存在很多相关的算法，不同的算法适用于不同的场合。不同的数据输入特点相同的算法也有不同的计算时间。若数据基本有序，对插入排序算法而言，则可以在近似线性时间内完成排序，即O(n);而对于快速排序而已，则是其最坏情况，需要二次时间才能完成排序，即O(n2)。两个算法在排序时仅需要一个额外的存储空间，即空间复杂度均为常数时间复杂度O(1)。","analysis":"C"},{"product_id":"20150315011110033","ans":"本题考查算法设计的基础知识。存在几种常用的算法设计策略：分治法、动态规划、贪心、回溯发和分支限界法等。其中，分治法一般用于将大问题分解为一个或多个规模较小的子问题，通常采用自顶向下的递归方法来求解。动态规划求解问题的特征是，问题具有最优子结构和重叠子问题，求解时一般采用自底向上的方法来进行。贪心法求解问题的特征是，问题具有最优子结构和贪心选择性质，求解时可以用自底向上或自顶向下的方法进行。回溯法和分支限界法是系统搜索解空间来求解问题的方法，一般先定义解空间，前者以深度优先的方式搜索，后者通常以广度优先的方式搜索。","analysis":"B"},{"product_id":"20150315011148658","ans":"本题考查算法设计的基础知识。存在几种常用的算法设计策略：分治法、动态规划、贪心、回溯发和分支限界法等。其中，分治法一般用于将大问题分解为一个或多个规模较小的子问题，通常采用自顶向下的递归方法来求解。动态规划求解问题的特征是，问题具有最优子结构和重叠子问题，求解时一般采用自底向上的方法来进行。贪心法求解问题的特征是，问题具有最优子结构和贪心选择性质，求解时可以用自底向上或自顶向下的方法进行。回溯法和分支限界法是系统搜索解空间来求解问题的方法，一般先定义解空间，前者以深度优先的方式搜索，后者通常以广度优先的方式搜索。","analysis":"C"},{"product_id":"20150315011317142","ans":"本试题考查局域网配置中IP地址设置相关问题。PC2发送到Internet上的报文经代理服务器转换后，源IP地址变成代理服务器的出口IP地址，即202.117.112.2。","analysis":"D"},{"product_id":"20150315011528096","ans":"如果要使得两个IPv6结点可以通过现有的IPv4网络进行通信，则应该使用隧道技术，如果要使得纯IPv6结点可以与纯IPv4结点进行通信，则需要使用翻译技术。","analysis":"C"},{"product_id":"20150315011603736","ans":"如果要使得两个IPv6结点可以通过现有的IPv4网络进行通信，则应该使用隧道技术，如果要使得纯IPv6结点可以与纯IPv4结点进行通信，则需要使用翻译技术。","analysis":"D"},{"product_id":"20150315011658955","ans":"POP3协议采用C/S模式进行通信，POP3需要TCP连接的支持，当客户机需要服务时，客户端软件与POP3服务器建立TCP连接。","analysis":"B"},{"product_id":"20150315011739346","ans":"POP3协议采用C/S模式进行通信，POP3需要TCP连接的支持，当客户机需要服务时，客户端软件与POP3服务器建立TCP连接。","analysis":"A"},{"product_id":"20150302215604149","ans":"不变只是愿望，变化才是永恒。——SWIFT一个接一个的软件项目都是一开始设计算法，然后将算法应用到待发布的软件中，接着根据时间进度把第一次开发的产品发布给客户。对于大多数项目，第一个开发的系统并不适用。它可能太慢、太大、难以使用，或者三者兼有。要解决所有的问题，除了重新开始以外，没有其他的办法——即开发一个更灵巧或者更好的系统。系统的丢弃和重新设计可以一步完成，也可以一块块地实现。所有大型系统的经验都显示，这是必须完成的步骤。而且，新的系统概念或新技术会不断出现，因此开发的系统必须被抛弃，但即使是最优秀的项目计划也不能无所不知地在最开始就解决这些问题。因此，管理上的问题不再是“是否构建一个实验性的系统，然后抛弃它”，你必须这样做。现在的问题是“是否预先计划抛弃原型的开发，或者是否将该原型发布给用户”。从这个角度看待问题，答案更加清晰。将原型发布给用户，虽然可以获得时间，但是其代价高昂——对于用户，使用极度痛苦；对于重新开发的人员，分散了精力；对于产品，影响了声誉，即使是最好的再设计也难以挽回名声。因此，为舍弃而计划，无论如何，你一定要这样做。","analysis":"D"},{"product_id":"20150315011928580","ans":"不变只是愿望，变化才是永恒。——SWIFT一个接一个的软件项目都是一开始设计算法，然后将算法应用到待发布的软件中，接着根据时间进度把第一次开发的产品发布给客户。对于大多数项目，第一个开发的系统并不适用。它可能太慢、太大、难以使用，或者三者兼有。要解决所有的问题，除了重新开始以外，没有其他的办法——即开发一个更灵巧或者更好的系统。系统的丢弃和重新设计可以一步完成，也可以一块块地实现。所有大型系统的经验都显示，这是必须完成的步骤。而且，新的系统概念或新技术会不断出现，因此开发的系统必须被抛弃，但即使是最优秀的项目计划也不能无所不知地在最开始就解决这些问题。因此，管理上的问题不再是“是否构建一个实验性的系统，然后抛弃它”，你必须这样做。现在的问题是“是否预先计划抛弃原型的开发，或者是否将该原型发布给用户”。从这个角度看待问题，答案更加清晰。将原型发布给用户，虽然可以获得时间，但是其代价高昂——对于用户，使用极度痛苦；对于重新开发的人员，分散了精力；对于产品，影响了声誉，即使是最好的再设计也难以挽回名声。因此，为舍弃而计划，无论如何，你一定要这样做。","analysis":"A"},{"product_id":"20150315011959799","ans":"不变只是愿望，变化才是永恒。——SWIFT一个接一个的软件项目都是一开始设计算法，然后将算法应用到待发布的软件中，接着根据时间进度把第一次开发的产品发布给客户。对于大多数项目，第一个开发的系统并不适用。它可能太慢、太大、难以使用，或者三者兼有。要解决所有的问题，除了重新开始以外，没有其他的办法——即开发一个更灵巧或者更好的系统。系统的丢弃和重新设计可以一步完成，也可以一块块地实现。所有大型系统的经验都显示，这是必须完成的步骤。而且，新的系统概念或新技术会不断出现，因此开发的系统必须被抛弃，但即使是最优秀的项目计划也不能无所不知地在最开始就解决这些问题。因此，管理上的问题不再是“是否构建一个实验性的系统，然后抛弃它”，你必须这样做。现在的问题是“是否预先计划抛弃原型的开发，或者是否将该原型发布给用户”。从这个角度看待问题，答案更加清晰。将原型发布给用户，虽然可以获得时间，但是其代价高昂——对于用户，使用极度痛苦；对于重新开发的人员，分散了精力；对于产品，影响了声誉，即使是最好的再设计也难以挽回名声。因此，为舍弃而计划，无论如何，你一定要这样做。","analysis":"B"},{"product_id":"20150315012054314","ans":"不变只是愿望，变化才是永恒。——SWIFT一个接一个的软件项目都是一开始设计算法，然后将算法应用到待发布的软件中，接着根据时间进度把第一次开发的产品发布给客户。对于大多数项目，第一个开发的系统并不适用。它可能太慢、太大、难以使用，或者三者兼有。要解决所有的问题，除了重新开始以外，没有其他的办法——即开发一个更灵巧或者更好的系统。系统的丢弃和重新设计可以一步完成，也可以一块块地实现。所有大型系统的经验都显示，这是必须完成的步骤。而且，新的系统概念或新技术会不断出现，因此开发的系统必须被抛弃，但即使是最优秀的项目计划也不能无所不知地在最开始就解决这些问题。因此，管理上的问题不再是“是否构建一个实验性的系统，然后抛弃它”，你必须这样做。现在的问题是“是否预先计划抛弃原型的开发，或者是否将该原型发布给用户”。从这个角度看待问题，答案更加清晰。将原型发布给用户，虽然可以获得时间，但是其代价高昂——对于用户，使用极度痛苦；对于重新开发的人员，分散了精力；对于产品，影响了声誉，即使是最好的再设计也难以挽回名声。因此，为舍弃而计划，无论如何，你一定要这样做。","analysis":"A"},{"product_id":"20150315012143908","ans":"不变只是愿望，变化才是永恒。——SWIFT一个接一个的软件项目都是一开始设计算法，然后将算法应用到待发布的软件中，接着根据时间进度把第一次开发的产品发布给客户。对于大多数项目，第一个开发的系统并不适用。它可能太慢、太大、难以使用，或者三者兼有。要解决所有的问题，除了重新开始以外，没有其他的办法——即开发一个更灵巧或者更好的系统。系统的丢弃和重新设计可以一步完成，也可以一块块地实现。所有大型系统的经验都显示，这是必须完成的步骤。而且，新的系统概念或新技术会不断出现，因此开发的系统必须被抛弃，但即使是最优秀的项目计划也不能无所不知地在最开始就解决这些问题。因此，管理上的问题不再是“是否构建一个实验性的系统，然后抛弃它”，你必须这样做。现在的问题是“是否预先计划抛弃原型的开发，或者是否将该原型发布给用户”。从这个角度看待问题，答案更加清晰。将原型发布给用户，虽然可以获得时间，但是其代价高昂——对于用户，使用极度痛苦；对于重新开发的人员，分散了精力；对于产品，影响了声誉，即使是最好的再设计也难以挽回名声。因此，为舍弃而计划，无论如何，你一定要这样做。","analysis":"C"}]},{"paperId":"89","field":"20131","question_list":[{"product_id":"20140316122947","ans":"本题考查计算机系统存储系统基础知识。在具有层次结构存储器的计算机中，虚拟存储器是为用户提供一个比主存储器大得多的可随机访问的地址空间的技术。虚拟存储技术使辅助存储器和主存储器密切配合，对用户来说，好像计算机具有一个容量比实际主存大得多的主存可供使用，因此称为虚拟存储器。虚拟存储器的地址称为虚地址或逻辑地址。","analysis":"A"},{"product_id":"20140316124055","ans":"本题考查计算机系统基础知识。计算机在执行程序过程中，当遇到急需处理的事件时，暂停当前正在运行的程序，转去执行有关服务程序，处理完后自动返回原程序，这个过程称为中断。中断是一种非常重要的技术，输入输出设备和主机交换数据、分时操作、实时系统、计算机网络和分布式计算机系统中都要用到这种技术。为了提高响应中断的速度，通常把所有中断服务程序的入口地址（或称为中断向量）汇集为中断向量表。","analysis":"C"},{"product_id":"20140316124156","ans":"本题考查计算机系统基础知识。当系统中有多个中断请求时，中断系统按优先级进行排队。若在处理低级中断过程中又有高级中断申请中断，则高级中断可以打断低级中断处理，转去处理高级中断，等处理完高级中断后再返回去处理原来的低级中断，称为中断嵌套。实现中断嵌套用后进先出的栈来保护断点和现场最有效.","analysis":"D"},{"product_id":"20140316124333","ans":"本题考查计算机系统基础知识。计算机系统中主机与外设间的输入输出控制方式有多种，在DMA方式下，输入输出设备与内存储器直接相连，数据传送由DMA控制器而不是主机CPU控制。CPU除了传送开始和终了时进行必要的处理外，不参与数据传送的过程。","analysis":"C"},{"product_id":"20140316124430","ans":"本题考查计算机系统基础知识。从80000H到BFFFFH的编址单元共3FFFF(即218)个，按字节编址的话，对应的容量为28KB，即256KB。若用16K*4bit的芯片构成该内存，构成一个16KB存储器需要2片，256÷16=16,因此共需要32片。","analysis":"B"},{"product_id":"20140316124524","ans":"本题考查计算机系统基础知识。从80000H到BFFFFH的编址单元共3FFFF(即218)个，按字节编址的话，对应的容量为28KB，即256KB。若用16K*4bit的芯片构成该内存，构成一个16KB存储器需要2片，256÷16=16,因此共需要32片。","analysis":"C"},{"product_id":"20140316124625","ans":"本题考查报文摘要的知识。报文摘要是指单向哈希函数算法将任意长度的输入报文经计算得出固定位的输出。报文摘要是用来保证数据完整性的。传输的数据一旦被修改，那么计算出的摘要就不同，只要对比两次摘要就可确定数据是否被修改过。","analysis":"D"},{"product_id":"20140316125023","ans":"本题考查防火墙的基础知识。通过防火墙我们可以将网络划分为三个区域：安全级别最高的LANArea(内网），安全级别中等的DMZ区域和安全级别最低的Internet区域（外网）。三个区域因担负不同的任务而拥有不同的访问策略。通常的规则如下：①内网可以访问外网：内网的用户需要自由地访问外网。在这一策略中，防火墙需要执行NAT。②内网可以访问DMZ:此策略使内网用户可以使用或者管理DMZ中的服务器。③外网不能访问内网：这是防火墙的基本策略，内网中存放的是公司内部数据，显然这些数据是不允许外网的用户进行访问的。如果要访问，就要通过VPN方式来进行。④外网可以访问DMZ:DMZ中的服务器需要为外界提供服务，所以外网必须可以访问DMZ。同时，外网访问DMZ需要由防火墙完成对外地址到服务器实际地址的转换。⑤DMZ不能访问内网：如不执行此策略，则当入侵者攻陷DMZ时，内部网络将不会受保护。⑥DMZ不能访问外网：此条策略也有例外，可以根据需要设定某个特定的服务器可以访问外网，以保证该服务器可以正常工作。综上所述，防火墙区域按照受保护程度从高到低正确的排列次序应为内网、DMZ和外网。","analysis":"D"},{"product_id":"20140316125114","ans":"本题考查病毒及其危害。欢乐时光及熊猫烧香均为蠕虫病毒，CIH则为系统病毒，这3者均以感染台式机或服务器为主，且产生较早；X卧底则是新近产生的、通过木马形式传播、目标为智能手机的病毒。","analysis":"C"},{"product_id":"20140316125206","ans":"本题考查知识产权知识。公民为完成法人或者其他组织工作任务所创作的作品是职务作品。职务作品可以是作品分类中的任何一种形式，如文字作品、电影作品、计算机软件等。职务作品的著作权归属分两种情形。一般职务作品的著作权由作者享有。所谓一般职务作品是指虽是为完成工作任务而为，但非经法人或其他组织主持，不代表其意志创作，也不由其承担责任的职务作品。对于一般职务作品，法人或其他组织享有在其业务范围内优先使用的权利，期限为两年。优先使用权是专有的，未经单位同意，作者不得许可第三人以与法人或其他组织使用的相同方式使用该作品。在作品完成两年内，如单位在其业务范围内不使用，作者可以要求单位同意由第三人以与法人或其他组织使用的相同方式使用，所获报酬，由作者与单位按约定的比例分配。特殊的职务作品，除署名权以外，著作权的其他权利由法人或者其他组织（单位）享有。所谓特殊职务作品是指著作权法第16条第2款规定的两种情况：一是主要利用法人或者其他组织的物质技术条件创作，并由法人或者其他组织承担责任的工程设计、产品设计图、计算机软件、地图等科学技术作品；二是法律、法规规定或合同约定著作权由单位享有的职务作品。","analysis":"A"},{"product_id":"20140316125313","ans":"本题考查知识产权知识。我国计算机软件保护条例第30条规定“软件的复制品持有人不知道也没有合理理由应当知道该软件是侵权复制品的，不承担赔偿责任；但是，应当停止使用、销毁该侵权复制品。如果停止使用并销毁该侵权复制品将给复制品使用人造成重大损失的，复制品使用人可以在向软件著作权人支付合理费用后继续使用。”丙企业在获得软件复制品的形式上是合法的（向经销商购买），但是由于其没有得到真正软件权利人的授权，其取得的复制品仍是非法的，所以丙企业的使用行为属于侵权行为。丙企业应当承担的法律责任种类和划分根据主观状态来确定。首先，法律确立了软件著作权人的权利进行绝对的保护原则，即软件复制品持有人不知道也没有合理理由应当知道该软件是侵权复制品的，也必须承担停止侵害的法律责任，只是在停止使用并销毁该侵权复制品将给复制品使用人造成重大损失的情况下，软件复制品使用人可继续使用，但前提是必须向软件著作权人支付合理费用。其次，如果软件复制品持有人能够证明自己确实不知道并且也没有合理理由应当知道该软件是侵权复制品的，软件复制品持有人除承担停止侵害外，不承担赔偿责任。软件复制品持有人一旦知道了所使用的软件为侵权复制品时，应当履行停止使用、销毁该软件的义务。不履行该义务，软件著作权人可以诉请法院判决停止使用并销毁侵权软件。如果软件复制品持有人在知道所持有软件是非法复制品后继续使用给权利人造成损失的，应该承担赔偿责任。","analysis":"C"},{"product_id":"20140316125412","ans":"本题考查多媒体基础知识。声音信号是一种模拟信号，计算机要对它进行处理，必须将它转换成为数字声音信号，即用二进制数字的编码形式来表示声音，通常将这一过程称为数字化过程。声音信号数字化过程中首先是将模拟信号转换成离散信号，即A/D转换（模数转换）。","analysis":"D"},{"product_id":"20140316125444","ans":"本题考查多媒体基础知识。dpi是描述图像分辨率的单位，表示每英寸多少像素点，即组成一幅图像的像素密度。它实质上是图像数字化的采样间隔，由它确立组成一幅图像的像素数目。对同样大小的一幅图，如果组成该图像的图像像素数目越多，则说明图像的分辨率越高，图像看起来就越逼真。相反，图像则显得越粗糙。因此，不同的分辨率会造成不同的图像清晰度。存储每个像素所用的位数是用来度量图像的分辨率的。像素深度确定彩色图像的每个像素可能有的颜色数，即确定彩色图像中可出现的最多颜色数。显示屏上能够显示出的像素数目是指显示分辨率。","analysis":"C"},{"product_id":"20140316125554","ans":"本题考查多媒体基础知识。表现媒体指实现信息输入和输出的媒体，如键盘、鼠标、扫描仪、话筒、摄像机等为输入媒体；显示器、打印机、喇叭等为输出媒体。硬盘属于存储媒体；光缆属于传输媒体；图像属于感觉媒体。","analysis":"A"},{"product_id":"20140316125627","ans":"本题考查软件开发过程模型的基本概念。统一过程模型是一种“用例和风险驱动，以架构为中心，迭代并且增量”的开发过程，由UML方法和工具支持，定义了不同阶段及其制品。起始阶段专注于项目的初创活动。精化阶段理解了最初的领域范围之后，进行需求分析和架构演进。构建阶段关注系统的构建，产生实现模型。移交阶段关注于软件提交方面的工作，产生软件增量。产生阶段运行软件并监控软件的持续使用，提供运行环境的支持，提交并评估缺陷报告和变更请求。","analysis":"B"},{"product_id":"20140316125723","ans":"本题考查项目管理及工具技术。PERT图可以清晰地表示各任务的开始时间和结束时间以及各任务之间的依赖关系，但是无法很好地表示各任务之间的并行情况。根据关键路径法，计算出项目X中的关键路径为B-E-H-J，关键路径长度为16。Gantt图能清晰地描述每个任务从何时开始，到何时结束，任务的进展情况以及各个任务之间的并行性。但是它不能清晰地反映出各任务之间的依赖关系，难以确定整个项目的关键所在，也不能反映计划中有潜力的部分。","analysis":"C"},{"product_id":"20140316125757","ans":"本题考查项目管理及工具技术。PERT图可以清晰地表示各任务的开始时间和结束时间以及各任务之间的依赖关系，但是无法很好地表示各任务之间的并行情况。根据关键路径法，计算出项目X中的关键路径为B-E-H-J，关键路径长度为16。","analysis":"B"},{"product_id":"20140316125846","ans":"本题考查软件需求分类基础知识。软件需求是软件系统必须完成的事以及必须具备的品质。软件需求包括功能需求、非功能需求和设计约束三个方面的内容。功能需求是所开发的软件必须具备什么样的功能：非功能需求是指产品必须具备的属性或品质，如可靠性、性能、响应时间和扩展性等等;设计约束通常对解决方案的一些约束说明。“软件产品必须能够在3秒内对用户请求作出响应”主要表述软件的响应时间，属于非功能需求。","analysis":"B"},{"product_id":"20140316130022","ans":"本题考查软件测试基础知识。单元测试是在模块编写完成且无编译错误后进行，侧重于模块中的内部处理逻辑和数据结构；接受测试主要是用户为主的测试；安装测试是将软件系统安装在实际运行环境的测试；回归测试是在系统有任何修改的情况下，需要重新对整个软件系统进行的测试。","analysis":"D"},{"product_id":"20140316130626","ans":"本题考查程序语言翻译基础知识。编译和解释方式是翻译高级程序设计语言的两种基本方式。解释程序也称为解释器，它或者直接解释执行源程序，或者将源程序翻译成某种中间表示形式后再加以执行；而编译程序（编译器）则首先将源程序翻译成目标语言程序，然后在计算机上运行目标程序。这两种语言处理程序的根本区别是：在编译方式下，机器上运行的是与源程序等价的目标程序，源程序和编译程序都不再参与目标程序的执行过程；而在解释方式下，解释程序和源程序（或其某种等价表示）要参与到程序的运行过程中，运行程序的控制权在解释器。解释器翻译源程序时不产生独立的目标程序，而编译器则需将源程序翻译成独立的目标程序。","analysis":"C"},{"product_id":"20140316130707","ans":"本题考查程序语言知识。调用函数和被调用函数之间交换信息的方法主要有两种：一种是由被调用函数把返回值返回给主调函数，另一种是通过参数传递信息。函数调用时实参与形参间交换信息的基本方法有传值调用和引用调用两种。若实现函数调用时实参向形参传递相应类型的值，则称为是传值调用。这种方式下形参不能向实参传递信息。实参可以是变量，也可以是常量和表达式。引用调用的实质是将实参变量的地址传递给形参，因此，形参是指针类型，而实参必须具有左值。变量具有左值，常量没有左值。被调用函数对形参的访问和修改实际上就是针对相应实际参数所作的访问和改变，从而实现形参和实参间双向传递数据的效果。","analysis":"C"},{"product_id":"20140316130742","ans":"本题考查程序语言基础知识。编译过程中为变量分配存储单元所用的地址是逻辑地址，程序运行时再映射为物理地址。","analysis":"A"},{"product_id":"20140316130822","ans":"在分时系统中是将把CPU的时间分成很短的时间片轮流地分配给各个终端用户，当系统中的用户数为n、时间片为q时，那么系统对每个用户的响应时间等于n*q。","analysis":"C"},{"product_id":"20140316130930","ans":"在同一进程中的各个线程都可以共享该进程所拥有的资源，如访问进程地址空间中的每一个虚地址；访问进程拥有已打开文件、定时器、信号量机构等，但是不能共享进程中某线程的栈指针。","analysis":"D"},{"product_id":"20140316131237","ans":"因为R1资源只有2个，P2申请该资源得不到满足，故进程P2是阻塞节点；同样R2资源只有3个，P1申请该资源得不到满足，故进程P1也是阻塞节点。可见进程资源图（a）是死锁的，该图不可以化简。因为R2资源有3个，已分配2个，P3申请1个R2资源可以得到满足，故进程P3可以运行完毕释放其占有的资源。这样可以使得Pl、P2都变为非阻塞节点，得到所需资源运行完毕，因此，进程资源图（b)是可化简的。","analysis":"B"},{"product_id":"20140316131318","ans":"因为R1资源只有2个，P2申请该资源得不到满足，故进程P2是阻塞节点；同样R2资源只有3个，P1申请该资源得不到满足，故进程P1也是阻塞节点。可见进程资源图（a）是死锁的，该图不可以化简。因为R2资源有3个，已分配2个，P3申请1个R2资源可以得到满足，故进程P3可以运行完毕释放其占有的资源。这样可以使得P1、P3都变为非阻塞节点，得到所需资源运行完毕，因此，进程资源图（b)是可化简的。","analysis":"C"},{"product_id":"20140316131904","ans":"从图中不难看出，若p5进程运行完并释放其占有的空间，则由于其占用的分区有上邻空闲区，一旦释放后，就合并为一个空闲区，所以合并后系统空闲区数=3-1=2.","analysis":"B"},{"product_id":"20140316131937","ans":"若p5进程运行完并释放其占有的空间，则由于其占用的分区既有上邻空闲区又有下邻空闲区，一旦释放后，就合并为一个空闲区，所以合并后系统空闲区数=3-1=2","analysis":"D"},{"product_id":"20140316132118","ans":"本题考查数据流图方面的基础知识。结构化分析将数据和处理作为分析对象，数据的分析结果表示了现实世界中实体的属性及其之间的相互关系，而处理的结果则展现了系统对数据的加工和转换。面向数据流建模是目前仍然被广泛使用的方法之一，而DFD则是面向数据流建模中的重要工具，DFD将系统建模成输入一处理一输出的模型，即流入软件的数据对象，经由处理的转换，最后以结果数据对象的形式流出软件。在实际使用DFD进行数据流建模时，需要注意以下原则：①加工处理和数据流的正确使用，如一个加工必须既有输入又有输出；数据流只能和加工相关，即从加工流向加工、数据源流向加工或加工流向数据源。②每个数据流和数据存储都要在数据字典中有定义，数据字典将包括各层数据流图中数据元素的定义。③数据流图中最底层的加工处理必须有加工处理说明。④父图和子图必须平衡，即父图中某加工的输入输出（数据流）和分解这个加工的子图的输入输出数据流必须完全一致，这种一致性不一定要求数据流的名称和个数一一对应，但它们在数据字典中的定义必须一致，数据流或数据项既不能多也不能少。⑤加工处理说明和数据流图中加工处理涉及的元素保持一致。例如，在加丄处理说明中，输入数据流必须说明其如何使用，输出数据流说明如何产生或选取，数据存储说明如何选取、使用或修改。⑥一幅图中的图元个数控制在7+2以内。在题目所示的DFD图中，数据流DF2、DF6和DF7的输入、输出均不是加工，这与“数据流只能和加工相关，即从加工流向加工、数据源流向加工或加工流向数据源”相违背。加工P1只有输出，没有输入；加工P3只有输入没有输出，这与“一个加工必须既有输入又有输出”相违背。数据流DF4经过加工P4之后没有发生任何改变，说明该数据对加工P4是没有作用的，根据数据守恒原理，这条数据流不应与P4有关联。综上，该DFD图中共有6个错误。","analysis":"B"},{"product_id":"20140316132354","ans":"本题考查软件复杂性方面的基础知识。软件复杂性度量是软件度量的一个重要分支。对于软件复杂性度量的主要参数有：•规模，即总共的指令数，或源程序行数。•难度，通常由程序中出现的操作数的数目所决定的量来表示。•结构，通常用与程序结构有关的度量来表示。•智能度，即算法的难易程度。软件复杂性主要表现在程序的复杂性。程序的复杂性主要指模块内程序的复杂性。McCabe度量法是一种基于程序控制流的复杂性度量方法。McCabe复杂性度量又称为环路度量，它认为程序的复杂性很大程度上取决于控制的复杂性。单一的顺序程序结构最为简单，循环和选择所构成的环路越多，程序就越复杂。这种方法以图论为工具，先画出程序图，然后用该图的环路数作为程序复杂性的度量值。程序图是退化的程序流程图，也就是说，把程序流程图中每个处理符号都退化成一个结点，原来连接不同处理符号的流线变成连接不同点的有向弧，这样得到的有向图就叫做程序图。程序图仅描述程序内部的控制流程，完全不表现对数据的具体操作以及分支和循环的具体条件。根据图论，在一个强连通的有向图G中，环的个数V(G)由以下公式给出：V(G)=m-n+2p其中，V(G)是有向图G中的环路数，m是图G中弧的个数，n是图G中的结点数，P是G中的强连通分量个数。在一个程序中，从程序图的入口点总能到达图中的任何一个结点，因此，程序总是连通的，但不是强连通的。为了使程序图成为强连通图，从图的入口点到出口点加一条用虚线表示的有向边，使图成为强连通图，这样就可以使用上式计算环路复杂性了。对于题目中的程序图，其中结点数n=9,弧数m=ll,p=l,则有：V(G)=m-n+2p=11-9+2=4即McCabe环路复杂的度量值为4。","analysis":"A"},{"product_id":"20140316132414","ans":"本题考查软件复杂性方面的基础知识。软件复杂性度量是软件度量的一个重要分支。对于软件复杂性度量的主要参数有：•规模，即总共的指令数，或源程序行数。•难度，通常由程序中出现的操作数的数目所决定的量来表示。•结构，通常用与程序结构有关的度量来表示。•智能度，即算法的难易程度。软件复杂性主要表现在程序的复杂性。程序的复杂性主要指模块内程序的复杂性。McCabe度量法是一种基于程序控制流的复杂性度量方法。McCabe复杂性度量又称为环路度量，它认为程序的复杂性很大程度上取决于控制的复杂性。单一的顺序程序结构最为简单，循环和选择所构成的环路越多，程序就越复杂。这种方法以图论为工具，先画出程序图，然后用该图的环路数作为程序复杂性的度量值。程序图是退化的程序流程图，也就是说，把程序流程图中每个处理符号都退化成一个结点，原来连接不同处理符号的流线变成连接不同点的有向弧，这样得到的有向图就叫做程序图。程序图仅描述程序内部的控制流程，完全不表现对数据的具体操作以及分支和循环的具体条件。根据图论，在一个强连通的有向图G中，环的个数V(G)由以下公式给出：V(G)=m-n+2p其中，V(G)是有向图G中的环路数，m是图G中弧的个数，n是图G中的结点数，P是G中的强连通分量个数。在一个程序中，从程序图的入口点总能到达图中的任何一个结点，因此，程序总是连通的，但不是强连通的。为了使程序图成为强连通图，从图的入口点到出口点加一条用虚线表示的有向边，使图成为强连通图，这样就可以使用上式计算环路复杂性了。对于题目中的程序图，其中结点数n=9,弧数m=ll,p=l,则有：V(G)=m-n+2p=11-9+2=4即McCabe环路复杂的度量值为4。","analysis":"C"},{"product_id":"20140316132445","ans":"本题考查软件评审方面的基础知识。通常，把“质量”理解为“用户满意程度”。为了使得用户满意，有两个必要条件:①设计的规格说明书符合用户的要求，这称为设计质量；②程序按照设计规格说明所规定的情况正确执行，这称为程序质量。设计质量评审的对象是在需求分析阶段产生的软件需求规格说明、数据需求规格说明，在软件概要设计阶段产生的软件概要设计说明书等。通常从以下几个方面进行评审：①评价软件的规格说明是否合乎用户的要求，即总体设计思想和设计方针是否明确；需求规格说明是否得到了用户或单位上级机关的批准；需求规格说明与软件的概要设计规格说明是否一致等。②评审可靠性，即是否能避免输入异常（错误或超载等）、硬件失效及软件失效所产生的失效，一旦发生应能及时采取代替手段或恢复手段。③评审保密措施实现情况，即是否对系统使用资格进行检查；是否对特定数据、特定功能的使用资格进行检查；在检查出有违反使用资格的情况后，能否向系统管理人员报告有关信息；是否提供对系统内重要数据加密的功能等。④评审操作特性实施情况，即操作命令和操作信息的恰当性，输入数据与输入控制语句的恰当性；输出数据的恰当性；应答时间的恰当性等。⑤评审性能实现情况，即是否达到所规定性能的目标值。⑥评审软件是否具有可修改性，可扩充性、可互换性和可移植性。⑦评审软件是否具有可测试性。⑧评审软件是否具有复用性。","analysis":"A"},{"product_id":"20140316132527","ans":"本题考查软件维护方面的基础知识。软件维护主要是指根据需求变化或硬件环境的变化对应用程序进行部分或全部的修改。修改时应充分利用源程序，修改后要填写程序修改登记表，并在程序变更通知书上写明新老程序的不同之处。软件维护的内容一般有以下几个方面：①正确性维护，是指改正在系统开发阶段己发生而系统测试阶段尚未发现的错误。这方面的维护工作量要占整个维护工作量的17%〜21%。所发现的错误有的不太重要，不影响系统的正常运行，其维护工作可随时进行；而有的错误非常重要，甚至影响整个系统的止常运行，其维护工作必须制定计划，进行修改，并且要进行复查和控制。②适应性维护，是指使应用软件适应信息技术变化和管理需求变化而进行的修改。这方面的维护工作量占整个维护工作量的18%〜25%。由于目前计算机硬件价格的不断下降，各类系统软件层出不穷，人们常常为改善系统硬件环境和运行环境而产生系统更新换代的需求；企业的外部市场环境和管理需求的不断变化也使得各级管理人员不断提出新的信息需求。这些因素都将导致适应性维护工作的产生。进行这方面的维护工作也要像系统开发一样，有计划、有步骤地进行。③完善性维护，这是为扩充功能和改善性能而进行的修改，主要是指对已有的软件系统增加一些在系统分析和设计阶段中没有规定的功能与性能特征。这些功能对完善系统功能是非常必要的。另外还包括对处理效率和编写程序的改进，这方面的维护占整个维护工作的50%〜60%，比重较大，也是关系到系统开发质量的重要方面。这方面的维护除了要有计划、有步骤地完成外，还要注意将相关的文档资料加入到前面相应的文档中去。④预防性维护，为了改进应用软件的可靠性和可维护性，以及适应未来的软硬件环境的变化，应主动增加预防性的新的功能，以使应用系统适应各类变化而不被淘汰。比如将专用报表功能改成通用报表生成功能，以适应将来报表格式的变化。这方面的维护工作量占整个维护工作量的4%左右。","analysis":"B"},{"product_id":"20140316132617","ans":"本题考查系统评价方面的基础知识。在对软件系统进行评价时，需要从信息系统的组成部分、评价对象和经济学角度出发进行综合考虑，以建立起一套指标体系理论架构。从信息系统的组成部分出发，信息系统是一个由人机共同组成的系统，所以可以按照运行效果和用户需求（人)、系统质量和技术条件（机）这两条线索构造指标。从信息系统评价对象出发，对于用户方来说，他们所关心的是用户需求和运行质量；对开发方而言，他们所关心的是系统质量和技术水平。系统外部环境则主要通过社会效益指标来反映。从经济学角度出发，分别按系统成本、系统效益和财务指标等3条线索建立指标。","analysis":"A"},{"product_id":"20140316132658","ans":"本题考查系统测试方面的基础知识。系统测试是保证系统质量和可靠性的关键步骤，是对系统开发过程中的系统分析、系统设计和实施的最后复查。根据测试的概念和目的，在进行信息系统测试时应遵循以下基本原则：①应尽早并不断地进行测试。测试不是在应用系统开发完之后才进行的。由于原始问题的复杂性、开发各阶段的多样性以及参加人员之间的协调等因素，使得在开发各个阶段都有可能出现错误。因此，测试应贯穿在开发的各个阶段，尽早纠正错误，消除隐患。②测试工作应该避免由原开发软件的人或小组承担，一方面，开发人员往往不愿否认自己的工作，总认为自己开发的软件没有错误；另一方面，开发人员的错误很难由本人测试出来，很容易根据自己编程的思路来制定测试思路，具有局限性。测试工作应由专门人员来进行，会更客观，更有效。③设计测试方案的时候，不仅要确定输入数据，而且要根据系统功能确定预期输出结果。将实际输出结果与预期结果相比较就能发现测试对象是否正确。④在设计测试用例时，不仅要设计有效合理的输入条件，也要包含不合理、失效的输入条件。测试的时候，人们往往习惯按照合理的、正常的情况进行测试，而忽略了对异常、不合理、意想不到的情况进行测试，而这些可能就是隐患。⑤在测试程序时，不仅要检验程序是否做了该做的事，还要检验程序是否做了不该做的事。多余的工作会带来副作用，影响程序的效率，有时会带来潜在的危害或错误。⑥严格按照测试计划来进行，避免测试的随意性。测试计划应包括测试内容、进度安排、人员安排、测试环境、测试工具和测试资料等。严格地按照测试计划可以保证进度，使各方面都得以协调进行。⑦妥善保存测试计划、测试用例，作为软件文档的组成部分，为维护提供方便。⑧测试用例都是精心设计出来的，可以为重新测试或追加测试提供方便。当纠正错误、系统功能扩充后，都需要重新开始测试，而这些工作重复性很高，可以利用以前的测试用例，或在其基础上修改，然后进行测试。","analysis":"C"},{"product_id":"20140316132728","ans":"本题考查单元测试方面的基础知识。单元测试也称为模块测试，在模块编写完成且无编译错误后就可以进行。单元测试侧重于模块中的内部处理逻辑和数据结构。单元测试主要检查模块的以下5个特征：模块接口、局部数据结构、重要的执行路径、出错处理和边界条件。①模块接口。模块的接口保证了测试模块的数据流可以正确地流入、流出。在测试中应检査以下要点：•测试模块的输入参数和形式参数在个数、属性、单位上是否一致。•调用其他模块时所给出的实际参数和被调用模块的形式参数在个数、属性、单位上是否一致。•调用标准函数时所用的参数在属性、数目和顺序上是否正确。•全局变量在各模块中的定义和用法是否一致。•输入是否仅改变了形式参数。•开/关的语句是否正确。•规定的I/O格式是否与输入输出语句一致。•在使用文件之前是否已经打开文件或是用文件之后是否己经关闭文件。②局部数据结构。在单元测试中，局部数据结构出错是比较常见的错误，在测试时应重点考虑以下因素：•变量的说明是否合适。•是否使用了尚未赋值或尚未初始化的变量。•变量的初始值或默认值是否正确。•变量名是否有错（例如：拼写错误)。③重要的执行路径。在单元测试中，对路径的测试是最基本的任务。由于不能进行穷举测试，需要精心设计测试例子来发现是否有计算、比较或控制流等方面的错误。•计算方面的错误：算术运算的优先次序不正确或理解错误；精度不够；运算对象的类型彼此不相容；算法错误；表达式的符号表示不正确等。•比较和控制流的错误：本应相等的量由于精度造成不相等；不同类型进行比较；逻辑运算符不正确或优先次序错误；循环终止不正确（如多循环一次或少循环一次)、死循环；不恰当地修改循环变量；当遇到分支循环时，出口错误等。④出错处理。好的设计应该能预测到出错的条件并且有对出错处理的路径。虽然计算机可以显示出错信息的内容，但仍需要程序员对出错进行处理，保证其逻辑的正确性，以便于用户维护。⑤边界条件。边界条件的测试是单元测试的最后工作，也是非常重要的工作。软件容易在边界出现错误。","analysis":"D"},{"product_id":"20140316132808","ans":"本题考查面向对象的基本知识。在面向对象技术中，不同的对象收到同一消息可以产生完全不同的结果，这一现象叫做多态（polymorphism)。在使用多态的时候，用户可以发送一个通用的消息，而实现的细节则由接收对象自行决定。这样，同一消息就可以调用不同的方法。多态有参数多态、包含多态、过载多态和强制多态四类。参数多态是应用比较广泛的多态，被称为最纯的多态，包含多态在许多语言中都存在，最常见的例子就是子类型化，即一个类型是另一个类型的子类型。过载多态是同一个名字在不同的上下文中所代表的含义不同。","analysis":"C"},{"product_id":"20140316132906","ans":"本题考查面向对象的基本知识。面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类（父类）和子类之间共享数据和方法的机制。父类定义公共的属性和操作，一个父类可以有多个子类，即多个特例。子类可以继承其父类或祖先类中的属性和操作作为自己的内容而不必自己定义，也可以覆盖这些操作，并加入新的内容。接口是一种特殊的抽象机制，其中的操作不实现，需要由实现类来加以实现。对实现类为抽象类的，仍然可以保持操作为抽象，而如果是一个具体实现类，其中操作必须实现。题图中在接口Thingl中声明了doIt(),在图中Thing3和Thing2作为Thingl的实现类，Thing3为具体类，必须实现doIt();Thing2可以保持doIt()为抽象操作，由其子类实现此操作，Thing4为具体类，可以实现doIt()，而Thing5仍然是抽象类，也可以保持doIt()为抽象操作。","analysis":"D"},{"product_id":"20140316133005","ans":"本题考查面向对象的基本知识。面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类（父类）和子类之间共享数据和方法的机制。父类定义公共的属性和操作，一个父类可以有多个子类，即多个特例。子类可以继承其父类或祖先类中的属性和操作作为自己的内容而不必自己定义，也可以覆盖这些操作，并加入新的内容。接口是一种特殊的抽象机制，其中的操作不实现，需要由实现类来加以实现。对实现类为抽象类的，仍然可以保持操作为抽象，而如果是一个具体实现类，其中操作必须实现。题图中在接口Thingl中声明了doIt(),在图中Thing3和Thing2作为Thingl的实现类，Thing3为具体类，必须实现doIt();Thing2可以保持doIt()为抽象操作，由其子类实现此操作，Thing4为具体类，可以实现doIt()，而Thing5仍然是抽象类，也可以保持doIt()为抽象操作。","analysis":"A"},{"product_id":"20140316133240","ans":"本题考查统一建模语言（UML)的基本知识。UML2.0中提供的部署图展现了运行处理节点以及其中组件的配置，描述代码的物理模块，用于描述系统在不同计算机系统的物理分布。部署图给出了体系结构的静态实施视图。它与组件图相关，通常一个节点包含一个或多个组件，其依赖关系类似于包图。","analysis":"B"},{"product_id":"20140316133318","ans":"本题考查采用统一建模语言（UML)进行面向对象建模的基本知识。UML2.0中状态图主要用于描述对象、子系统、系统的生命周期。通过状态图可以了解到一个对象所能到达的所有状态以及对象收到的事件（消息、超时、错误、条件满足等）对对象状态的影响等。针对具有可标记的状态和复杂的行为的对象构建状态图。状态可能有嵌套的子状态，且子状态可以是一个状态图。本题图示状态图中，ON是一个超状态，它有3个子状态:Idle、Rewinding和Playing，这三个子状态之间在相关事件发生时状态之间进行迁移。playstop和rew是事件。","analysis":"C"},{"product_id":"20140316133338","ans":"本题考查采用统一建模语言（UML)进行面向对象建模的基本知识。UML2.0中状态图主要用于描述对象、子系统、系统的生命周期。通过状态图可以了解到一个对象所能到达的所有状态以及对象收到的事件（消息、超时、错误、条件满足等）对对象状态的影响等。针对具有可标记的状态和复杂的行为的对象构建状态图。状态可能有嵌套的子状态，且子状态可以是一个状态图。本题图示状态图中，ON是一个超状态，它有3个子状态:Idle、Rewinding和Playing，这三个子状态之间在相关事件发生时状态之间进行迁移。","analysis":"D"},{"product_id":"20140316133752","ans":"本题考查统一建模语言（UML)的基本知识。UML中提供了类图，它以图形化的方式描述系统中对象及其关联关系。类图专注于系统的静态视图，它对于系统的领域内容建模特别重要。在该图中还包括多重性、关联关系、泛化/特化关系以及聚合关系。其中，关联关系是双向关系，即关联的对象双方彼此都能与对方通信。本题中人（Person)和动物（Animal)之间的关联关系，表示人可以将多只动物养为宠物（Pet),这时动物的角色是pet，重数为0..*。","analysis":"A"},{"product_id":"20140316133906","ans":"本题考査设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。责任链（ChainofResponsibility)模式使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系，将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。命令（Command)模式将一个请求封装为一个对象，从而使得使用者可以采用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。抽象工厂(AbstractFactory)模式提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。观察者（Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。原型（Prototype)模式用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。工厂方法（FactoryMethod)定义一个用于创建对象的接口，让子类决定将哪一个类实例化，使一个类的实例化延迟到其子类。单例（Singleton)模式是指系统运行过程中，一个类只有一个对象实例。生成器（Builder)模式将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。适配器（Adapter)模式将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。桥接（Bridge)模式将抽象部分与其实现部分分离，使它们都可以独立地变化。组合（Composite)模式将对象组合成树形结构以表示“部分一整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。装饰器（Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。","analysis":"D"},{"product_id":"20140316134002","ans":"本题考査设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。责任链（ChainofResponsibility)模式使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系，将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。命令（Command)模式将一个请求封装为一个对象，从而使得使用者可以采用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。抽象工厂(AbstractFactory)模式提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。观察者（Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。原型（Prototype)模式用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。工厂方法（FactoryMethod)定义一个用于创建对象的接口，让子类决定将哪一个类实例化，使一个类的实例化延迟到其子类。单例（Singleton)模式是指系统运行过程中，一个类只有一个对象实例。生成器（Builder)模式将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。适配器（Adapter)模式将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。桥接（Bridge)模式将抽象部分与其实现部分分离，使它们都可以独立地变化。组合（Composite)模式将对象组合成树形结构以表示“部分一整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。装饰器（Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。","analysis":"C"},{"product_id":"20140316134021","ans":"本题考査设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。责任链（ChainofResponsibility)模式使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系，将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。命令（Command)模式将一个请求封装为一个对象，从而使得使用者可以采用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。抽象工厂(AbstractFactory)模式提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。观察者（Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。原型（Prototype)模式用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。工厂方法（FactoryMethod)定义一个用于创建对象的接口，让子类决定将哪一个类实例化，使一个类的实例化延迟到其子类。单例（Singleton)模式是指系统运行过程中，一个类只有一个对象实例。生成器（Builder)模式将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。适配器（Adapter)模式将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。桥接（Bridge)模式将抽象部分与其实现部分分离，使它们都可以独立地变化。组合（Composite)模式将对象组合成树形结构以表示“部分一整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。装饰器（Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。","analysis":"A"},{"product_id":"20140316134104","ans":"本题考査设计模式的基本概念。每种设计模式都有特定的意图，描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。责任链（ChainofResponsibility)模式使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系，将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。命令（Command)模式将一个请求封装为一个对象，从而使得使用者可以采用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。抽象工厂(AbstractFactory)模式提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。观察者（Observer)模式定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。原型（Prototype)模式用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。工厂方法（FactoryMethod)定义一个用于创建对象的接口，让子类决定将哪一个类实例化，使一个类的实例化延迟到其子类。单例（Singleton)模式是指系统运行过程中，一个类只有一个对象实例。生成器（Builder)模式将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。适配器（Adapter)模式将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。桥接（Bridge)模式将抽象部分与其实现部分分离，使它们都可以独立地变化。组合（Composite)模式将对象组合成树形结构以表示“部分一整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。装饰器（Decorator)模式描述了以透明围栏来支持修饰的类和对象的关系，动态地给一个对象添加一些额外的职责，从增加功能的角度来看，装饰器模式相比生成子类更加灵活。","analysis":"D"},{"product_id":"20140316135537","ans":"本题考查程序语言基础知识。L={anbn|n>=l}中的字符串特点是a的个数与b的个数相同，且所有的a都在b之前，该集合不是正规集，不能用正规式表示。正规集可用正规式描述，用有限自动机识别。","analysis":"D"},{"product_id":"20140316135643","ans":"本题考查程序语言翻译基础知识。符号表的作用是记录源程序中各个符号的必要信息，以辅助语义的正确性检查和代码生成，在编译过程中需要对符号表进行快速有效地査找、插入、修改和删除等操作。符号表的建立可以始于词法分析阶段，也可以放到语法分析和语义分析阶段，但符号表的使用有时会延续到目标代码的运行阶段。编译过程中，在确认源程序的语法和语义之后，就可对其进行翻译，同时改变源程序的内部表示。对于声明语句，需要记录所遇到的符号的信息，因此应进行符号表的填查工作。对于可执行语句，需要翻译成中间代码或目标代码。","analysis":"A"},{"product_id":"20140316135712","ans":"本题考查程序语言翻译蕋础知识。符兮表的作用是记录源程序中各个符号的必要信息，以辅助语义的正确性检查和代码生成，在编译过程中需要对符号表进行快速有效地査找、插入、修改和删除等操作。符号表的建立可以始于词法分析阶段，也可以放到语法分析和语义分析阶段，但符号表的使用有时会延续到目标代码的运行阶段。编译过程中，在确认源程序的语法和语义之后，就可对其进行翻译，同时改变源程序的内部表示。对于声明语句，需要记录所遇到的符号的信息，因此应进行符号表的填查工作。对于可执行语句，需要翻译成中间代码或目标代码。","analysis":"C"},{"product_id":"20140316135747","ans":"本题考查数据结构基础知识。对于长度为n的线性序列，若采用顺序表（一维数组）存储，则每个元素的位序与存储该元素的数组元素下标有直接的对应关系，可进行随机查找，时间复杂度为0(1);若采用单链表存储，则只能进行顺序访问，即必须从头指针出发，结合计数顺着指针链找到指定序号的元素，时间复杂度为0(n)。","analysis":"B"},{"product_id":"20140316135914","ans":"本题考査数据结构基础知识。栈是一种后进先出的数据结构。本问题中，根据元素入栈次序及出栈序列，每次需要出栈操作时栈的状态如下图所示，从中可以看出，栈中的元素个数最多时为4。","analysis":"B"},{"product_id":"20140316140120","ans":"本题考查数据结构基础知识。该双端队列具有两个入口，所以e1、e2、e3进入队列后，从出口看可形成如下排列:先出e1，则得到e1e2e3先出e2，则得到e2e1e3先出e3，则得到e3e1e2或e3e2e1要在输出序列中首先得到e4,元素e4只能从出口端进入队列，结合前三个元素的可能排列，因此以e4打头的输出序列有：e4e1e2e3，e4e2e1e3,e4e3e1e2,e4e3e2e1。","analysis":"D"},{"product_id":"20140316140146","ans":"本题考査数据库系统概念方面的基本概念。在数据库系统中，当视图创建完毕后，数据字典中存放的是视图定义。视图是从一个或者多个表或视图中导出的表，其结构和数据是建立在对应表的査询基础上的。和真实的表一样，视图也包括几个被定义的数据列和多个数据行，但从本质上讲，这些数据列和数据行来源于其所引用的表。因此，视图不是真实存在的基础表，而是一个虚拟表，视图所对应的数据并不实际地以视图结构存储在数据库中，而是存储在视图所引用的基本表中。","analysis":"D"},{"product_id":"20140316140222","ans":"本题考查关系模式和关系规范化方面的基础知识。根据题意可以求出R1(A，B,C，D)的函数依赖集F1={A—>B，A—>C，C—>D},R2(A，E，G)的函数依赖集F2={AE—>G}，而F=F1+F2,所以分解后的关系模式保持函数依赖。","analysis":"B"},{"product_id":"20140316140338","ans":"本题考查SQL方面的基础知识。SQL提供可为关系和属性重新命名的机制，这是通过使用具有“Old-nameasnew-name”形式的as子句来实现的。As子句既可出现在select子句，也可出现在from子句中。查询在读研究生的教师的平均工资、最高与最低工资之间差值需要用条件“Students.院系=Teachers.院系ANDStudents.类另H研究生’”来限定。因为第一条SELECT语句是从Students关系中查找女研究生的姓名和通信地址，故用条件“性别=’女1AND类别=’研究生’”来限定；第二条SELECT语句查询是从Teachers关系中查找工资大于等于3500元的教师的姓名和通信地址，故用条件“工资>=3500”限定。又因为，第一条SELECT语句查询和第二条SELECT语句查询的结果集模式都为(姓名，通信地址)，故可以用“INTERSECT”对它们取交集。","analysis":"A"},{"product_id":"20140316140402","ans":"本题考查SQL方面的基础知识。SQL提供可为关系和属性重新命名的机制，这是通过使用具有“Old-nameasnew-name”形式的as子句来实现的。As子句既可出现在select子句，也可出现在from子句中。查询在读研究生的教师的平均工资、最高与最低工资之间差值需要用条件“Students.院系=Teachers.院系ANDStudents.类另H研究生’”来限定。因为第一条SELECT语句是从Students关系中查找女研究生的姓名和通信地址，故用条件“性别=’女1AND类别=’研究生’”来限定；第二条SELECT语句查询是从Teachers关系中查找工资大于等于3500元的教师的姓名和通信地址，故用条件“工资>=3500”限定。又因为，第一条SELECT语句查询和第二条SELECT语句查询的结果集模式都为(姓名，通信地址)，故可以用“INTERSECT”对它们取交集。","analysis":"C"},{"product_id":"20140316140525","ans":"本题考查SQL方面的基础知识。SQL提供可为关系和属性重新命名的机制，这是通过使用具有“Old-nameasnew-name”形式的as子句来实现的。As子句既可出现在select子句，也可出现在from子句中。查询在读研究生的教师的平均工资、最高与最低工资之间差值需要用条件“Students.院系=Teachers.院系ANDStudents.类另H研究生’”来限定。因为第一条SELECT语句是从Students关系中查找女研究生的姓名和通信地址，故用条件“性别=’女1AND类别=’研究生’”来限定；第二条SELECT语句查询是从Teachers关系中查找工资大于等于3500元的教师的姓名和通信地址，故用条件“工资>=3500”限定。又因为，第一条SELECT语句查询和第二条SELECT语句查询的结果集模式都为(姓名，通信地址)，故可以用“INTERSECT”对它们取交集。","analysis":"D"},{"product_id":"20140316140546","ans":"本题考查SQL方面的基础知识。SQL提供可为关系和属性重新命名的机制，这是通过使用具有“Old-nameasnew-name”形式的as子句来实现的。As子句既可出现在select子句，也可出现在from子句中。查询在读研究生的教师的平均工资、最高与最低工资之间差值需要用条件“Students.院系=Teachers.院系ANDStudents.类另H研究生’”来限定。因为第一条SELECT语句是从Students关系中查找女研究生的姓名和通信地址，故用条件“性别=’女1AND类别=’研究生’”来限定；第二条SELECT语句查询是从Teachers关系中查找工资大于等于3500元的教师的姓名和通信地址，故用条件“工资>=3500”限定。又因为，第一条SELECT语句查询和第二条SELECT语句查询的结果集模式都为(姓名，通信地址)，故可以用“INTERSECT”对它们取交集。","analysis":"A"},{"product_id":"20140316140729","ans":"本题考查算法设计和分析知识。竹包问题是典型的算法问题，包括两种形式，即0-1背包问题和部分背包问题。0-1背包问题是指每个物品或者全部放在背包中或者不放在背包中，求解在特定背包容量下装入背包物品的最大价值。部分背包问题中，每个物品可以部分地放入背包中，求解在特定背包容量下装入背包物品的最大价值。基于单位重量价值最大优先的策略来将物品放入背包中，本质上是一种贪心的策略。在该策略下求0-1背包问题，不能确保得到最优解，事实上在本题给出实例中是得不到最优解的。而对于部分背包问题，是可以得到最优解的。基于单位重量价值最大优先策略求解本题给出的实例。对于0-1背包问题，首先将物品1、2和3放入背包中，4和5都不能再放入背包，此时背包重量为5+25+30=60,获得价值50+200+180=430。对于部分背包问题首先将物品1、2和3放入背包中，此时背包重量为60，获得价值430，此时还有剩余容量100-60=40，可以将部分物品4放入背包，放入40/45=8/9的物品4,价值为225*8/9=200,因此得到的总价值为430+200=630。","analysis":"B"},{"product_id":"20140316140746","ans":"本题考查算法设计和分析知识。竹包问题是典型的算法问题，包括两种形式，即0-1背包问题和部分背包问题。0-1背包问题是指每个物品或者全部放在背包中或者不放在背包中，求解在特定背包容量下装入背包物品的最大价值。部分背包问题中，每个物品可以部分地放入背包中，求解在特定背包容量下装入背包物品的最大价值。基于单位重量价值最大优先的策略来将物品放入背包中，本质上是一种贪心的策略。在该策略下求0-1背包问题，不能确保得到最优解，事实上在本题给出实例中是得不到最优解的。而对于部分背包问题，是可以得到最优解的。基于单位重量价值最大优先策略求解本题给出的实例。对于0-1背包问题，首先将物品1、2和3放入背包中，4和5都不能再放入背包，此时背包重量为5+25+30=60,获得价值50+200+180=430。对于部分背包问题首先将物品1、2和3放入背包中，此时背包重量为60，获得价值430，此时还有剩余容量100-60=40，可以将部分物品4放入背包，放入40/45=8/9的物品4,价值为225*8/9=200,因此得到的总价值为430+200=630。","analysis":"C"},{"product_id":"20140316140942","ans":"本题考查算法设计和分析知识。本题给出的问题求解算法包括两个部分，归并排序和搜索元素。归并排序是一个采用分治策略的经典排序算法；而搜索过程则是从两端往里判断是否存在ai+apx,此过程不涉及到分治、贪心、动态规划和回溯等策略。因此算法采用的是分治策略。算法的时间复杂度也是从两个部分分析得到的。归并排序的时间复杂度为O(nlgn);而搜索过程的时间复杂度为0(n)。因此算法的时间复杂度为O(nlgn)。","analysis":"A"},{"product_id":"20140316141014","ans":"本题考查算法设计和分析知识。本题给出的问题求解算法包括两个部分，归并排序和搜索元素。归并排序是一个采用分治策略的经典排序算法；而搜索过程则是从两端往里判断是否存在ai+apx,此过程不涉及到分治、贪心、动态规划和回溯等策略。因此算法采用的是分治策略。算法的时间复杂度也是从两个部分分析得到的。归并排序的时间复杂度为O(nlgn);而搜索过程的时间复杂度为0(n)。因此算法的时间复杂度为O(nlgn)。","analysis":"B"},{"product_id":"20140316141054","ans":"本题考査数据结构基础知识。用验证的方法求解，以高度为3的满二叉树（如下图所示）为例进行说明。从中可以看出，若n=2m+l，则结点n是m的右孩子结点。","analysis":"D"},{"product_id":"20140316141152","ans":"本题考查数据结构基础知识。哈希表是通过一个以记录的关键字为自变量的函数（称为哈希函数）得到该记录的存储地址而构造的查找表，所以在哈希表中进行查找操作时，必须用同一哈希函数计算得到待查记录的存储地址，然后到相应的存储单元里去获得有关信息再判定查找是否成功。冲突是指哈希函数将关键字不同的元素映射到了同一个存储地址。要减少冲突，就要设法使哈希函数尽可能均匀地把关键字映射到存储区的各个存储地址上，这样就可以提高查找效率。构造哈希函数时，一般应使关键字的所有组成部分都能起作用。","analysis":"B"},{"product_id":"20140316141310","ans":"集线器连接的主机构成一个冲突域，交换机的每个端口属于一个冲突域，路由器连接的两部分网络形成两个广播域，所以共有两个广播域和5个冲突域。","analysis":"C"},{"product_id":"20140316141344","ans":"把网络117.15.32.0/23划分为117.15.32.0/27,则子网掩码扩大了4位，所以得到的子网是16个。由于子网掩码为27位，所以主机地址只占5位，每个子网中可使用的主机地址是30个。","analysis":"C"},{"product_id":"20140316141423","ans":"把网络117.15.32.0/23划分为117.15.32.0/27,则子网掩码扩大了4位，所以得到的子网是16个。由于子网掩码为27位，所以主机地址只占5位，每个子网中可使用的主机地址是30个。","analysis":"A"},{"product_id":"20140316141502","ans":"本试题考查各网络应用采用的下层传输协议。浏览网页、Telnet远程登录以及发送邮件应用均不允许数据的丢失，需要采用可靠的传输层协议TCP,而VoIP允许某种程度上的数据丢失，采用不可靠的传输层协议UDP。","analysis":"C"},{"product_id":"20140316141542","ans":"本题考查Windows的DNS服务器实现负载均衡的相关操作。在Windows的DNS服务器中基于DNS的循环（roundrobin),只需要为同一个域名设置多个ip主机记录就可以了，DNS中没有转发器的概念，因此需要启用循环，添加每个Web服务器的主机记录就可以确保域名解析并实现负载均衡。","analysis":"D"},{"product_id":"20140316141829","ans":"现在，其实也是这样的情况。因为左手不知道右手在做什么，所以进度灾难、功能的不合理和系统缺陷纷纷出现。随着工作的进行，许多小组慢慢地修改自己程序的功能、规模和速度，他们明确或者隐含地更改了一些有效输入和输出结果用法上的约定。例如，程序覆盖（program-overlay)功能的实现者遇到了问题，并且统计报告显示了应用程序很少使用该功能。基于这些考虑，他降低了覆盖功能的速度。与此同时，整个开发队伍中，其他同事正在设计监控程序。监控程序在很大程度上依赖于覆盖功能，它在速度上的变化成为了主要的规格说明变更。因此需要从系统角度来考虑和衡量该变化，以及公开、广泛地发布变更结果。那么，团队如何进行相互之间的交流沟通呢？通过所有可能的途径。非正式途径，清晰定义小组内部的相互关系和充分利用电话，能鼓励大量的电话沟通，从而达到对所书写文档的共同理解。会议，常规项目会议。会议中，团队一个接一个地进行简要的技术陈述。这种方式非常有用，能澄清成百上千的细小误解。工作手册，在项目的开始阶段，应该准备正式的项目工作手册。","analysis":"B"},{"product_id":"20140316141852","ans":"现在，其实也是这样的情况。因为左手不知道右手在做什么，所以进度灾难、功能的不合理和系统缺陷纷纷出现。随着工作的进行，许多小组慢慢地修改自己程序的功能、规模和速度，他们明确或者隐含地更改了一些有效输入和输出结果用法上的约定。例如，程序覆盖（program-overlay)功能的实现者遇到了问题，并且统计报告显示了应用程序很少使用该功能。基于这些考虑，他降低了覆盖功能的速度。与此同时，整个开发队伍中，其他同事正在设计监控程序。监控程序在很大程度上依赖于覆盖功能，它在速度上的变化成为了主要的规格说明变更。因此需要从系统角度来考虑和衡量该变化，以及公开、广泛地发布变更结果。那么，团队如何进行相互之间的交流沟通呢？通过所有可能的途径。非正式途径，清晰定义小组内部的相互关系和充分利用电话，能鼓励大量的电话沟通，从而达到对所书写文档的共同理解。会议，常规项目会议。会议中，团队一个接一个地进行简要的技术陈述。这种方式非常有用，能澄清成百上千的细小误解。工作手册，在项目的开始阶段，应该准备正式的项目工作手册。","analysis":"A"},{"product_id":"20140316141914","ans":"现在，其实也是这样的情况。因为左手不知道右手在做什么，所以进度灾难、功能的不合理和系统缺陷纷纷出现。随着工作的进行，许多小组慢慢地修改自己程序的功能、规模和速度，他们明确或者隐含地更改了一些有效输入和输出结果用法上的约定。例如，程序覆盖（program-overlay)功能的实现者遇到了问题，并且统计报告显示了应用程序很少使用该功能。基于这些考虑，他降低了覆盖功能的速度。与此同时，整个开发队伍中，其他同事正在设计监控程序。监控程序在很大程度上依赖于覆盖功能，它在速度上的变化成为了主要的规格说明变更。因此需要从系统角度来考虑和衡量该变化，以及公开、广泛地发布变更结果。那么，团队如何进行相互之间的交流沟通呢？通过所有可能的途径。非正式途径，清晰定义小组内部的相互关系和充分利用电话，能鼓励大量的电话沟通，从而达到对所书写文档的共同理解。会议，常规项目会议。会议中，团队一个接一个地进行简要的技术陈述。这种方式非常有用，能澄清成百上千的细小误解。工作手册，在项目的开始阶段，应该准备正式的项目工作手册。","analysis":"D"},{"product_id":"20140316142021","ans":"现在，其实也是这样的情况。因为左手不知道右手在做什么，所以进度灾难、功能的不合理和系统缺陷纷纷出现。随着工作的进行，许多小组慢慢地修改自己程序的功能、规模和速度，他们明确或者隐含地更改了一些有效输入和输出结果用法上的约定。例如，程序覆盖（program-overlay)功能的实现者遇到了问题，并且统计报告显示了应用程序很少使用该功能。基于这些考虑，他降低了覆盖功能的速度。与此同时，整个开发队伍中，其他同事正在设计监控程序。监控程序在很大程度上依赖于覆盖功能，它在速度上的变化成为了主要的规格说明变更。因此需要从系统角度来考虑和衡量该变化，以及公开、广泛地发布变更结果。那么，团队如何进行相互之间的交流沟通呢？通过所有可能的途径。非正式途径，清晰定义小组内部的相互关系和充分利用电话，能鼓励大量的电话沟通，从而达到对所书写文档的共同理解。会议，常规项目会议。会议中，团队一个接一个地进行简要的技术陈述。这种方式非常有用，能澄清成百上千的细小误解。工作手册，在项目的开始阶段，应该准备正式的项目工作手册。","analysis":"C"},{"product_id":"20140316142042","ans":"现在，其实也是这样的情况。因为左手不知道右手在做什么，所以进度灾难、功能的不合理和系统缺陷纷纷出现。随着工作的进行，许多小组慢慢地修改自己程序的功能、规模和速度，他们明确或者隐含地更改了一些有效输入和输出结果用法上的约定。例如，程序覆盖（program-overlay)功能的实现者遇到了问题，并且统计报告显示了应用程序很少使用该功能。基于这些考虑，他降低了覆盖功能的速度。与此同时，整个开发队伍中，其他同事正在设计监控程序。监控程序在很大程度上依赖于覆盖功能，它在速度上的变化成为了主要的规格说明变更。因此需要从系统角度来考虑和衡量该变化，以及公开、广泛地发布变更结果。那么，团队如何进行相互之间的交流沟通呢？通过所有可能的途径。非正式途径，清晰定义小组内部的相互关系和充分利用电话，能鼓励大量的电话沟通，从而达到对所书写文档的共同理解。会议，常规项目会议。会议中，团队一个接一个地进行简要的技术陈述。这种方式非常有用，能澄清成百上千的细小误解。工作手册，在项目的开始阶段，应该准备正式的项目工作手册。","analysis":"D"}]},{"paperId":"72","field":"20122","question_list":[{"product_id":"20140301093407","ans":"本题考查计算机系统硬件方面的基础知识。计算机中的CPU是硬件系统的核心，用于数据的加工处理，能完成各种算术、逻辑运算及控制功能。其中，控制器的作用是控制整个计算机的各个部件有条不紊地工作，它的基本功能就是从内存取指令和执行指令。","analysis":"B"},{"product_id":"20140301093511","ans":"本题考査数据校验基础知识。计算机系统运行时，各个部件之间要进行数据交换，为了确保数据在传送过程中正确无误，一是提高硬件电路的可靠性；二是提高代码的校验能力，包括查错和纠错。常用的三种校验码：奇偶校验码（ParityCodes)、海明码（HammingCode)和循环冗余校验（CyclicRedundancyCheck，CRC)码。循环冗余校验码广泛应用于数据通信领域和磁介质存储系统中。它利用生成多项式为k个数据位产生r个校验位来进行编码，其编码长度为k+r。CRC的代码格式为：","analysis":"A"},{"product_id":"20140301094903","ans":"本题考查数据表示基础知识。各种数据在计算机中表示的形式称为机器数，其特点是采用二进制计数制，数的符号用0、1表示，小数点则隐含表示而不占位置。机器数对应的实际数值称为数的真值。为了便于运算，带符号的机器数可采用原码、反码、补码和移码等不同的编码方法。所谓定点数，就是表示数据时小数点的位置固定不变。小数点的位置通常有两种约定方式：定点整数（纯整数，小数点在最低有效数值位之后）和定点小数（纯小数，小数点在最高有效数值位之前)。当机器字长为n时，定点数的补码和移码可表示2^n个数，而其原码和反码只能表示2^n-1个数（0表示占用了两个编码)，因此，定点数所能表示的数值范围比较小，运算中很容易因结果超出范围而溢出。数的浮点表示的一般形式为：N=2E×F,其中E称为阶码，F为尾数。阶码通常为带符号的纯整数，尾数为带符号的纯小数。浮点数的表示格式如下：很明显，一个数的浮点表示不是唯一的。当小数点的位置改变时，阶码也相应改变，因此可以用多种浮点形式表示同一个数。浮点数所能表示的数值范围主要由阶码决定，所表示数值的精度则由尾数决定。","analysis":"B"},{"product_id":"20140301095015","ans":"本题考查存储系统的基础知识。存储系统中的存储器，按访问方式可分为按地址访问的存储器和按内容访问的存储器；按寻址方式分类可分为随机存储器、顺序存储器和直接存储器。随机存储器（RandomAccessMemory,RAM)指可对任何存储单元存入或读取数据，访问任何一个存储单元所需的时间是相同的。顺序存储器（SequentiallyAddressedMemory,SAM)指访问数据所需要的时间与数据所在的存储位置相关，磁带是典型的顺序存储器。直接存储器（DirectAddressedMemory，DAM)是介于随机存取和顺序存取之间的一种寻址方式。磁盘是一种直接存取存储器，它对磁道的寻址是随机的，而在一个磁道内，则是顺序寻址。相联存储器是一种按内容访问的存储器。其工作原理就是把数据或数据的某一部分作为关键字，将该关键字与存储器中的每一单元进行比较，从而找出存储器中所有与关键字相同的数据字。","analysis":"C"},{"product_id":"20140301095105","ans":"本题考查计算机系统硬件方面的基础知识。中断方式下的数据传送是当I/O接口准备好接收数据或准备好向CPU传送数据时，就发出中断信号通知CPU。对中断信号进行确认后，CPU保存正在执行的程序的现场，转而执行提前设置好的I/O中断服务程序，完成一次数据传送的处理。这样，CPU就不需要主动查询外设的状态，在等待数据期间可以执行其他程序，从而提高了CPU的利用率。采用中断方式管理I/O设备，CPU和外设可以并行地工作。程序查询方式下，CPU通过执行程序查询外设的状态，判断外设是否准备好接收数据或准备好了向CPU输入的数据。直接内存存取（DirectMemoryAccess,DMA)方式的基本思想是通过硬件控制实现主存与I/O设备间的直接数据传送，数据的传送过程由DMA控制器（DMAC)进行控制，不需要CPU的干预。在DMA方式下，由CPU启动传送过程，即向设备发出“传送一块数据”的命令，在传送过程结束时，DMAC通过中断方式通知CPU进行一些后续处理工作。","analysis":"D"},{"product_id":"20140301095156","ans":"本题考查计算机系统的基础知识。系统总线又称内总线或板级总线，在微机系统中用来连接各功能部件而构成一个完整的微机系统。系统总线包含有三种不同功能的总线，即数据总线DB(DataBus)、地址总线AB(AddressBus)和控制总线CB(ControlBus)。ISA(IndustrialStandardArchitecture)总线标准是IBM公司1984年为推出PC/AT机而建立的系统总线标准，所以也叫AT总线。它是对XT总线的扩展，以适应8/16位数据总线要求。EISA总线是1988年由Compaq等9家公司联合推出的总线标准。它在ISA总线的基础上使用双层插座，在原来ISA总线的98条信号线上又增加了98条信号线，也就是在两条ISA信号线之间添加一条EISA信号线。在实用中，EISA总线完全兼容ISA总线信号。PCI(PeripheralComponentInterconnect)总线是当前最流行的总线之一，它是由Intel公司推出的一种局部总线。它定义了32位数据总线，且可扩展为64位。PCI总线主板插槽的体积比原ISA总线插槽还小，支持突发读写操作，最大传输速率可达132MB/S，可同时支持多组外围设备。PCI局部总线不能兼容现有的ISA、EISA、MCA(MicroChannelArchitecture)总线，但它不受制于处理器，是基于奔腾等新一代微处理器而发展的总线。SCSI(SmallComputerSystemInterface)是一种用于计算机和智能设备之间（硬盘、软驱、光驱、打印机、扫描仪等）系统级接口的独立处理器标准。","analysis":"C"},{"product_id":"20140301095239","ans":"本题考查安全协议方面的基础知识。SSL(SecureSocketLayer，安全套接层）是Netscape于1994年开发的传输层安全协议，用于实现Web安全通信。1996年发布的SSL3.0协议草案己经成为一个事实上的Web安全标准。TLS(TransportLayerSecurity,传输层安全协议）是IETF制定的协议，它建立在SSL3.0协议规范之上，是SSL3.0的后续版本。","analysis":"B"},{"product_id":"20140301095711","ans":"本题考查数字签名和数字证书方面的知识。基于公钥的数字签名系统如下图所示：A为了向B发送消息P，A用自己的私钥对P签名后再用B的公钥对签名后的数据加密，B收到消息后先用B的私钥解密后在用A的公钥认证A的签名以及消息的真伪。","analysis":"A"},{"product_id":"20140301095757","ans":"用户B收到用户A带数字签名的消息M，为了验证M的真实性，首先需要从CA获取用户A的数字证书，验证证书的真伪需要用CA的公钥验证CA的签名，验证M的真实性需要用用户A的公钥验证用户A的签名。","analysis":"C"},{"product_id":"20140301095839","ans":"本题考查知识产权基础知识。关于软件著作权的取得，《计算机软件保护条例》规定：“软件著作权自软件开发完成之日起产生。”即软件著作权自软件开发完成之日起自动产生，不论整体还是局部，只要具备了软件的属性即产生软件著作权，既不要求履行任何形式的登记或注册手续，也无须在复制件上加注著作权标记，也不论其是否己经发表都依法享有软件著作权。软件开发经常是一项系统工程，一个软件可能会有很多模块，而每一个模块能够独立完成某一项功能。自该模块开发完成后就产生了著作权。软件公司享有商业秘密权。因为一项商业秘密受到法律保护的依据，必须具备构成商业秘密的三个条件，即不为公众所知悉、具有实用性、采取了保密措施。商业秘密权保护软件是以软件中是否包含着“商业秘密”为必要条件的。该软件公司组织开发的应用软件具有商业秘密的特征，即包含着他人不能知道到的技术秘密；具有实用性，能为软件公司带来经济效益；对职工进行了保密的约束，在客观上已经采取相应的保密措施。所以软件公司享有商业秘密权。商标权、专利权不能自动取得，申请人必须履行商标法、专利法规定的申请手续，向国家行政部门提交必要的申请文件，申请获准后即可取得相应权利。获准注册的商标通常称为注册商标。","analysis":"C"},{"product_id":"20140301095938","ans":"本题考查考生知识产权方面的基础知识。专利法意义上的发明人必须是：第一，直接参加发明创造活动。在发明创造过程中，只负责组织管理工作或者是对物质条件的利用提供方便的人，不应当被认为是发明人；第二，必须是对发明创造的实质性特点作出创造性贡献的人。仅仅提出发明所要解决的问题而未对如何解决该问题提出具体意见的，或者仅仅从事辅助工作的人，不视为发明人或者设计人。有了发明创造不一定就能成为专利权人。发明人或设计人是否能够就其技术成果申请专利，还取决于该发明创造与其职务工作的关系。一项发明创造若被认定为职务发明创造，那么该项发明创造申请并获得专利的权利为该发明人或者设计人所属单位所有。根据专利法规定，职务发明创造分为两种情形：一是执行本单位的任务所完成的发明创造，二是主要是利用本单位的物质技术条件所完成的发明创造。《专利法实施细则》对“执行本单位的任务所完成的发明创造”和“本单位的物质技术条件”又分别作出了解释。所谓执行本单位的任务所完成的发明创造是指：①在本职工作中作出的发明创造；②履行本单位交付的本职工作之外的任务所作出的发明创造；③退职、退休或者调动工作后一年内所作出的，与其在原单位承担的本职工作或原单位分配的任务有关的发明创造。职务发明创造的专利申请权属于发明人所在的单位，但发明人或者设计人仍依法享有发明人身份权和获得奖励报酬的权利。","analysis":"C"},{"product_id":"20140301100021","ans":"本题考查多媒体方面的基础知识。BMP图像文件格式是Windows操作系统采用的图像文件格式，BMP采用位映射存储格式，除了图像深度可选以外，一般不采用其他任何压缩，所以占用的存储空间较大。JPEG图像文件格式是一种有损压缩的静态图像文件存储格式，压缩比例可以选择，支持灰度图像、RGB真彩色图像和CMYK真彩色图像。JPG格式文件的压缩比例很高，非常适用于处理大量图像的场合。TIFF是电子出版CD-ROM中的一个图像文件格式。TIFF格式非常灵活易变，它又定义了4类不同的格式：TIFF-B适用于二值图像；TIFF-G适用于黑白灰度图像；TIFF-P适用于带调色板的彩色图像；TIFF-R适用于RGB真彩图像。无论在视觉上还是其他方面，都能把任何图像编码成二进制形式而不丢失任何属性。GIF图像文件格式以数据块为单位来存储图像的相关信息，采用了LZW无损压缩算法按扫描行压缩图像数据。它可以在一个文件中存放多幅彩色图像，每一幅图像都由一个图像描述符、可选的局部彩色表和图像数据组成。如果把存储于一个文件中的多幅图像逐幅读出来显示到屏幕上，可以像播放幻灯片那样显示或者构成简单的动画效果。GIF定义了两种数据存储方式，一种是按行连续存储，存储顺序与显示器的显示顺序相同；另一种是按交叉方式存储，由于显示图像需要较长的时间，使用这种方法存放图像数据，用户可以在图像数据全部收到之前这幅图像的全貌，而不觉得等待时间太长。采用图像文件格式支持实现的显示效果与通过软件的实现方式相比，循环显示图像的数量、每幅图像显示的时间、透明度变化等参数受图像文件格式的限制，而通过软件方式实现显示效果的各项参数则可以灵活配置。","analysis":"C"},{"product_id":"20140301100114","ans":"本题考查多媒体基础知识。流媒体是指在网络中使用流式传输技术的连续时基媒体，而流媒体技术是指把连续的影像和声音信息经过压缩处理之后放到专用的流服务器上，让浏览者一边下载一边观看、收听，而不需要等到整个多媒体文件下载完成就可以即时观看和收听的技术。流媒体融合了多种网络以及音视频技术，在网络中要实现流媒体技术，必须完成流媒体的制作、发布、传播、播放等环节。JPEG累进（或增量、渐进、递增、progressive)编码模式，这样可以实现图像内容的方式传输，在浏览器上的直观效果是无需过久等待即可看到模糊的图像，然后图像显示内容由模糊逐渐变得清晰。GIF图像文件格式以数据块为单位来存储图像的相关信息，采用了LZW无损压缩算法按扫描行压缩图像数据。它可以在一个文件中存放多幅彩色图像，每一幅图像都由一个图像描述符、可选的局部彩色表和图像数据组成。如果把存储于一个文件中的多幅图像逐幅读出来显示到屏幕上，可以像播放幻灯片那样显示或者构成简单的动画效果。GIF定义了两种数据存储方式，一种是按行连续存储，存储顺序与显示器的显示顺序相同；另一种是按交叉方式存储，由于显示图像需要较长的时间，使用这种方法存放图像数据，用户可以在图像数据全部收到之前这幅图像的全貌，而不觉得等待时间太长。图像信号是一种模拟信号，计算机要对它进行处理，必须将它转换成为数字图像信号，即用二进制数字的编码形式来表示图像，转换过程一般称为A/D转换（模数转换)。将图像播放出来，需进行D/A转换（数模转换)。","analysis":"D"},{"product_id":"20140301100202","ans":"本题考查多媒体基础知识。视频信息是指活动的、连续的图像序列。一幅图像称为一帧，帧是构成视频信息的基本单元。全屏幕视频是指显示的视频图像充满整个屏幕，能以30顿/秒的速度刷新画面，使画面不会产生闪烁和不连贯的现象。电视机、激光视盘、摄像机等都可提供丰富多彩的模拟视频信号，常常需要把这些信号与计算机图形图像结合在一个共同的空间，通过处理达到最佳的效果，然后输出到计算机的显示器或其他电视设备上。模拟视频信号进入计算机，首先需要解决模拟视频信息的数字化问题。视频数字化的目的是将模拟信号经模数转换和彩色空间变换等过程，转换成计算机可以显示和处理的数字信号。由于电视和计算机的显示机制不同，因此要在计算机上显示视频图像需要作许多处理。例如，电视是隔行扫描，计算机的显示器通常是逐行扫描；电视是亮度（Y)和色度（C)的复合编码，而PC机的显示器工作在RGB空间；电视图像的分辨率和显示屏的分辨率也各不相同等。这些问题在电视图像数字化过程中都需考虑。一般，对模拟视频信息进行数字化采取如下方式：①先从复合彩色电视图像中分离出彩色分量，然后数字化。目前市场上的大多数电视信号都是复合的全电视信号，如录像带、激光视盘等存储设备上的电视信号。对这类信号的数字化，通常是将其分离成YUV、YIQ或RGB彩色空间的分量信号，然后用3个A/D转换器分别进行数字化。这种方式称为复合数字化。②先对全彩色电视信号数字化，然后在数字域中进行分离，以获得YUV、YIQ或RGB分量信号。用这种方法对电视图像数字化时，只需一个髙速A/D转换器。这种方式称为分量数字化。分量数字化方式是较多使用的一种方式。电视信号使用的彩色空间是YUV空间，即每幅彩色画面有亮度（Y)和色度（U、V)3个分量，对这3个分量需分别进行取样和量化，得到一幅数字图像。由于人眼对色度信号的敏感程度远不如对亮度信号那么灵敏，所以色度信号的取样频率可以比亮度信号的取样频率低一些，以减少数字视频的数据量。","analysis":"A"},{"product_id":"20140301100256","ans":"数据流图是结构化分析方法的重要模型，用于描述系统的功能、输入、输出和数据存储等。在绘制数据流图中，每条数据流的起点或者终点必须是加工，即至少有一端是加工。在分层数据流图中，必须要保持父图与子图平衡。每个加工必须既有输入数据流又有输出数据流。必须要保持数据守恒。也就是说，一个加工所有输出数据流中的数据必须能从该加工的输入数据流中直接获得，或者是通过该加工能产生的数据。","analysis":"C"},{"product_id":"20140301100541","ans":"该活动图的关键路径为ADFHL关键路径长度为48天，因此里程碑D在关键路径上，B、C和I步骤关键路径上。","analysis":"C"},{"product_id":"20140301100617","ans":"活动FG的最早开始时间为第18天，最晚开始时间为第38天，因此松弛时间为20天。","analysis":"B"},{"product_id":"20140301100703","ans":"模块的作用范围定义为受该模块内一个判定影响的模块集合，模块的控制范围为模块本身以及所有直接或间接从属于该模块的模块集合。其作用范围应该在控制范围之内。","analysis":"A"},{"product_id":"20140301100817","ans":"定义风险参照水准是风险评估的一类技术，对于大多数软件项目来说成本、速度和性能是三种典型的风险参照水准。","analysis":"C"},{"product_id":"20140301100903","ans":"本题考査程序语言基础知识。脚本语言又被称为扩建的语言，或者动态语言，是一种编程语言，通常以文本（如ASCII)保存，只在被调用时进行解释或编译。Python是一种脚本语言。","analysis":"A"},{"product_id":"20140301101022","ans":"本题考查程序语言基础知识。aa*bb*表示的字符串特点是：若干个a之后跟若干个b，a和b都至少出现1次。a*bb*表示的字符串特点是：若干个a之后跟若干个b，a可以不出现，b至少出现1次。aa*b*表示的字符串特点是：若干个a之后跟若干个b，a至少出现1次，b可以不出现。a*b*表示的字符串特点是：若干个a之后跟若干个b，a和b都可以不出现。语言L={ambn|m≥0,n≥1}中，若干个a之后跟若干个b，a可以不出现，b至少出现1次。","analysis":"B"},{"product_id":"20140301101203","ans":"本题考查程序语言基础知识。后缀式即逆波兰式，是逻辑学家卢卡西维奇发明的一种表示表达式的方法。这种表示方式把运算符写在运算对象的后面，例如，把a+b写成ab+。这种表示法的优点是根据运算对象和算符的出现次序进行计算，不需要使用括号。(a-b)*c+d的后缀式是ab-c*d+。","analysis":"C"},{"product_id":"20140301101246","ans":"本题考查操作系统进程管理方面的基础知识。假设系统为每个进程分配了2个资源，对于选项C,系统还剩余1个资源，能保证5个进程中的一个进程运行完毕。当该进程释放其占有的资源，系统可用资源数为3个，能保证未完成的4个进程中的3个进程运行完毕。当这3个进程释放其占有的资源，系统可用资源数为9个，显见能确保最后一个进程运行完。","analysis":"C"},{"product_id":"20140301102053","ans":"本题考查操作系统前驱图方面的基础知识。前趋图是一个有向无循环图，由节点和有向边组成，节点代表各程序段的操作，而节点间的有向边表示两个程序段操作之间存在的前趋关系（“―>”)。程序段Pi和Pj的前趋关系可表示成Pi—Pj，其中Pi是Pj的前趋，Pj是Pi的后继，其含义是Pi执行结束后Pj才能执行。本题完整的前趋图如下图所示。根据题意，I1执行结束后C1才能执行，C1执行结束后P1才能执行，因此I1是C1、P1,的前趋，（C1是P1,的前趋。可见，图中③应为C1。又因为计算机系统中只有一台输入设备，所以I1执行结束后I2和I3才能执行，故I1是I2和I3的前趋，I2是I3的前趋。可见，图中①、②分别为I2、I3。综上分析③应为C1,所以C1是P1的前趋，又因为计算机中只有一个CPU,而且采用优先级调动，所以C1是C2的前趋,所以C2是④。由于计算机中只有一台输出设备，所以P1,执行结束后P2才能执行，所以P1是P2的前趋，P2执行结束后P3才能执行，P2是P3的前趋，所以,⑤、⑥分别为P2和P3","analysis":"B"},{"product_id":"20140301102521","ans":"经上分析③应为C1，所以C1是P1的前驱。又因为计算机系统中只有一个CPU，而且系统采用优先级调度，所以C1是C2的前趋，C2是C3的前趋。可见，图中④应为C2。","analysis":"A"},{"product_id":"20140301104336","ans":"因为计算机系统中只有一台输出设备，所以P1执行结束后P2才能执行，故P1是P2的前趋；p2执行结束后p3才能执行，p2是p3的前趋。可见，图中⑤、⑥分别为p2、P3","analysis":"C"},{"product_id":"20140301104736","ans":"本题考查操作系统文件管理方面的基础知识。根据题意，磁盘索引块为1KB字节，每个地址项大小为4字节，故每个磁盘索引块可存放1024/4=256个物理块地址。又因为文件索引节点中有8个地址项，其中5个地址项为直接地址索引，这意味着逻辑块号为0〜4的为直接地址索引；2个地址项是一级间接地址索引，这意味着第一个地址项指出的物理块中存放逻辑块号为5〜260的物理块号，第一个地址项指出的物理块中存放逻辑块号为261〜516的物理块号；1个地址项是二级间接地址索引，该地址项指出的物理块存放了256个间接索引表的地址，这256个间接索引表存放逻辑块号为517〜66052的物理块号。经上分析不难得出，若要访问文件的逻辑块号分别为5和518,则系统应分别采用一级间接地址索引和二级间接地址索引。","analysis":"C"},{"product_id":"20140301104844","ans":"单个文件的逻辑块号可以从0〜66052,而磁盘数据块大小为1KB字节，所以单个文件最大长度是66053KB。","analysis":"D"},{"product_id":"20140301105000","ans":"项目规模大、开发小组对项目需求理解并了解相关领域，因此可以采用瀑布开发模型。演化模式适用于对软件需求缺乏准确认识的情况。螺旋模型在开发过程中加入风险分析。喷泉模型适合于面向对象的开发方法。","analysis":"A"},{"product_id":"20140301105057","ans":"敏捷开发的总体目标是通过“尽可能早地、持续地对有价值的软件的交付”使客户满意。敏捷过程的典型方法很多，每一种方法基于一套原则，这些原则实现了敏捷方法所宣称的理念，即敏捷宣言。其中，极限编程XP是一种轻量级的软件开发方式，由价值观、原则、实践和行为4个部分组成，彼此相互依赖、关联，并通过行为贯穿于整个生存周期。水晶法Crystal认为每一个不同的项目都需要一套不同的策略、约定和方法论。并列争球法Scrum使用迭代的方法，并按需求的优先级来实现产品。自适应软件开发ASD有6个基本原则。","analysis":"B"},{"product_id":"20140301105322","ans":"题图可以用下图表示，图中顶点数位6,边数为8,程序复杂度为m-n+2=8-6+2=4。","analysis":"C"},{"product_id":"20140301105419","ans":"冗余附加技术是指为实现结构、信息和时间冗余技术所需的资源和技术，包括程序、指令、数据、存放和调动它们的空间和通道等。在屏蔽硬件错误的容错技术中，冗余附加技术包括：关键程序和数据的冗余及调用；检测、表决、切换、重构和复算的实现。在屏蔽软件错误的容错技术中，冗余附加技术包括：冗余备份程序的存储及调用；实现错误检测和错误恢复的程序；实现容错软件所需的固化程序。","analysis":"A"},{"product_id":"20140301105600","ans":"文档是系统建设过程的“痕迹”，是系统维护人员的指南，是开发人员与用户交流的工具。文档不仅仅描述和规定软件的适用范围及相关的操作命令。软件包括程序和文档，因此没有文档的软件不能称之为软件产品。软件文档的编制在软件开发中是相当重要的，高质量的文档对于发挥软件产品的效益有着重要的意义。","analysis":"A"},{"product_id":"20140301105705","ans":"软件维护一般包括下面四个方面。正确性维护是指改正在系统开发阶段已经发生而在系统测试阶段尚未发生的错误。适应性维护是指使应用软件适应信息技术变化和管理需求变化而进行的修改。完善性维护为扩充功能和改善性能而进行的修改。预防性维护是为了改进应用软件的可靠性和可维护性，为了适应未来的软硬件环境的编号，主动增加预防性的新的功能，以使应用系统适应各类变化而不被淘汰。本题超市信息系统为了适应信用卡支付系统而做了相应的修改工作，是一个典型的适应性维护。","analysis":"B"},{"product_id":"20140301105840","ans":"白盒测试也称为结构测试，根据程序的内部结构和逻辑来设计测试用例，对程序的路径和过程进行测试，检查是否满足设计的需要。其常用的技术有逻辑覆盖、循环覆盖和基本路径测试。在逻辑覆盖中，语句覆盖是指选择足够的测试数据使被测试程序中每条语句至少执行一次。判定覆盖是指选择足够的测试数据使被测试程序中每个判定表达式至少获得一次“真”值和“假”值。条件覆盖是指构造一组测试用例，使得每一判定语句中每个逻辑条件的各种可能的值至少满足一次。路径覆盖是指覆盖被测程序中所有可能的路径。","analysis":"A"},{"product_id":"20140301110054","ans":"本题的实例中，测试用例①会执行语句A，测试用例②会执行语句B，测试用例③和④不执行语句。因此测试用例①②可以完成语句覆盖，不能完成判定、条件和路径覆盖。要完成路径覆盖，需要测试用例①②③或测试用例①②④。","analysis":"C"},{"product_id":"20140301110252","ans":"本题考查面向对象的基本知识。在面向对象技术中，对象是基本的运行时的实体，它既包括数据（属性），也包括作用于数据的操作（行为）。一个对象把属性和行为封装为一个整体，与其他对象之间有清晰的边界，有良好定义的行为和可扩展性。对象位置和数量，由使用其的对象或系统确定。","analysis":"C"},{"product_id":"20140301111130","ans":"本题考査面向对象的基本知识。面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类（父类）和子类之间共享数据和方法的机制。在定义和实现一个类的时候，可以在一个已经存在的类的基础上来进行，把这个己经存在的类所定义的内容作为自己的内容，并加入新的内容。组合表示对象之间整体与部分的关系。封装是一种信息隐藏技术，其目的是使对象（组件）的使用者和生产者分离，也就使地其他开发人员无需了解所要使用的软件组件内部的工作机制，只需知道如何使用组件，即组件提供的功能及其接口。多态（polymorphism)是不同的对象收到同一消息可以产生完全不同的结果的现象，使得用户可以发送一个通用的消息，而实现的细节则由接收对象自行决定，达到同一消息就可以调用不同的方法，即多种形态。","analysis":"D"},{"product_id":"20140301111214","ans":"本题考査面向对象的基本知识。面向对象技术中，继承关系是一种模仿现实世界中继承关系的一种类之间的关系，是超类（父类）和子类之间共享数据和方法的机制。在定义和实现一个类的时候，可以在一个已经存在的类的基础上来进行，把这个已经存在的类所定义的内容作为自己的内容，并加入新的内容。组合表示对象之间整体与部分的关系。封装是一种信息隐藏技术，其目的是使对象（组件）的使用者和生产者分离，也就使地其他开发人员无需了解所要使用的软件组件内部的工作机制，只需知道如何使用组件，即组件提供的功能及其接口。多态（polymorphism)是不同的对象收到同一消息可以产生完全不同的结果的现象，使得用户可以发送一个通用的消息，而实现的细节则由接收对象自行决定，达到同一消息就可以调用不同的方法，即多种形态。","analysis":"A"},{"product_id":"20140301111410","ans":"本题考查统一建模语言（UML)的基本知识。UML2.0中提供了多种图形。组件图（componentdiagram)展现了一组组件之间的组织和依赖，专注于系统的静态实现视图，与类图相关，通常把组件映射为一个或多个类、接口或协作。部署图（deploymentdiagram)展现了运行处理节点以及其中构件的配置。部署图给出了体系结构的静态实施视图。它与构件图相关，通常一个节点包含一个或多个构件。类图（classdiagram)展现了一组对象、接口、协作和它们之间的关系，在开发软件系统时，类图用于对系统的静态设计视图建模。","analysis":"B"},{"product_id":"20140301111649","ans":"本题考查采用统一建模语言（UML)进行面向对象建模的基本知识。面向对象分析是从按对象分类的角度来创建对象领域的描述。领域的分解包括定义概念、属性和重要的关联。其结果可以被表示成领域模型，用一组显示领域概念或对象的图形来表示领域模型。通常首先发现和确定业务对象，然后组织对象并记录对象之间的主要概念关系。类图以图形化的用以描述对象及其关联关系。在该图中还包括多重性、关联关系、泛化/特化关系以及聚合关系。从场景中先识别名词性术语，包括公司（Company)、项目（Project)、员工(Employee)、和团队（Team)，再识别这些术语之间的关联关系。一个公司负责多个项目，公司和项目之间具有1对多的关联关系；一个项目由一个员工团队来开发，项目到团队的管理关系是1，而一个（员工）团队是由多名员工组成，而且没有员工称不上是团队，所以一个团队至少和一个员工关联。","analysis":"B"},{"product_id":"20140301111904","ans":"本题考查统一建模语言（UML)建模的基本知识。在采用UML进行面向对象系统建模时，会用UML中构造型（stereotype)名称为«interface»来表示接口这一概念，声明对象类所需要的服务，而服务具体如何执行，有实现它的具体类完成。","analysis":"D"},{"product_id":"20140301112305","ans":"本题考查统一建模语言（UML)的基本知识。UML2.0中提供了的活动图（activitydiagram)是一种特殊的状态图，它展现了在系统内从一个活动到另一个活动的流程。活动图专注于系统的动态视图，它对于系统的功能建模特别重要，并强调对象间的控制流程。通常用于在建模用例图之后，对复杂用例进行进一步细化。活动图中可以用条状图表示同步的起始点和结束点，其间的活动可以同时执行，如图中a22、a33和a44,中a11执行完后，到同步起始，其后各自执行，同步结束后的活动必须等同步结束点之前的活动全部执行完之后才能继续，如a33和a44都结束后，才进入后续判定。","analysis":"B"},{"product_id":"20140301112834","ans":"本题考查设计模式的基本知识。每种设计模式都有特定的意图。适配器（Adapter)模式将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。命令（Command)模式将一个请求封装为一个对象，从而使使用者可以釆用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。观察者(Visitor)模式表示一个作用于某对象结构中的各元素的操作，是使用者可以在不改变各元素的类的前提下定义作用于这些元素的新操作。状态（State)模式是使得一个对象在其内部状态改变时通过调用另一个类中的方法改变其行为，使这个对象看起来如同修改了它的类。","analysis":"D"},{"product_id":"20140301113001","ans":"题目中是一个标识网络连接的实例，网络连接类为TCPConnection，其对象的状态处于不同状态之一：连接已建立（Established)、正在监听（Listening)、连接已关闭(Closed)。当一个TCPConnection对象受到其他对象的请求时，它根据自身的当前状态做出不同的反应。例如，一个Open请求的结果依赖于该连接是出于连接已关闭状态还是连接已建立状态。State模式描述了TCPConnection如何做每一种状态下表现出不同的行为。这一模式思想是引入了一个称为TCPState的抽象类来表示网络的连接状态。TCPState类为各表示不同的操作状态的子类声明了一个公共接口。TCPState的子类实现与特定状态相关的行为。例如，TCPEstablished和TCPClosed类分别实现了特定于TCPConnection的连接已建立状态和连接已关闭状态的行为。","analysis":"C"},{"product_id":"20140301113103","ans":"题目中是一个标识网络连接的实例，网络连接类为TCPConnection，其对象的状态处于不同状态之一：连接已建立（Established)、正在监听（Listening)、连接已关闭(Closed)。当一个TCPConnection对象受到其他对象的请求时，它根据自身的当前状态做出不同的反应。例如，一个Open请求的结果依赖于该连接是出于连接已关闭状态还是连接已建立状态。State模式描述了TCPConnection如何做每一种状态下表现出不同的行为。这一模式思想是引入了一个称为TCPState的抽象类来表示网络的连接状态。TCPState类为各表示不同的操作状态的子类声明了一个公共接口。TCPState的子类实现与特定状态相关的行为。例如，TCPEstablished和TCPClosed类分别实现了特定于TCPConnection的连接已建立状态和连接已关闭状态的行为。","analysis":"A"},{"product_id":"20140301113211","ans":"本题考査设计模式的基本知识。每一个设计模式描述了一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。将类标识为final限制类不能再被继承；将设计为abstract表示类中定义出类提供什么服务，而有些具体服务需要通过其子类来实现；单例（Singleton)模式是指系统运行过程中，一个类只有一个对象实例；备忘模式是指不破坏封装性的前提下捕获一个对象的内部状态，并在该对象之外保存这个状态。","analysis":"C"},{"product_id":"20140301113259","ans":"本题考查程序语言基础知识。计算机只能理解和执行由0、1序列构成的机器语言，因此高级程序语言需要翻译，担负这一任务的程序称为“语言处理程序”。由于应用的不同，语言之间的翻译也是多种多样的。语言处理程序主要分为汇编程序、编译程序和解释程序三种基本类型。解释程序也称为解释器，它可以直接解释执行源程序，或者将源程序翻译成某种中间表示形式后再加以执行；而编译程序（编译器）则首先将源程序翻译成目标语言程序，然后在计算机上运行目标程序。汇编程序的功能是将汇编语言所编写的源程序翻译成机器指令程序。链接程序将各目标程序连接形成为可执行程序。","analysis":"B"},{"product_id":"20140301113358","ans":"本考查程序语言基础知识。从原理上讲，对源程序进行语义分析之后就可以直接生成目标代码，但由于源程序与目标代码的逻辑结构往往差别很大，特别是考虑到具体机器指令系统的特点，要使翻译一次到位很困难，而且用语法制导方式机械生成的目标代码往往是繁琐和低效的，因此有必要采用一种中间代码，将源程序首先翻译成中间代码表示形式，以利于进行与机器无关的优化处理。由于中间代码实际上也起着编译器前端和后端分水岭的作用，所以使用中间代码也有助于提高编译程序的可移植性。常用的中间代码有后缀式、三元式、四元式和树等形式。","analysis":"D"},{"product_id":"20140301113450","ans":"本题考查程序语言基础知识。语法错误是指由于编程中输入不符合语法规则而产生的，例如：表达式不完整、缺少必要的标点符号、关键字输入错误、数据类型不匹配、循环语句或选择语句的关键字不匹配等。通常，编译器对程序进行编译的过程中，会把检测到的语法错误以提示的方式列举出来，又称为编译错误。语法错误的调试，则可以由集成开发环境提供的调试功能来实现，在程序进行编译时，编译器会对程序中的语法错误进行诊断。编译正确的程序必然不包含语法错误。","analysis":"A"},{"product_id":"20140301113627","ans":"本题考查数据库系统中关系代数运算方面的基础知识。根据题意R1R2为自然联接，自然联接是一种特殊的等值联接，它要求两个关系中进行比较的分量必须是相同的属性，并且在结果集中将重复属性列去掉，R2.C和R2.D去掉，故结果集为6元关系。","analysis":"C"},{"product_id":"20140301113752","ans":"本题比较的条件为“(R1.C=R2.C)∧(R1.D=R2.D)”，从下图所示的R1XR2的结果集中可见，共有4个元组满足条件，分别是第3个、第4个、第5个和第9个元组。","analysis":"A"},{"product_id":"20140301113902","ans":"本题考查关系数据库方面的基础知识。根据题意R关系中的EM可决定该关系的所有属性，所以R关系的主键为EM;又因为，EM—>Q,而E—>N，M—>L，可以得出N和L都部分依赖于码，所以，该关系模式属于1NF。","analysis":"A"},{"product_id":"20140301113955","ans":"关系模式R属于1NF，1NF存在冗余度大、修改操作的不一致性、插入异常和删除异常四个问题，所以R需要进行分解。","analysis":"D"},{"product_id":"20140301114532","ans":"本题考査数据库系统中关系代数运算方面的基础知识。因为创建视图的语句格式如下：其中，WITHCHECKOPTION表示对UPDATE，INSTER，DELETE操作时保证更新、插入或删除的行满足视图定义中的谓词条件（即子査询中的条件表达式)。另外，组成视图的属性列名或者全部省略或者全部指定。如果省略属性列名，则隐含该视图由SELECT子查询目标列的主属性组成。可见，完整的Computer-BOOK视图创建语句如下：","analysis":"B"},{"product_id":"20140301115000","ans":"本题考査数据库系统中关系代数运算方面的基础知识。因为创建视图的语句格式如下：其中，WITHCHECKOPTION表示对UPDATE，INSERT，DELETE操作时保证更新、插入或删除的行满足视图定义中的谓词条件（即子査询中的条件表达式)。另外，组成视图的属性列名或者全部省略或者全部指定。如果省略属性列名，则隐含该视图由SELECT子查询目标列的主属性组成。可见，完整的Computer-BOOK视图创建语句如下：","analysis":"C"},{"product_id":"20140301115135","ans":"本题考查数据结构基础知识。假设主串和模式串的长度分别为n和m，位置序号从0开始计算。设从主串的第i个位置开始与模式串匹配成功，在前i趟匹配中（位置0~i-1)，每趟不成功的匹配都是模式串的第一个字符与主串中相应的字符不相同，则在前i趟匹配中，字符的比较共进行了i次，而第趟i=1（从位置i开始）成功匹配的字符比较次数为m,所以总的字符比较次数为i+m(0≤i≤n-m)。而在最坏情况下，每一趟不成功的匹配都是模式串的最后一个字符与主串中相应的字符不相等，则主串中新一趟的起始位置为i-m+2。若设从主串的第f个字符开始匹配时成功，则前i趟不成功的匹配中，每趟都比较了m次，总共比较了i×m次，第i+1趟的成功匹配也比较了m次。因此，最坏情况下的比较次数为(n-m+1)*m。","analysis":"B"},{"product_id":"20140301115444","ans":"本题考查数据结构基础知识。根据后序遍历序列KBFDCAE,可以确定根结点为E，然后根据中序遍历序列（为BKEFACD),可以确定B、K为左子树的结点，F、A、C、D是右子树的结点。再根据左子树的后序遍历序列为KB、中序遍历序列为BK，所以可以确定B是左子树的根结点，K是结点B的右子树上。同理可推出其他结点的位置。","analysis":"A"},{"product_id":"20140301115816","ans":"本题考查数据结构基础知识。设查找表的元素存储在一维数组r[l..n]中，在表中的元素已经按关键字递增方式排序的情况下，进行折半查找的方法是：首先将待查元素的关键字（key)值与表r中间位置上（下标为mid)记录的关键字进行比较，若相等，则查找成功；若key>r[mid].key，则说明待查记录只可能在后半个子表r[mid+l..ti]中，下一步应在后半个子表中进行查找，若key<r[mid].key，说明待查记录只可能在前半个子表r[l..mid-1]中，下一步应在r的前半个子表中进行查找，通过逐步缩小范围，直到查找成功或子表为空时失败为止。折半查找的过程可以用一棵二叉树描述，方法是以当前查找区间的中间位置序号作为根，左半个子表和右半个子表中的记录序号分别作为根的左子树和右子树上的节点，具有13个节点的折半查找判定树如下图所示。","analysis":"A"},{"product_id":"20140301115958","ans":"本题考查数据结构基础知识。拓扑排序是将AOV网中所有顶点排成一个线性序列的过程，并且该序列满足：若在AOV网中从顶点vi到vj有一条路径，则在该线性序列中，顶点vi必然在顶点vj之前。题中所示有向图的拓扑序列有：1235476,2135476,1235746,2135746","analysis":"C"},{"product_id":"20140301120259","ans":"本题考查数据结构基础知识。在m阶B-树的定义中，要求：①树中的每个节点至多有M棵子树②若根节点不是叶子节点，则至少有两棵子树。③除根之外的所有非终端节点至少有[M/2]棵子树。因此，题图中所示B-树最可能为4阶B树。","analysis":"D"},{"product_id":"20140301120422","ans":"输入数组{1，1，2,4,7,5}基本有序（从小到大），在这种情况下，插入排序算法的时间复杂度为0(n)，归并排序和堆排序的时间复杂度为0(nlgn)，而快速排序的时间复杂度为0(n2)。","analysis":"A"},{"product_id":"20140301120455","ans":"用插入排序算法排序该输入数组，第二个元素1需要和第一个元素1进行1次比较，第三个元素2需要和第二个元素1进行1次比较，第四个元素4需要和第三个元素2进行1次比较，第五个元素7需要和第四个元素4进行1次比较，第六个元素5需要和第五个元素7进行1次比较，比7小，和元素7交换，在和第四个元素4进行1次比较，得到最终的排序结果。因此一共需要进行6次比较。","analysis":"B"},{"product_id":"20140301120817","ans":"霍夫曼编码在构造最优编码树时，每次总是取出权值最小的两个结点来生成它们的父结点（新的中间结点），因此霍夫曼编码方案是基于贪心策略的。","analysis":"B"},{"product_id":"20140301121000","ans":"对应该实例构造最优编码树如下图所示。实例中包含6个字符，若用定长编码，则需要三位，对包含100,000个字符的文件，需要3*100,000=300,000位的存储空间。而采用霍夫曼编码，则需要(18+26+32)*2+12*3+(4+8)*4=236,000位的存储空间，节省了21%的存储空间。","analysis":"A"},{"product_id":"20140301121124","ans":"本题考查Windows2003中有关SNMP服务配置的操作权限。WindowsServer2003中配置SNMP服务时，必须以管理员身份或者Administrators组成员身份登录才能完成SNMP服务的配置功能。一般用户或者普通用户不能完成SNMP配置服务。","analysis":"C"},{"product_id":"20140301121307","ans":"本题考查ASP的内置对象的基础知识。在ASP的内置对象中，response对象和request对象和cookie有关。其中，request对象中的Cookies集合是服务器根据用户的请求，发出的所有cookie的值的集合，这些Cookie仅对相应的域有效，每个成员均为只读。Response对象中的Cookies集合是服务器发回客户端的所有Cookie的值，这个集合为只写，所以只有Response对象可以修改cookie中的值。","analysis":"B"},{"product_id":"20140301121357","ans":"220.17.192.0是一个C类网络地址，应该有24位子网掩码，现在仅采用20位子网掩码，少了4位，所以被划分成了16个子网。","analysis":"C"},{"product_id":"20140301121443","ans":"这16个子网号的第三个字节都应该在192+0〜192+15之间，由于213大于192+15，所以220.17.213.0不属于地址块220.17.192.0/20。","analysis":"D"},{"product_id":"20140301121544","ans":"本题考查Windows系统中DNS服务及相关配置命令的基础操作。ipconfig命令详解如下：①具体功能该命令用于显示所有当前的TCP/IP网络配置值、刷新动态主机配置协议(DHCP)和域名系统(DNS)设置。使用不带参数的IPCONFIG可以显示所有适配器的IP地址、子网掩码、默认网关。②语法详解ipconfig[/all][/renew[adapter][/release[adapter][/flushdns][/displaydns][/registerdns][/showclassidpadapter][/setclassidpadapter][classID]③参数说明/all显示所有适配器的完整TCP/IP配置信息。在没有该参数的情况下IPCONFIG只显示IP地址、子网掩码和各个适配器的默认网关值。适配器可以代表物理接口(例如安装的网络适配器)或逻辑接口(例如拨号连接)。/renew更新所有适配器(如果未指定适配器)，或特定适配器(如果包含了adapter参数)的DHCP配置。该参数仅在具有配置为自动获取IP地址的网卡的计算机上可用。要指定适配器名称，请输入使用不带参数的IPCONFIG命令显示的适配器名称。/release[adapter]发送DHCPRELEASE消息到DHCP服务器，以释放所有适配器(如果未指定适配器)或特定适配器(如果包含了adapter参数)的当前DHCP配置并丢弃IP地址配置。该参数可以禁用配置为自动获取IP地址的适配器的TCP/IP。要指定适配器名称，请键入使用不带参数的IPCONFIG命令显示的适配器名称。/flushdns清理并重设DNS客户解析器缓存的内容。如有必要，在DNS疑难解答期间，可以使用本过程从缓存中丢弃否定性缓存记录和任何其他动态添加的记录。DNSClient服务为计算机解析和缓存DNS名称。为了要达到用最快速、最有效率的方式，让客户端能够迅速找到网域的验证服务，在Win2000/XP系统中，加入了DNS快取（Cache)的功能。当第一次在找到了目的主机的IP地址后，操作系统就会将所查询到的名称及IP地址记录在本机的DNS快取缓冲区中，下次客户端还需要再查询时，就不需要到DNS服务器上査询，而直接使用本机DNSCache中的数据即可，所以你查询的结果始终是同一IP地址。这个服务关闭后，dns还可以解析，但是本地无法储存dns缓存。","analysis":"C"},{"product_id":"20140301121940","ans":"本题考查对英语资料的阅读理解。计算机将会变得越来越高级而且更易于使用。识别速度的提升将使计算机的操作更加容易。虚拟现实是使用人的感觉与计算机进行交互的一种技术，它也会使得人机界面更好。另外，各种新奇的计算模型正在不断发展，如生物计算使用人的器官、分子计算使用具有特定属性的分子、DNA计算采用遗传的基本单元来存储数据和执行操作。到目前为止，这些都还属于未来计算平台，能力非常有限，并且只限于理论方面的研究。科学家们之所以研究这些计算模型，原因在于嵌入硅片中的微型芯片的体积的局限性，以及即使是非常小的晶体管所产生的热量方面的局限性。","analysis":"B"},{"product_id":"20140301122034","ans":"本题考查对英语资料的阅读理解。计算机将会变得越来越高级而且更易于使用。识别速度的提升将使计算机的操作更加容易。虚拟现实是使用人的感觉与计算机进行交互的一种技术，它也会使得人机界面更好。另外，各种新奇的计算模型正在不断发展，如生物计算使用人的器官、分子计算使用具有特定属性的分子、DNA计算采用遗传的基本单元来存储数据和执行操作。到目前为止，这些都还属于未来计算平台，能力非常有限，并且只限于理论方面的研究。科学家们之所以研究这些计算模型，原因在于嵌入硅片中的微型芯片的体积的局限性，以及即使是非常小的晶体管所产生的热量方面的局限性。","analysis":"A"},{"product_id":"20140301122127","ans":"本题考查对英语资料的阅读理解。计算机将会变得越来越高级而且更易于使用。识别速度的提升将使计算机的操作更加容易。虚拟现实是使用人的感觉与计算机进行交互的一种技术，它也会使得人机界面更好。另外，各种新奇的计算模型正在不断发展，如生物计算使用人的器官、分子计算使用具有特定属性的分子、DNA计算采用遗传的基本单元来存储数据和执行操作。到目前为止，这些都还属于未来计算平台，能力非常有限，并且只限于理论方面的研究。科学家们之所以研究这些计算模型，原因在于嵌入硅片中的微型芯片的体积的局限性，以及即使是非常小的晶体管所产生的热量方面的局限性。","analysis":"B"},{"product_id":"20140301122222","ans":"本题考查对英语资料的阅读理解。计算机将会变得越来越高级而且更易于使用。识别速度的提升将使计算机的操作更加容易。虚拟现实是使用人的感觉与计算机进行交互的一种技术，它也会使得人机界面更好。另外，各种新奇的计算模型正在不断发展，如生物计算使用人的器官、分子计算使用具有特定属性的分子、DNA计算采用遗传的基本单元来存储数据和执行操作。到目前为止，这些都还属于未来计算平台，能力非常有限，并且只限于理论方面的研究。科学家们之所以研究这些计算模型，原因在于嵌入硅片中的微型芯片的体积的局限性，以及即使是非常小的晶体管所产生的热量方面的局限性。","analysis":"D"},{"product_id":"20140301122341","ans":"本题考查对英语资料的阅读理解。计算机将会变得越来越高级而且更易于使用。识别速度的提升将使计算机的操作更加容易。虚拟现实是使用人的感觉与计算机进行交互的一种技术，它也会使得人机界面更好。另外，各种新奇的计算模型正在不断发展，如生物计算使用人的器官、分子计算使用具有特定属性的分子、DNA计算采用遗传的基本单元来存储数据和执行操作。到目前为止，这些都还属于未来计算平台，能力非常有限，并且只限于理论方面的研究。科学家们之所以研究这些计算模型，原因在于嵌入硅片中的微型芯片的体积的局限性，以及即使是非常小的晶体管所产生的热量方面的局限性。","analysis":"C"}]},{"paperId":"74","field":"20121","question_list":[{"product_id":"20140301094437","ans":"本题考查髙速缓冲存储器（Cache）的工作特点。提供“高速缓存”的目的是为了让数据存取的速度适应CPU的处理速度，其基于的原理是内存中“程序执行与数据访问的局域性行为”，即一定程序执行时间和空间内，被访问的代码集中于一部分。为了充分发挥高速缓存的作用，不仅依靠“暂存刚刚访问过的数据”，还要使用硬件实现的指令预测与数据预取技术，即尽可能把将要使用的数据预先从内存中取到高速缓存中。一般而言，主存使用DRAM技术，而Cache使用昂贵但较快速的SRAM技术。目前微计算机上使用的AMD或Intel微处理器都在芯片内部集成了大小不等的数据高速缓存和指令高速缓存，通称为L1高速缓存（LICache,即第一级片上高速缓冲存储器）；而比L1容量更大的L2高速缓存曾经被放在CPU外部（主板或者CPU接口卡上），但是现在已经成为CPU内部的标准组件;更昂贵的顶级家用和工作站CPU甚至会配备比L2高速缓存还要大的L3高速缓存。","analysis":"A"},{"product_id":"20140301094743","ans":"本题考查存储器的地址计算知识。每个地址编号为一个存储单元（容量为1个字节)，地址区间OOOOAOOOH〜OOOOBFFFH共有1FFF+1个地址编号（即213)，1K=1024,因此该地址区间的存储单元数也就是8K。","analysis":"D"},{"product_id":"20140301095127","ans":"本题考查相联存储器的概念。相联存储器是一种按内容访问的存储器。其工作原理就是把数据或数据的某一部分作为关键字，将该关键字与存储器中的每一单元进行比较，找出存储器中所有与关键字相同的数据字。相联存储器可用在高速缓冲存储器中，在虚拟存储器中用来作段表、页表或快表存储器，还用在数据库和知识库中。","analysis":"C"},{"product_id":"20140301095343","ans":"本题考查指令系统基础知识。指令中的寻址方式就是如何对指令中的地址字段进行解释，以获得操作数的方法或获得程序转移地址的方法。常用的寻址方式有：•立即寻址。操作数就包含在指令中。•直接寻址。操作数存放在内存单元中，指令中直接给出操作数所在存储单元的地址。•寄存器寻址。操作数存放在某一寄存器中，指令中给出存放操作数的寄存器名。•寄存器间接寻址。操作数存放在内存单元中，操作数所在存储单元的地址在某个寄存器中。•间接寻址。指令中给出操作数地址的地址。•相对寻址。指令地址码给出的是一个偏移量（可正可负），操作数地址等于本条指令的地址加上该偏移量。•变址寻址。操作数地址等于变址寄存器的内容加偏移量。题目给出的指令中，R1是寄存器，属于寄存器寻址方式，45是立即数，属于立即寻址方式。","analysis":"B"},{"product_id":"20140301095637","ans":"本题考查指令执行的流水化概念。根据题目中给出的数据，每一条指令的执行过程需要9Δt。在串行执行方式下，执行完一条指令后才开始执行下一条指令，10条指令共耗时90Δt。","analysis":"C"},{"product_id":"20140301095823","ans":"本题考查指令执行的流水化概念。若按照流水方式执行，则在第i+2条指令处于执行阶段时就可以分析第i+1条指令，同时取第i条指令^由于指令的执行阶段所需时间最长（为4Δt)，因此指令开始流水执行后，每4At将完成一条指令，所需时间为3Δt+2Δt十4Δt+4ΔtX9=45Δt。","analysis":"D"},{"product_id":"20140301100025","ans":"本题考查数字签名的概念。数字签名（DigitalSignature)技术是不对称加密算法的典型应用：数据源发送方使用自己的私钥对数据校验和（或）其他与数据内容有关的变量进行加密处理，完成对数据的合法“签名”，数据接收方则利用对方的公钥来解读收到的“数字签名“，并将解读结果用于对数据完整性的检验，以确认签名的合法性。数字签名主要的功能是保证信息传输的完整性、发送者的身份认证、防止交易中的抵赖发生。","analysis":"A"},{"product_id":"20140301100247","ans":"本题考查Windows用户权限方面的知识。在以上4个选项中，用户组默认权限由高到低的顺序是administrators—powerusers—users—everyone","analysis":"A"},{"product_id":"20140301100651","ans":"本题考查WindowsIIS服务中身份认证的基础知识^WindowsIIS服务支持的身份认证方式有.NETPassport身份验证、集成Windows身份验证、摘要式身份验证和基本身份验证。•集成Windows身份验证：以Kerberos票证的形式通过网络向用户发送身份验证信息，并提供较高的安全级别。Windows集成身份验证使用Kerberos版本5NTLM身份验证。•摘要式身份验证：将用户凭据作为MD5哈希或消息摘要在网络中进行传输，这样就无法根据哈希对原始用户名和密码进行解码。•.NETPassport身份验证：对IIS的请求必须在査询字符串或Cookie中包含有效的.NETPassport凭据，提供了单一登录安全性，为用户提供对Internet上各种服务的访问权限。•基本身份验证：用户凭据以明文形式在网络中发送。这种形式提供的安全级别很低，因为几乎所有协议分析程序都能读取密码。","analysis":"B"},{"product_id":"20140301101045","ans":"软件著作权的客体是指著作权法保护的计算机软件，包括计算机程序及其相关文档。计算机程序通常包括源程序和目标程序。源程序（又称为源代码、源码）是采用计算机程序设计语言（如C、Java语言）编写的程序，需要转换成机器能直接识别和执行的形式才能在计算机上运行并得出结果。它具有可操作性、间接应用性和技术性等特点。目标程序以二进制编码形式表示，是计算机或具有信息处理能力的装置能够识别和执行的指令序列，能够直接指挥和控制计算机的各部件（如存储器、处理器、I/O设备等）执行各项操作，从而实现一定的功能。它具有不可读性、不可修改性和面向机器性等特点。源程序与目标程序就其逻辑功能而言不仅内容相同，而且表现形式相似，二者可以互相转换，最终结果一致。源程序是目标程序产生的基础和前提，目标程序是源程序编译的必然结果；源程序和目标程序具有独立的表现形式，但是目标程序的修改通常依赖于源程序。同一程序的源程序文本和目标程序文本应当视为同一程序。无论是用源程序形式还是目标程序形式体现，都可能得到著作权法保护。计算机软件包含了计算机程序，并且不局限于计算机程序，还包括与之相关的程序描述和辅助资料。我国将计算机程序文档（软件文档）视为计算机软件的一个组成部分。计算机程序文档与计算机程序不同，计算机程序是用编程语言，如汇编语言、C语言、Java语言等编写而成，而计算机程序文档是由自然语言或由形式语言编写而成的。计算机程序文档是指用自然语言或者形式化语言所编写的文字资料和图表，用来描述程序的内容、组成、设计、功能、开发情况、测试结果及使用方法等。计算机程序文档一般以程序设计说明书、流程图、数据流图和用户手册等表现。我国《计算机软件保护条例》第6条规定：“本条例对软件著作权的保护不延及开发软件所用的思想、处理过程、操作方法或者数学概念等。”也就是说，软件开发的思想、处理过程、操作方法或者数学概念等与计算机软件分别属于主客观两个范畴。思想是开发软件的设计方案、构思技巧和功能，设计程序所实现的处理过程、操作方法、算法等，表现是完成某项功能的程序。我国著作权法只保护作品的表达，不保护作品的思想、原理、概念、方法、公式、算法等，因此对计算机软件来说，只有程序的作品性能得到著作权法的保护，而体现其工具性的程序构思、程序技巧等却无法得到保护。实际上计算机程序的技术设计，如软件开发中对软件功能、结构的构思，往往是比程序代码更重要的技术成果，通常体现了软件开发中的主要创造性贡献。","analysis":"D"},{"product_id":"20140301101331","ans":"本题考查知识产权知识，涉及专利权的相关概念。知识产权受地域限制，只有在一定地域内知识产权才具有独占性。也就是说，各国依照其本国法律授予的知识产权，只能在其本国领域内受其法律保护，而其他国家对这种权利没有保护的义务，任何人均可在自己的国家内自由使用外国人的知识产品，既无需取得权利人的同意（授权），也不必向权利人支付报酬。例如，中国专利局授予的专利权或中国商标局核准的商标专用权只能在中国领域内受保护，在其他国家则不给予保护。外国人在我国领域外使用中国专利局授权的发明专利不侵犯我国专利权，如美国人在美国使用我国专利局授权的发明专利不侵犯我国专利权。通过缔结有关知识产权的国际公约或双边互惠协定的形式，某一国家的国民（自然人或法人）的知识产权在其他国家（缔约国）也能取得权益。参加知识产权国际公约的国家（或者签订双边互惠协定的国家）会相互给予成员国国民的知识产权保护。所以，我国公民、法人完成的发明创造要想在外国受保护，必须在外国申请专利。商标要想在外国受保护，必须在外国申请商标注册。著作权虽然自动产生，但它受地域限制，我国法律对外国人的作品并不是都给予保护，只保护共同参加国际条约国家的公民作品。同样，参加公约的其他成员国也按照公约规定，对我国公民和法人的作品给予保护。虽然众多知识产权国际条约等的订立使地域性有时会变得模糊，怛地域性的特征不但是知识产权最“古老”的特征，也是最基础的特征之一。目前知识产权的地域性仍然存在，是否授予权利、如何保护权利仍须由各缔约国按照其国内法来决定。本题涉及的依照该专利生产的产品在中国或其他国家销售，中国M企业不需要向美国L公司支付这件美国专利的许可使用费。这是因为L公司未在中国及其他国家申请该专利，不受中国及其他国家专利法的保护，因此依照该专利生产的产品在中国及其他国家销售，M企业不需要向L公司支付这件专利的许可使用费。如果返销美国，需要向L公司支付这件专利的许可使用费。这是因为这件专利已在美国获得批准，因而受到美国专利法的保护，M企业依照该专利生产的产品要在美国销售，则需要向L公司支付这件专利的许可使用费。","analysis":"D"},{"product_id":"20140301101554","ans":"本题考查多媒体基础知识。我们经常遇到的分辨率有两种，即显示分辨率和图像分辨率。显示分辨率是指显示屏上能够显示出的像素数目。例如，显示分辨率为1024x768表示显示屏分成768行（垂直分辨率），每（水平分辨率）显示1024个像素，整个显示屏就含有796432个显像点。屏幕能够显示的像素越多，说明显示设备的分辨率越高，显示的图像质量越高。图像分辨率是指组成一幅图像的像素密度，也是用水平和垂直的像素表示，即用每英寸多少点（dpi)表示数字化图像的大小。例如，用200dpi来扫描一幅2x2.5英寸的彩色照片，那么得到一幅400x500个像素点的图像。它实质上是图像数字化的采样间隔，由它确立组成一幅图像的像素数目。对同样大小的一幅图，如果组成该图的图像像素数目越多，则说明图像的分辨率越高，图像看起来就越逼真。相反，图像显得越粗糙。因此，不同的分辨率会造成不同的图像清晰度。","analysis":"B"},{"product_id":"20140301101752","ans":"本题考查多媒体基础知识。计算机和多媒体系统中的声音，除了数字波形声音之外，还有一类是使用符号表示的，由计算机合成的声音包括语音合成和音乐合成。音乐合成技术主要有调频（FM)音乐合成、波形表（WaveTable)音乐合成两种方式。调频音乐合成是使高频振荡波的频率按调制信号规律变化的一种调制方式。采用不同调制波频率和调制指数就可以方便地合成具有不同频谱分布的波形，再现某些乐器的音色。可以采用这种方法得到具有独特效果的“电子模拟声”，创造出丰富多彩的声音，是真实乐器所不具备的音色。波形表音乐合成是将各种真实乐器所能发出的所有声音（包括各个音域、声调）录制下来，存储为一个波表文件。播放时，根据MIDI文件记录的乐曲信息向波表发出指令，从“表格”中逐一找出对应的声音信息，经过合成、加工后回放出来。应用调频音乐合成技术的乐音已经很逼真，波形表音乐合成技术的乐音更真实。目前这两种音乐合成技术都应用于多媒体计算机的音频卡中。","analysis":"D"},{"product_id":"20140301101902","ans":"本题考查多媒体基础知识。计算机和多媒体系统中的声音，除了数字波形声音之外，还有一类是使用符号表示的，由计算机合成的声音包括语音合成和音乐合成。音乐合成技术主要有调频（FM)音乐合成、波形表（WaveTable)音乐合成两种方式。调频音乐合成是使高频振荡波的频率按调制信号规律变化的一种调制方式。采用不同调制波频率和调制指数就可以方便地合成具有不同频谱分布的波形，再现某些乐器的音色。可以采用这种方法得到具有独特效果的“电子模拟声”，创造出丰富多彩的声音，是真实乐器所不具备的音色。波形表音乐合成是将各种真实乐器所能发出的所有声音（包括各个音域、声调）录制下来，存储为一个波表文件。播放时，根据MIDI文件记录的乐曲信息向波表发出指令，从“表格”中逐一找出对应的声音信息，经过合成、加工后回放出来。应用调频音乐合成技术的乐音已经很逼真，波形表音乐合成技术的乐音更真实。目前这两种音乐合成技术都应用于多媒体计算机的音频卡中。","analysis":"D"},{"product_id":"20140301102042","ans":"本题考查数据流图的基本概念。数据流图从数据传递和加工的角度，以图形的方式刻画数据流从输入到输出的移动变换过程，其基础是功能分解。对于复杂一些的实际问题，在数据流图中常常出现许多加工，这样看起来不直观，也不易理解，因此用分层的数据流图来建模。按照系统的层次结构进行逐步分解，并以分层的数据流图反映这种结构关系。在分层的数据流图中，各层数据流图之间应保持“平衡”关系，即输入和输出数据流在各层应该是一致的。","analysis":"B"},{"product_id":"20140301102401","ans":"本题考杏软件设计的相关内容。模块独立性是创建良好设计的一个重要原则，一般采用模块间的耦合和模块的内聚两个准则进行度量。内聚是指模块内部各元素之间联系的紧密程度，内聚度越高，则模块的独立性越好。内聚性一般有以下几种：①偶然内聚：指一个模块内的各个处理元素之间没有任何联系。②逻辑内聚：指模块内执行几个逻辑上相似的功能，通过参数确定该模块完成哪一个功能。③时间内聚：把需要同时执行的动作组合在一起形成的模块。④通信内聚：指模块内所有处理元素都在同一个数据结构上操作，或者指各处理使用相同的输入数据或者产生相同的输出数据。⑤顺序内聚：指一个模块中各个处理元素都密切相关于同一功能且必须顺序执行，前一个功能元素的输出就是下一个功能元素的输入。⑥功能内聚：是最强的内聚，指模块内所有元素共同完成一个功能，缺一不可。","analysis":"C"},{"product_id":"20140301104219","ans":"本题考査项目管理及工具技术。根据关键路径法，计算出关键路径为A-C—F—0—1，关键路径长度为17。因此里程碑C在关键路径上，而里程碑B、D和H不在关键路径上。","analysis":"B"},{"product_id":"20140301104449","ans":"本题考查项目管理的人员管理。程序设计小组的组织形式一般有主程序员组、无主程序员组和层次式程序员组。其中无主程序员组中的成员之间相互平等，工作目标和决策都由全体成员民主讨论。对于项目规模较小、开发人员少、采用新技术和确定性较小的项目比较合适，而对大规模项目不适宜采用。","analysis":"C"},{"product_id":"20140301104721","ans":"本题考查项目管理的风险管理。风险控制的目的是辅助项目组建立处理风险的策略。有效的策略必须考虑以下三个问题，即风险避免、风险监控和风险管理及意外事件计划，而其中风险避免是最好的风险控制策略。","analysis":"A"},{"product_id":"20140301105141","ans":"本题考查程序语言基础知识。对逻辑表达式可以进行短路计算，其依据是：aandb的含义是a和b同时为“真”，则aandb为“真”，因此，若a为“假”，则无论b的值为“真”或“假”，aandb必然为“假”；aorb的含义是a和b同时为“假”，则aorb为“假”，因此，若a为“真”，则无论b的值为“真”或“假”，aorb必然为“真”。在优先级和结合性规定下，对逻辑表达式“xandyornotz”求值时，应先计算“xandy”的值，若为“假”，才去计算“notz”的值。因此,若x的值为“假”，则“xandy”的值为“假”，需要计算“notz”来确定表达式的值而不管y是“真”是“假”。当x的值为“真”，则需要计算y的值：若y的值为“真”，则整个表达式的值为“真”（从而不需再计算“notz”)；若y的值为“假”，则需要计算“notz”来确定表达式的值。","analysis":"C"},{"product_id":"20140301105945","ans":"本题考查数组元素的存储。二维数组a[1..N，1..N]的元素布局如下：在按行存储方式下，a[ij]之前的元素个数为(i-l)*N+j-l;在按列存储方式下，a[ij]之前的元素个数为(j-l)*N+i-l。若i=j，则a[ij]是主对角线上的元素，显然(i-l)*N+j-l与(j-l)*N+i-l相等。若i<j，则a[ij]是上三角区域的元素；若i>j，则a[i,j]是下三角区域的元素，这两种情况下，存储在a[i,j]之前的元素个数分别为和(j-l)*N+i-1，其大小关系依赖于i和j的具体取值。","analysis":"B"},{"product_id":"20140301110144","ans":"本题考查程序语言基础知识。后缀表达式（也叫逆波兰式，ReversePolishnotation)是将运算符写在操作数之后的表达式表示方法。表达式“x-(y+c)*8”的后缀式为“xyc+8*-”。","analysis":"D"},{"product_id":"20140301110744","ans":"本题考查操作系统进程管理方面的基础知识。在图a的情况下，项目P1申请2个资金，P2申请1个资金，则企业资金管理处分配资金后项目Pl、P2、P3、P4已用的资金数分别为4、4、2、3,可用资金数为2,故尚需的资金数分别为2、4、6、7。由于可用资金数为2,能保证项目P1完成。假定项目P1完成释放资源后，可用资金数为6,能保证项目P2或P3完成。同理，项目P2完成释放资源后，可用资金数为10,能保证项目P3或P4完成，故资金周转状态是安全的。","analysis":"C"},{"product_id":"20140301111316","ans":"对于图b，因为企业的总资金数是15，企业资金管理处为项目P2、P3、P4已分配资金数为3、2、3,故可用资金数为7。","analysis":"D"},{"product_id":"20140301112629","ans":"在图b的情况下，企业资金管理处为项目P2、P3、P4已分配资金数为3、2、3,若企业资金管理处又为项目P2、P3、P4分配资金数为2、2、3,则企业分配后项目P2、P3、P4已用资金数分别为5、4、6,可用资金为0，尚需资金数分别为3、4、4,故资金周转状态是不安全的。","analysis":"D"},{"product_id":"20140301113014","ans":"本题考查操作系统中系统内存管理方面的知识。从题图中可见，程序的MOVE指令跨两个页面，且源地址Datal和目标地址Data2所涉及的区域也跨两个页面的页内地址，根据题意1、2、3、4和5号页面不在内存，系统取“MOVEDatal，Data2”的指令时，由于该指令跨越两个页面0、1，查页面变换表可以发现1号页面不在内存，故需要产生一次缺页中断；取地址为Datal的操作数时，由于该操作数不在内存且跨两个页面2、3,需要将2、3页面装入内存，所以产生两次缺页中断；同理，取地址为Data2的操作数时，由于该操作数不在内存且跨两个页面4、5,需要将4、5页面装入内存，所以产生两次缺页中断，共产生5次缺页中断。","analysis":"C"},{"product_id":"20140301113056","ans":"本题考查操作系统中系统内存管理方面的知识。从题图中可见，程序的MOVE指令跨两个页面，且源地址Datal和目标地址Data2所涉及的区域也跨两个页面的页内地址，根据题意，1、2、3、4和5号页面不在内存，系统取“MOVEDatal，Data2”的指令时，由于该指令跨越两个页面0、1，查页面变换表可以发现1号页面不在内存，故需要产生-次缺页中断；取地址为Datal的操作数时，由于该操作数不在内存且跨两个页面2、3,需要将2、3页面装入内存，所以产生两次缺页中断；同理，取地址为Data2的操作数时，由于该操作数不在内存且跨两个页面4、5,需要将4、5页面装入内存，所以产生两次缺页中断，共产生5次缺页中断。","analysis":"B"},{"product_id":"20140301113155","ans":"本题考查操作系统中系统内存管理方面的知识。从题图中可见，程序的MOVE指令跨两个页面，且源地址Datal和目标地址Data2所涉及的区域也跨两个页面的页内地址，根据题意，1、2、3、4和5号页面不在内存，系统取“MOVEDatal，Data2”的指令时，由于该指令跨越两个页面0、1，查页面变换表可以发现1号页面不在内存，故需要产生-次缺页中断；取地址为Datal的操作数时，由于该操作数不在内存且跨两个页面2、3,需要将2、3页面装入内存，所以产生两次缺页中断；同理，取地址为Data2的操作数时，由于该操作数不在内存且跨两个页面4、5,需要将4、5页面装入内存，所以产生两次缺页中断，共产生5次缺页中断。","analysis":"C"},{"product_id":"20140301113424","ans":"本题考査软件开发过程模型。增量模型是一种阶段化的软件开发过程模型。在该过程模型中，客户提出系统需求，并指出哪些需求是最重要的。开发团队把软件产品作为一系列的增量构件来设计、编码、集成和测试。每个构件由多个相互作用的模块构成，并且能完成特定的功能。其优点包括：能较短时间内向用户提交可完成一些有用的工作产品；逐步增加产品的功能，使用户有较充裕的时间学习和适应新产品；项目失败的风险较低；优先级最高的服务首先交付，然后依次将其他构件集成进来，这意味着最重要的服务将接受最多的测试。因此增量模式是一种能够快速构造可运行产品的方法，也适用于今天竞争激烈，需要快速发布产品的市场环境。","analysis":"B"},{"product_id":"20140301113619","ans":"本题考查软件过程模型。软件过程是软件生存周期中的一系列相关活动，即用于开发和维护软件及相关产品的一系列活动。瀑布模型从一种非常高层的角度描述了软件开发过程中进行的活动，并且提出了要求开发人员经过的事件序列。该模型适用于项目开始时需求己确定的情况。V模型是瀑布模型的变种，它说明测试活动是如何与分析和设计相联系的。原型模型允许开发人员快速地构造整个系统或系统的一部分以理解或澄清问题。原型的用途是获知用户的真正需求，因此原型模型可以有效地引发系统需求。螺旋模型把开发活动和风险管理结合起来，以将风险减到最小并控制风险。本题中系统功能有较清晰定义意味着需求较确定，且对交付时间有严格要求，因此最适宜用瀑布模型。","analysis":"A"},{"product_id":"20140301113822","ans":"在软件开发完成交付用户使用后，就进入软件运行/维护阶段。软件维护活动根据其内容可以分为4种类型：①正确性维护。为了识别和纠正软件错误，改正软件性能上的缺陷，排除实施的误使用，应进行的诊断和改正错误的过程。②适应性维护。由于信息技术飞速发展，软件运行的外部环境或数据环境可能发生变化，为了使软件适应这种变化而修改软件的过程。③完善性维护。在软件使用过程中，用户往往会对软件提出新的功能与性能要求，为了满足这些要求，需要修改或再开发软件，以扩充软件功能、增强软件性能、改进加工效率、提高软件的可维护性而进行的维护活动。④预防性维护。为了提高软件的可维护性和可靠性等，为以后进一步改进软件打下良好基础而进行的维护工作。","analysis":"C"},{"product_id":"20140301114020","ans":"本题考查软件质量的相关知识。McCall软件质量模型从软件产品的运行、修正和转移三个方面确定了11个质量特性。其中产品运行方面包括正确性、可靠性、易使用性、效率和完整性；产品修正方面包括可维护性、灵活性和可测试性；产品转移方面包括可移植性、复用性和互用性。","analysis":"D"},{"product_id":"20140301114242","ans":"本题考査软件复杂性度量。McCabe度量法计算程序的环路复杂性为V(G)=m-n+2p,其中V(G)是有向图G中的环路数，m是图G中弧的个数，n是图G中顶点的个数，p为图G中的强连通分量数。上图中，弧的个数为10,顶点的个数为9,p=l，因此有V(G)=m-n+2p=10-9+2=3。","analysis":"B"},{"product_id":"20140301114721","ans":"本题考査软件测试的基本概念。白盒测试也称为结构测试，根据程序的内部结构和逻辑来设计测试用例，对程序的路径和过程进行测试，检查是否满足设计的需要。在白盒测试中，语句覆盖是指选择足够的测试用例，使被测程序中每条语句至少执行一次。它对程序执行逻辑的覆盖很低，因此一般认为是很弱的逻辑覆盖。判定覆盖是指设计足够的测试用例，使得被测程序中每个判定表达式至少获得一次“真”植和“假”值。条件覆盖是指设计足够的测试用例，使得每一个判定语句中每个逻辑条件的各种可能的值至少满足一次。路径覆盖是指覆盖被测程序中所有可能的路径。在这些覆盖技术中，从弱到强依次为语句覆盖、判定覆盖、条件覆盖和路径覆盖。在上图中，要完成路径覆盖，至少需要3个测试用例才可以，如测试用例（0)、(8)和（16)即可完成路径覆盖，测试用例格式为（x的值)。","analysis":"A"},{"product_id":"20140301114818","ans":"本题考査软件测试的基本概念。白盒测试也称为结构测试，根据程序的内部结构和逻辑来设计测试用例，对程序的路径和过程进行测试，检查是否满足设计的需要。在白盒测试中，语句覆盖是指选择足够的测试用例，使被测程序中每条语句至少执行一次。它对程序执行逻辑的覆盖很低，因此一般认为是很弱的逻辑覆盖。判定覆盖是指设计足够的测试用例，使得被测程序中每个判定表达式至少获得一次“真”植和“假”值。条件覆盖是指设计足够的测试用例，使得每一个判定语句中每个逻辑条件的各种可能的值至少满足一次。路径覆盖是指覆盖被测程序中所有可能的路径。在这些覆盖技术中，从弱到强依次为语句覆盖、判定覆盖、条件覆盖和路径覆盖。在上图中，要完成路径覆盖，至少需要3个测试用例才可以，如测试用例（0)、(8)和（16)即可完成路径覆盖，测试用例格式为（x的值)。","analysis":"C"},{"product_id":"20140301122638","ans":"本题考査软件质量特性的基础知识。根据ISO/IEC9126软件质量模型的定义，可维护性质量特性包含易分析性、易改变性、稳定性和易测试性4个子特性。其中易分析性是指为诊断缺陷或失效原因，或为判定待修改的部分所需努力有关的软件属性；易改变性是指与进行修改、排错或适应环境变换所需努力有关的软件属性；稳定性是指与修改造成未预料效果的风险有关的软件属性；易测试性是指为确认经修改软件所需努力有关的软件属性。","analysis":"A"},{"product_id":"20140301122840","ans":"本题考查面向对象的基本知识。在面向对象技术中，包用于将关系紧密的模型元素组织在一起，提供一个命名空间，以提供访问控制。用例之间有继承、包含和扩展关系。类是在对象之上的抽象，对象是类的具体化，对定义好的类的属性的不同赋值就可以得到该类的对象实例。组合关系表示整体与其部分之间的一种关系。","analysis":"D"},{"product_id":"20140301123102","ans":"本题考查面向对象的基本知识。封装是一种信息隐藏技术，其目的是使对象（组件）的使用者和生产者分离，也就是使其他开发人员无需了解所要使用的软件组件内部的工作机制，只需知道如何使用组件，即组件提供的功能及其接口。","analysis":"A"},{"product_id":"20140301123635","ans":"本题考查面向对象的基本知识。在面向对象系统中，绑定是一个把过程调用和响应调用需要执行的代码加以结合的过程。在有些程序设计语言中，绑定是在编译时进行的，叫做静态绑定。在有些程序设计语言中，绑定则是在运行时进行的，即一个给定的过程调用和响应调用需执行的代码的结合直到调用发生时才进行。","analysis":"B"},{"product_id":"20140301124051","ans":"本题考查统一建模语言（UML)的基本知识。UML2.0中提供了多种图形，序列图是场景的图形化表示，描述了以时间顺序组织的对象之间的交互活动。其中消息定义了交互中生命线之间的特定交互，有同步消息、异步消息和返回消息三类。同步消息指进行阻塞调用，调用者中止执行，等待控制权返回，需要等待返回消息；而异步消息的调用者发出消息后继续执行，不引起调用者阻塞，也不等待返回消息。消息由名称进行标识，还描述出消息的发出者和接收者。异步消息由空心箭头表示，如上图中3所示，同步消息用实心三角箭头表示，如上图中1所示，返回消息。","analysis":"A"},{"product_id":"20140301124158","ans":"本题考查统一建模语言（UML)的基本知识。UML2.0中提供了多种图形，序列图是场景的图形化表示，描述了以时间顺序组织的对象之间的交互活动。其中消息定义了交互中生命线之间的特定交互，有同步消息、异步消息和返回消息三类。同步消息指进行阻塞调用，调用者中止执行，等待控制权返回，需要等待返回消息；而异步消息的调用者发出消息后继续执行，不引起调用者阻塞，也不等待返回消息。消息由名称进行标识，还描述出消息的发出者和接收者。异步消息由空心箭头表示，如上图中3所示，同步消息用实心三角箭头表示，如上图中1所示，返回消息。","analysis":"A"},{"product_id":"20140301124225","ans":"本题考查统一建模语言（UML)的基本知识。UML2.0中提供了多种图形，序列图是场景的图形化表示，描述了以时间顺序组织的对象之间的交互活动。其中消息定义了交互中生命线之间的特定交互，有同步消息、异步消息和返回消息三类。同步消息指进行阻塞调用，调用者中止执行，等待控制权返回，需要等待返回消息；而异步消息的调用者发出消息后继续执行，不引起调用者阻塞，也不等待返回消息。消息由名称进行标识，还描述出消息的发出者和接收者。异步消息由空心箭头表示，如上图中3所示，同步消息用实心三角箭头表示，如上图中1所示，返回消息。","analysis":"C"},{"product_id":"20140301124256","ans":"本题考查统一建模语言（UML)的基本知识。UML2.0中提供了多种图形，序列图是场景的图形化表示，描述了以时间顺序组织的对象之间的交互活动。其中消息定义了交互中生命线之间的特定交互，有同步消息、异步消息和返回消息三类。同步消息指进行阻塞调用，调用者中止执行，等待控制权返回，需要等待返回消息；而异步消息的调用者发出消息后继续执行，不引起调用者阻塞，也不等待返回消息。消息由名称进行标识，还描述出消息的发出者和接收者。异步消息由空心箭头表示，如上图中3所示，同步消息用实心三角箭头表示，如上图中1所示，返回消息。","analysis":"B"},{"product_id":"20140301124517","ans":"本题考查设计模式的基本知识。每一个设计模式描述了一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心，使该方案能够重用而不必做重复劳动。设计模式根据目的进行分类，可以分为创建型、结构型和行为型三种。其中创建型模式与对象的创建有关；结构型模式用于处理类和对象的组合；行为型模式描述类或对象怎样交互和怎样分配职责。适配器（Adapter)模式是一种结构型模式；命令（Command)模式和状态（State)模式是行为型模式；生成器（Builder)模式是一种创建型模式。","analysis":"A"},{"product_id":"20140301125127","ans":"本题考查设计模式的基本知识。代理（Proxy)模式是为其他对象提供一种代理以控制对这个对象的访问，使得只有在确实需要这个对象时才对其进行创建和初始化。桥接器（Bridge)模式将对象的抽象和其实现分离，从而可以独立地改变它们，当一个抽象可能有多个实现吋，抽象类定义对该抽象的接口，而具体的子类则用不同方式加以实现。组合（Composite)模式描述了如何将对象组合成树形结构以构造一个层次结构来表示“部分-整体”，使得客户对单个对象和组合对象的使用具有一致性，这一结构由两种类型的对象所对应的类构成，使得可以组合基元对象以及其他的组合对象，从而形成任意复杂的结构。上阁中的Composite定义有子部件的那些部件的行为；组合部件的对象由Client通过Component提供的接口操作。装饰器（Decorator)模式则描述动态地给一个对象添加一些额外的职责。","analysis":"C"},{"product_id":"20140301125147","ans":"本题考查设计模式的基本知识。代理（Proxy)模式是为其他对象提供一种代理以控制对这个对象的访问，使得只有在确实需要这个对象时才对其进行创建和初始化。桥接器（Bridge)模式将对象的抽象和其实现分离，从而可以独立地改变它们，当一个抽象可能有多个实现吋，抽象类定义对该抽象的接口，而具体的子类则用不同方式加以实现。组合（Composite)模式描述了如何将对象组合成树形结构以构造一个层次结构来表示“部分-整体”，使得客户对单个对象和组合对象的使用具有一致性，这一结构由两种类型的对象所对应的类构成，使得可以组合基元对象以及其他的组合对象，从而形成任意复杂的结构。上图中的Composite定义有子部件的那些部件的行为；组合部件的对象由Client通过Component提供的接口操作。装饰器（Decorator)模式则描述动态地给一个对象添加一些额外的职责。","analysis":"D"},{"product_id":"20140301125211","ans":"本题考查设计模式的基本知识。代理（Proxy)模式是为其他对象提供一种代理以控制对这个对象的访问，使得只有在确实需要这个对象时才对其进行创建和初始化。桥接器（Bridge)模式将对象的抽象和其实现分离，从而可以独立地改变它们，当一个抽象可能有多个实现吋，抽象类定义对该抽象的接口，而具体的子类则用不同方式加以实现。组合（Composite)模式描述了如何将对象组合成树形结构以构造一个层次结构来表示“部分-整体”，使得客户对单个对象和组合对象的使用具有一致性，这一结构由两种类型的对象所对应的类构成，使得可以组合基元对象以及其他的组合对象，从而形成任意复杂的结构。上图中的Composite定义有子部件的那些部件的行为；组合部件的对象由Client通过Component提供的接口操作。装饰器（Decorator)模式则描述动态地给一个对象添加一些额外的职责。","analysis":"A"},{"product_id":"20140301125806","ans":"本题考查程序语言处理基础知识。从有限自动机的初态到终态的路径上的标记形成其可识别的字符串。对于题中的自动机，从A出发到达C结束的所有路径中必然包含BC这条弧（标记为1)，同时到达B的弧上都标记了0,所以其识别的字符串必须以01结尾。","analysis":"C"},{"product_id":"20140301125935","ans":"本题考查数据库设计方面的基础知识。E-R模型向关系模型转换时，两个以上实体之间多对多的联系应该转换为一个独立的关系模式，且该关系模式的关键字由这些实体的关键字组成。","analysis":"B"},{"product_id":"20140301130134","ans":"本题考查程序语言处理基础知识。一个函数被调用时，可能需要接收从外部传入的数据信息，传值调用与引用调用（传地址）是函数调用时常采用的信息传递方式。传值调用是将实参的值传给被调用函数的形参，因此实参可以是常量、变量、表达式或函数调用，而引用调用的实质是将实参的地址传给被调用函数的形参，因此实参必须具有地址。","analysis":"D"},{"product_id":"20140301130313","ans":"本题考查程序语言处理基础知识。、程序的翻译通常有两种基本方式：一种是编译方式，另一种是解释方式。在编译方式下，首先将源程序翻译为等价的目标程序，源程序的翻译和目标程序的运行是完全独立的两个阶段；而解释方式下，对源程序的翻译和运行是结合在一起进行的，并不生成目标代码。编译过程基本上可以划分为词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成等几个阶段，其中，中间代码生成和代码优化不是必须的。在词法、语法、语义分析方面，编译方式和解释方式没有区别。","analysis":"C"},{"product_id":"20140301130720","ans":"本题考查关系代数运算方面的基础知识。投影运算n是向关系的垂直方向进行运算，其含义为在关系R中选择出若干属性列组成新的关系，记作：πAi，Ai2,…，Aii(R)={t[Ai1,Ai2…，Ain]|t∈R]。本试题中，关系R(A,B,C,D)共有4个属性，属性A、B、C和D分别位于第1列、第2列、第3列和第4列，π1,3(R)相当于在关系R的第1列和第3列上进行投影运算，即在关系R的属性A和C上进行投影运算，故π1,3(R)与πA,C(R)是等价的。","analysis":"C"},{"product_id":"20140301130910","ans":"本题考查关系代数运算方面的基础知识。投影运算n是向关系的垂直方向进行运算，其含义为在关系R中选择出若干属性列组成新的关系，记作：πAi1,Ai2,…，Aii(R)={t[Ai1,Ai2，…，Ain]|t∈R]。本试题中，关系R(A,B,C,D)共有4个属性，属性A、B、C和D分别位于第1列、第2列、第3列和第4列，π1,3(R)相当于在关系R的第1列和第3列上进行投影运算，即在关系R的属性A和C上进行投影运算，故π1,3(R)与πA,C(R)是等价的。","analysis":"D"},{"product_id":"20140301131345","ans":"本题考查关系数据库及SQL方面的基础知识。根据题意，零件P关系中的（零件号，供应商）可决定零件P关系的所有属性，所以零件P关系的主键为（零件号，供应商）；又因为，根据题意（零件号，供应商）一>零件名称，而零件号一>零件名称，供应商一>供应商所在地，可以得出零件名称和供应商所在地都部分依赖于码，所以该关系模式属于1NF。","analysis":"A"},{"product_id":"20140301131516","ans":"本题考查关系数据库及SQL方面的基础知识。查询各种零件的平均库存量、最高库存量与最低库存量之间差距时，首先需要在结果列中的空（55)处填写“AVG(库存量）AS平均库存量，MAX(库存量)-MIN(库存量)AS差值”。其次必须用分组语句按零件号分组，故空（56)应填写“GROUPBY零件号”。","analysis":"A"},{"product_id":"20140301131721","ans":"本题考查关系数据库及SQL方面的基础知识。查询各种零件的平均库存量、最高库存量与最低库存量之间差距时，首先需要在结果列中的空（55)处填写“AVG(库存量）AS平均库存量，MAX(库存量)-MIN(库存量)AS差值”。其次必须用分组语句按零件号分组，故空（56)应填写“GROUPBY零件号”。","analysis":"D"},{"product_id":"20140301132343","ans":"本题考查数据结构基础知识。栈和队列是两种常用的数据结构。栈的特点是后进先出，队列的特点是先进先出。因此，入队序列与出队序列一定相同。在入栈序列一定的情况下，由于元素的出栈时机不同，会形成不同的出栈序列，入栈序列与出栈序列可以相同，也可以不同。","analysis":"C"},{"product_id":"20140301132916","ans":"本题考查字符串的模式匹配运算。KMP模式匹配算法是对基本模式匹配算法的改进，其改进之处在于：每当匹配过程中出现相比较的字符不相等时，不需要回溯主串的字符位置指针，而是利用已经得到的“部分匹配”结果将模式串向右“滑动”尽可能远的距离，再继续进行比较。在KMP算法中，依据模式串的next函数值实现子串的滑动。若令next[j]=k，则next[j]表示当模式串中的Pj与主串中相应字符不相等时，令模式串的pk与主串的相应字符进行比较。根据next的定义，模式串“aaabaaa”的next函数值为0123123。","analysis":"A"},{"product_id":"20140301133459","ans":"本题考查数据结构中二叉树的基础知识。对任何一棵二叉树，若其终端节点数为n0,度为2的节点数为n2,则n0=n2+l。证明如下：设一棵二叉树上叶结点数为n0,单分支结点数为n1，双分支结点数为n2,则总结点数=n0+n1+n2。在一棵二叉树中，所有结点的分支数（即度数）应等于单分支结点数加上双分支结点数的2倍，即总的分支数=n1+2n2。由于二叉树中除根结点以外，每个结点都有唯一的一个分支指向它，因此二叉树中：总的分支数=总结点数-1。因此，n1+2n2=n0+n1+n2-l,即n0=n2+l。","analysis":"D"},{"product_id":"20140301134350","ans":"本题考查数据结构中图结构基础知识。图的基本存储结构有邻接矩阵表示法和邻接链表表示法。图的邻接矩阵表示利用一个矩阵来表示图中顶点之间的关系。对于具有n个顶点的图G=(V，E),其邻接矩阵是一个n阶方阵，且满足：邻接表存储是指为图的每个顶点建立一个单链表，第i个单链表中的结点表示依附于顶点Vi的边（对于有向图是以Vi为尾的弧)。例如，下面分别为一个有向图a和一个无向图b。有向图a和无向图b的邻接矩阵如下所示有向图a和无向图b的邻接表如下图所示。图中的顶点数决定了邻接矩阵的阶和邻接表中的单链表数目，无论是对有向图还是无向图，边数的多少决定了单链表中的结点数，而不影响邻接矩阵的规模，因此完全图适合采用邻接矩阵存储。","analysis":"C"},{"product_id":"20140301151346","ans":"本题考查归并排序算法。归并的过程是：取序列A的一个元素+和序列B的一个元素bj，若ai>bj，则输出bj,接下来令七与1^+1比较，否则输出ai;接下来令ai+1与bj比较，重复以上过程直至将所有元素输出。对于最终排列a1,a2…，an,b1,b2，…,bn的情况，归并过程中进行了n次比较，分别是a1<b1，a2<b1…，an<b1最后依次输出b1,b2,…,bn。对于最终排列为b1,b2，…,bn,a1,a2…，an的情况，归并过程中进行了n次比较，分别是b1<a1，b2<a1,…，bn<a1,最后依次输出a1,a2,…an对于最终排列为a1,b1,a2,b2,…,ai,bi,…,an,bn的情况，归并过程中进行了2n-1次比较，分别是a1<b1，b1<a2，a2<b2，b2<a3…，an<bn.若最终排列为a1,a2,…，ai/2,b1,b2,…,bi/2,ai/2+1,ai/2+2,…，an,bi/2+1,bi/2+2,…，bn则在归并过程中，分别是a1,a2,…,a1/2,各进行一次比较，共i/2次；然后是b1,b2，…，bi/2分别与ai/2+1各进行一次比较，共(n-i/2)次；接下来是ai/2+1,ai/2+2,…，an各进行一次比较，共（n-i/2)次，合计比较次数为i/2+i/2+n-i/2=n+i/2。","analysis":"C"},{"product_id":"20140301135552","ans":"本题考查算法分析技术的相关知识。几个算法时间复杂度符号的定义分别如下：O记号：给出一个函数的渐进上界。给定一个函数g(n)，0(g(n))表示为一个函数集合的{f(n):#在正常数c和no，使得对所有的n>no，有0≤f(n)≤cg(n)}记号：给出一个函数的渐进下界。给定一个函数g(n)，n(g(n))表示为一个函数集合{f(n):存在正常数c和no,使得对所有的n>no，有0≤cg(n)≤f(n)}记号：给出一个函数的渐进上界和下界，即渐进确界。给定一个函数g(n)，0(g(n))表示为一个函数集合{f(n):存在正常数C1、C2和n0,使得对所有的n≥n0，有n≥(0≤c1g(n)≤f(n)≤c2g(n)}","analysis":"C"},{"product_id":"20140301135751","ans":"本题考查算法设计策略。由于每次选择下一个要访问的城市时都是基于与当前最近的城市来进行，是一种贪心的选择策略，因此采用的是贪心策略。而货车从中央仓库出发，第一个要到达的目的地是在n个目的地中选择一个，第二个要到达的目的地是在n-1个目的地中选择一个，……，第n个要到达的目的地是在1个目的地中选择一个，因此时间复杂度为n+(n-1)+…+l=n*(n-l)/2=","analysis":"C"},{"product_id":"20140301140202","ans":"本题考查算法设计策略。由于每次选择下一个要访问的城市时都是基于与当前最近的城市来进行，是一种贪心的选择策略，因此采用的是贪心策略。而货车从中央仓库出发，第一个要到达的目的地是在n个目的地中选择一个，第二个要到达的目的地是在n-1个目的地中选择一个，……，第n个要到达的目的地是在1个目的地中选择一个，因此时间复杂度为n+(n-1)+…+1=n*(n-l)/2=。","analysis":"A"},{"product_id":"20140301142004","ans":"本题考查算法分析方法。根据伪代码可知算法的基本思想，从前往后检查元素，若为负数继续向前检杏；若遇到正数，则开始从后往前检查元素,若为正数则继续往前检查若遇到负数则与前面遇到的正数进行交换。重复检査元素，所有元素检查完毕，根据该思想，可知每个元素因此算法的时间复杂度为线性时间，即在该过程中，仅需要一个额外的辅助存储空间，以便进行元素的交换，因此空间复杂度为常数，即","analysis":"C"},{"product_id":"20140301142249","ans":"以太网交换机根据数据链路层MAC地址进行帧交换帧中继网和ATM网都是面向连接的通信网，交换机根据预先建立的虚电路标识进行交换。帧中继的虚电路号是DLCI，进行交换的协议数据单元为“帧”；而ATM网的虚电路号为VPI和VCI，进行交换的协议数据单元为“信元”。三层交换机是指因特网中使用的高档交换机，这种设备把MAC交换的高带宽和低延迟优势与网络层分组路由技术结合起来，其工作原理可以概括为：一次路由、多次交换、就是说，当三层交换机第一次收到一个数据包时必须通过路由功能寻找转发端口，同时记住目标MAC地址和源MAC地址，以及其他相关信息，当再次收到目标地址和源地址相同的帧时就直接进行交换了，不再调用路由功能。所以三层交换机不但具有路由功能，而且比通常的路由器转发得更快。","analysis":"C"},{"product_id":"20140301142529","ans":"本题考查SMTP协议及相关服务。SMTP传输的邮件报文需采用ASCII进行编码。","analysis":"A"},{"product_id":"20140301143540","ans":"可用性是指网络系统、网络元素或网络应用对用户可利用的时间的百分比。有些应用对可用性很敏感，例如飞机订票系统若宕机一小时，就可能减少几十万元的票款；而股票交易系统如果中断运行一分钟，就可能造成几千万元的损失。实际上，可用性是网络元素可靠性的表现，而可靠性是指网络元素在具体条件下完成特定功能的概率。如果用平均无故障时间（MeanTimeBetweenFailure,MTBF)来度量网络兀素的故障率，则可用性A可表示为MTBF的函数：其中MTTR(MeanTimeToRqwir)为发生失效后的平均维修时间。由于网络系统由许多网络元素组成，.因此系统的可靠性不但与各个元素的可靠性有关，而且还与网络元素的组织形式有关。根据可靠性理论，由元素串并联组成的系统的可用性与网络元素的可用性之间的关系如下图所示。从图a中可以看出，若两个元素串联，则可用性减少。例如两个Modem串联在链路的两端，若单个Modem的可用性A=0.98，并假定链路其他部分的可用性为1，贝ij整个链路的可用性A=0.98x0.98=0.9604。从图b中可以看出，若两个元素并联，则可用性增加。例如终端通过两条链路连接到主机，若一条链路失效，另外一条链路自动备份。假定单个链路的可用性A=0.98，则双链路的可用性A=2x0.98-0.98x0.98=1.96-0.9604=0.9996。","analysis":"D"},{"product_id":"20140301144220","ans":"结构化综合布线系统（StructureCablingSystem)是基于现代计算机技术的通信物理平台，集成了语音、数据、图像和视频的传输功能，消除了原有通信线路在传输介质上的差别。结构化布线系统分为6个子系统：工作区子系统、水平子系统、干线子系统、设备间子系统、管理子系统和建筑群子系统。工作区子系统（WorkLocation)。工作区子系统是由终端设备到信息插座的整个区域。一个独立的需要安装终端设备的区域划分为一个工作区。工作区应支持电话、数据终端、计算机、电视机、监视器以及传感器等多种终端设备。水平布线子系统（Horizontal)。各个楼层接线间的配线架到工作区信息插座之间所安装的线缆属于水平子系统。水平子系统的作用是将干线子系统线路延伸到用户工作区。管理子系统（Administration)。管理子系统设置在楼层的接线间内，由各种交连设备（双绞线跳线架、光纤跳线架）以及集线器和交换机等交换设备组成，交连方式取决于网络拓扑结构和工作区设备的要求。交连设备通过水平布线子系统连接到各个工作区的信息插座，集线器或交换机与交连设备之间通过短线缆互连，这些短线被称为跳线。通过跳线的调整，可以在工作区的信息插座和交换机端口之间进行连接切换。干线子系统（Backbone）干线子系统是建筑物的主干线缆，实现各楼层设备间子系统之间的互连。干线子系统通常由垂直的大对数铜缆或光缆组成，一头端接于设备间的主配线架上，另一头端接在楼层接线间的管理配线架上。设备间子系统（Equipment)。建筑物的设备间是网络管理人员值班的场所，设备间子系统由建筑物的进户线、交换设备、电话、计算机、适配器以及保安设施组成，实现中央主配线架与各种不同设备(如PBX、网络设备和监控设备等）之间的连接。建筑群子系统（Campus)。建筑群子系统也叫园区子系统，它是连接各个建筑物的通信系统。大楼之间的布线方法有三种：一种是地下管道敷设方式，管道内敷设的铜缆或光缆应遵循电话管道和入孔的各种规定，安装时至少应预留1〜2个备用管孔，以备扩充之用。第二种是直埋法，要在同一个沟内埋入通信和监控电缆，并应设立明显的地面标志。最后一种是架空明线，这种方法需要经常维护。","analysis":"D"},{"product_id":"20140301144628","ans":"子网172.6.32.0/20被划分为子网172.6.32.0/26,网络掩码增加了6位，被划分成了64个子网，每个子网的主机ID部分为6位，可以提供主机地址个数为62。","analysis":"D"},{"product_id":"20140301144928","ans":"本题考査对英语资料的阅读理解。本段英文简要介绍云计算的概念。云计算主要是将资源看作云服务，包括应用程序、计算能力、存储容量、网络、编程工具，以及通信和协作工具。云计算最初由一些大的Internet服务提供商构建的基础设施而起步，其架构呈现出大规模、水平分布式系统资源、抽象的1T服务、管理持续配置、资源池等特性，数据大多存储于Internet上的某个地方的服务器上，应用程序运行于云服务器和用户浏览器中。云和网格都针对有效的水平可扩展性，避免节点的单点失效对系统的影响，都按使用付费。它们的区别是网格通常是处理一批有明确定义起点和终点的作业，而云服务是可以连续不断的。另外，云扩展了资源的类型，包括文件存储、数据库和Web服务等，也将适用性扩展到Web和企业应用。","analysis":"C"},{"product_id":"20140301145204","ans":"本题考査对英语资料的阅读理解。本段英文简要介绍云计算的概念。云计算主要是将资源看作云服务，包括应用程序、计算能力、存储容量、网络、编程工具，以及通信和协作工具。云计算最初由一些大的Internet服务提供商构建的基础设施而起步，其架构呈现出大规模、水平分布式系统资源、抽象的1T服务、管理持续配置、资源池等特性，数据大多存储于Internet上的某个地方的服务器上，应用程序运行于云服务器和用户浏览器中。云和网格都针对有效的水平可扩展性，避免节点的单点失效对系统的影响，都按使用付费。它们的区别是网格通常是处理一批有明确定义起点和终点的作业，而云服务是可以连续不断的。另外，云扩展了资源的类型，包括文件存储、数据库和Web服务等，也将适用性扩展到Web和企业应用。","analysis":"D"},{"product_id":"20140301145219","ans":"本题考査对英语资料的阅读理解。本段英文简要介绍云计算的概念。云计算主要是将资源看作云服务，包括应用程序、计算能力、存储容量、网络、编程工具，以及通信和协作工具。云计算最初由一些大的Internet服务提供商构建的基础设施而起步，其架构呈现出大规模、水平分布式系统资源、抽象的1T服务、管理持续配置、资源池等特性，数据大多存储于Internet上的某个地方的服务器上，应用程序运行于云服务器和用户浏览器中。云和网格都针对有效的水平可扩展性，避免节点的单点失效对系统的影响，都按使用付费。它们的区别是网格通常是处理一批有明确定义起点和终点的作业，而云服务是可以连续不断的。另外，云扩展了资源的类型，包括文件存储、数据库和Web服务等，也将适用性扩展到Web和企业应用。","analysis":"A"},{"product_id":"20140301145237","ans":"本题考査对英语资料的阅读理解。本段英文简要介绍云计算的概念。云计算主要是将资源看作云服务，包括应用程序、计算能力、存储容量、网络、编程工具，以及通信和协作工具。云计算最初由一些大的Internet服务提供商构建的基础设施而起步，其架构呈现出大规模、水平分布式系统资源、抽象的1T服务、管理持续配置、资源池等特性，数据大多存储于Internet上的某个地方的服务器上，应用程序运行于云服务器和用户浏览器中。云和网格都针对有效的水平可扩展性，避免节点的单点失效对系统的影响，都按使用付费。它们的区别是网格通常是处理一批有明确定义起点和终点的作业，而云服务是可以连续不断的。另外，云扩展了资源的类型，包括文件存储、数据库和Web服务等，也将适用性扩展到Web和企业应用。","analysis":"C"},{"product_id":"20140301145500","ans":"本题考査对英语资料的阅读理解。本段英文简要介绍云计算的概念。云计算主要是将资源看作云服务，包括应用程序、计算能力、存储容量、网络、编程工具，以及通信和协作工具。云计算最初由一些大的Internet服务提供商构建的基础设施而起步，其架构呈现出大规模、水平分布式系统资源、抽象的1T服务、管理持续配置、资源池等特性，数据大多存储于Internet上的某个地方的服务器上，应用程序运行于云服务器和用户浏览器中。云和网格都针对有效的水平可扩展性，避免节点的单点失效对系统的影响，都按使用付费。它们的区别是网格通常是处理一批有明确定义起点和终点的作业，而云服务是可以连续不断的。另外，云扩展了资源的类型，包括文件存储、数据库和Web服务等，也将适用性扩展到Web和企业应用。","analysis":"B"}]},{"paperId":"76","field":"20112","question_list":[{"product_id":"20140305005101","ans":"本题考查指令系统基础知识。直接寻址是指操作数存放在内存单元中，指令中直接给出操作数所在存储单元的地址。而跳转指令中的操作数即为要转向执行的指令地址。因此，应将指令中的地址码送入程序计数器（PC)，以获得下一条指令的地址，从而实现程序执行过程的自动控制功能。","analysis":"A"},{"product_id":"20140305155931","ans":"本题考查计算机系统中的输入输出系统基础知识。常用的I/O接口编址方法有两种：一是与内存单元统一编址，二是单独编址。与内存单元统一编址方式下，是将I/O接口中有关的寄存器或存储部件看作存储器单元，与主存中的存储单元统一编址。这样，内存地址和接口地址统一在一个公共的地址空间里，对I/O接口的访问就如同对主存单元的访问一样，可以用访问内存单元的指令访问I/O接口。I/O接口单独编址是指通过设置单独的I/O地址空间，为接口中的有关寄存器或存储部件分配地址码，需要设置专门的I/o指令进行访问。这种编址方式的优点是不占用主存的地址空间，访问主存的指令和访问接口的指令不同，在程序中容易使用和辨认。","analysis":"D"},{"product_id":"20140305160059","ans":"本题考查存储系统基础知识。髙速缓存(Cache)的出现主要有两个因素：首先是由于CPU的速度和性能提高很快而主存速度较低且价格高，其次就是程序执行的局部性特点。因此，才将速度比较快而容量有限的静态存储器芯片构成Cache，以尽可能发挥CPU的高速度。因此，必须用硬件来实现Cache的全部功能。","analysis":"A"},{"product_id":"20140305160155","ans":"本题考查总线基础知识。总线是一组能为多个部件分时共享的信息传送线，用来连接多个部件并为之提供信息交换通路，通过总线复用方式可以减少总线中信号线的数量，以较少的信号线传输更多的信息。","analysis":"C"},{"product_id":"20140305160344","ans":"本题考查计算机系统基础知识。寄存器组是CPU中的一个重要组成部分，它是CPU内部的临时存储空间。寄存器既可以用来存放数据和地址，也可以存放控制信息或CPU工作时的状态。在CPU中增加寄存器的数量，可以使CPU把执行程序时所需的数据尽可能地放在寄存器中，从而减少访问内存的次数，提高其运行速度。但是，寄存器的数目也不能太多，除了增加成本外，寄存器地址编码增加还会增加指令的长度。CPU中的寄存器通常分为存放数据的寄存器、存放地址的寄存器、存放控制信息的寄存器、存放状态信息的寄存器和其他寄存器等类型。程序计数器是存放指令地址的寄存器，其作用是：当程序顺序执行时，每取出一条指令，程序计数器(PC)内容自动增加一个值，指向下一条要取的指令。当程序出现转移时，则将转移地址送入PC，然后由PC指向新的指令地址。指令寄存器(IR)用于存放正在执行的指令，指令从内存取出后送入指令寄存器。其操作码部分经指令译码器送微操作信号发生器，其地址码部分指明参加运算的操作数的地址形成方式。在指令执行过程中，指令寄存器中的内容保持不变。状态字寄存器(PSW)用于保存指令执行完成后产生的条件码，例如运算是否有溢出，结果为正还是为负，是否有进位等。此外，PSW还保存中断和系统工作状态等信息。通用寄存器组是CPU中的一组工作寄存器，运算时用于暂存操作数或地址。在程序中使用通用寄存器可以减少访问内存的次数，提高运算速度。在汇编语言程序中，程序员可以直接访问通用寄存器以存取数据，可以访问状态字寄存器以获取有关数据处理结果的相关信息，可以通过相对程序计数器进行寻址，但是不能访问指令寄存器。.","analysis":"B"},{"product_id":"20140305160437","ans":"本题考查计算机系统基础知识。CPU中指令译码器的功能是对现行指令进行分析，确定指令类型和指令所要完成的操作以及寻址方式，并将相应的控制命令发往相关部件。","analysis":"B"},{"product_id":"20140305160556","ans":"本题考查网络安全方面网络攻击和防御相关的基础知识。漏洞扫描技术是检测远程或本地系统安全脆弱性的一种安全技术。通过与目标主机TCP/IP端口建立连接并请求某些服务（如TELNET、FTP等)，记录目标主机的应答，搜集目标主机相关信息(如匿名用户是否可以登录等)，从而发现目标主机某些内在的安全弱点。","analysis":"B"},{"product_id":"20140305160718","ans":"本题考查网络安全方面病毒相关的基础知识。典型网络病毒主要有宏病毒、特洛伊木马、蠕虫病毒、脚本语言病毒等。宏病毒的传播方式通常如下：字处理程序Word在打开一个带宏病毒的文档或模板时，激活了病毒宏，病毒宏将自身复制至Word的通用（Normal)模板中，以后在打开或关闭文件时病毒宏就会把病毒复制到该文件中。特洛伊木马是一种秘密潜伏且能够通过远程网络进行控制的恶意程序。控制者可以控制被秘密植入木马的计算机的一切动作和资源，是恶意攻击者窃取信息的工具。蠕虫病毒的传播过程一般表现为：蠕虫程序驻于一台或多台机器中，它会扫描其他机器是否有感染同种计算机蠕虫，如果没有，就会通过其内建的传播手段进行感染，以达到使计算机瘫痪的目的。","analysis":"A"},{"product_id":"20140305160944","ans":"本题考查数字证书的基础知识。用户的数字证书由某个可信的证书发放机构（CertificationAuthority,CA)建立，并由CA或用户将其放入公共目录中。在X.509标准中，一般格式的数字证书包含以下数据域：•版本号：用于区分X.509的不同版本•序列号：由同一发行者(CA)发放的每个证书的序列号是唯一的•签名算法：签署证书所用的算法及其参数•发行者：指建立和签署证书的CA的X.509名字•有效期：包括证书有效期的起始时间和终止时间•主体名：指证书持有者的名称及有关信息•公钥：证书持有者的公钥以及其使用方法•发行者ID:任选的名字唯一地标识证书的发行者•主体ID:任选的名字唯一地标识证书的持有者•扩展域：添加的扩充信息•认证机构的签名：用CA私钥对证书的签名从上述描述可知，数字证书用CA私钥做数字签名，从用户的数字证书中可以获得用户的公钥。","analysis":"B"},{"product_id":"20140305161107","ans":"本题考查知识产权方面的基础知识。合理使用是指在特定的条件下，法律允许他人自由使用享有著作权的作品而不必征得著作权人的同意，也不必向著作权人支付报酬，但应当在指明著作权人姓名、作品名称，并且不侵犯著作权人依法享有的合法权利的情况下对著作权人的作品进行使用。许可使用是指著作权人将自己的作品以一定的方式、在一定的地域和期限内许可他人使用，并由此获得经济利益。强制许可使用是指在一定条件下，作品的使用者基于某种正当理由，需要使用他人已发表的作品，经申请由著作权行政管理部门授权即可使用该作品，无需征得著作权人同意，但应向其支付报酬。法定许可是指除著作权人声明不得使用外，使用人在未经著作权人许可的情况下，向著作权人支付报酬，指明著作权人姓名、作品名称，并且不侵犯著作权人依法享有的合法权利的情况下进行使用。","analysis":"A"},{"product_id":"20140305161533","ans":"本题考查知识产权方面的基础知识。王某开发的软件（即“海运出口业务系统V1.0”）是在国际运输有限公司担任计算机系统管理员期间根据国际运输有限公司业务要求开发的，该软件是针对本职工作中明确指定的开发目标所开发的。根据《著作权法》第16条规定，公民为完成法人或者非法人单位工作任务所创作的作品是职务作品。认定作品为职务作品还是个人作品，应考虑两个前提条件：一是作者和所在单位存在劳动关系，二是作品的创作属于作者应当履行的职责。职务作品分为一般职务作品和特殊的职务作品：一般职务作品的著作权由作者享有，单位或其他组织享有在其业务范围内优先使用的权利，期限为二年；特殊的职务作品，除署名权以外，著作权的其他权利由单位享有。所谓特殊职务作品是指《著作权法》第16条第2款规定的两种情况：一是主要利用法人或者其他组织的物质技术条件创作，并由法人或者其他组织承担责任的工程设计、产品设计图、计算机软件、地图等科学技术作品；二是法律、法规规定或合同约定著作权由单位享有的职务作品。《计算机软件保护条例》也有类似的规定，在第十三条中规定了三种情况，一是针对本职工作中明确指定的开发目标所开发的软件；二是开发的软件是从事本职工作活动所预见的结果或者自然的结果；三是主要使用了法人或者其他组织的资金、专用设备、未公开的专门信息等物质技术条件所开发并由法人或者其他组织承担责任的软件。王某在公司任职期间利用公司的资金、设备和各种资料，且是从事本职工作活动所预见的结果。所以，其进行的软件开发行为是职务行为(只要满足上述三个条件之一)，其工作成果应由公司享有。因此，该软件的著作权应属于国际运输有限公司，但根据法律规定，王某享有署名权。根据《计算机软件保护条例》第7条规定，软件登记机构发放的登记证明文件是登记事项的初步证明，只是证明登记主体享有软件著作权以及订立许可合同、转让合同的重要的书面证据，并不是软件著作权产生的依据。因为，软件著作权是自软件开发完成之日起自动产生的，未经登记的软件著作权或软件著作权专有合同和转让合同仍受法律保护。因此，软件登记机构发放的登记证明并不是软件著作权最终归属的证明，如果有相反证明，软件著作权登记证是可以撤销的。该软件是王某针对本职工作中明确指定的开发目标所开发的，该软件的著作权应属于公司。明确真正的著作权人之后，软件著作权登记证书的证明力自然就消失了（只有审判机关才能确定登记证书的有效性)。","analysis":"B"},{"product_id":"20140305161647","ans":"本题考查多媒体基础知识。MIC(话筒）输出的是音频模拟信号，声卡从MIC获取音频模拟信号后，通过模数转换器（ADC)，将声波振幅信号采样转换成一串数字信号并存储到计算机中。重放时，这些数字信号送到数模转换器（DAC),以同样的采样速度还原为模拟波形，放大后送到扬声器发声，这一技术称为脉冲编码调制技术(PCM)。","analysis":"B"},{"product_id":"20140305161910","ans":"本题考查多媒体基础知识。计算机中使用的图像压缩编码方法有多种国际标准和工业标准。目前广泛使用的编码及压缩标准有JPEG、MPEG和H.261。JEPG(JointPhotographicExpertsGroup)是一个由ISO和IEC两个组织机构（国际标准化组织）联合组成的一个专家组，负责制定静态和数字图像数据压缩编码标准，这个专家组开发的算法称为JPEG算法，并且成为国际上通用的标准。JPEG是一个适用范围很广的静态图像数据压缩标准，既可用于灰度图像又可用于彩色图像。MPEG(MovingPicturesExpertsGroup)动态图像压缩标准是一个由ISO和IEC两个组织机构联合组成的一个活动图像专家组制定的标准。1992年提出MPEG-l、MPEG-2标准，用于实现全屏幕压缩编码及解码。MPEG-1是针对传输率为1Mbps到1.5Mbps的普通电视质量的视频信号的压缩，MPEG-2是对每秒30帧的720X572分辨率的视频信号进行压缩。1999年发布了MPEG-4多媒体应用标准，目前推出了MPEG-7多媒体内容描述接口标准等。每个新标准的产生都极大地推动了数字视频的发展和更广泛的应用。H.261视频通信编码标准是由国际电话电报咨询委员会CCITT(ConsultativeCommitteeonInternationalTelephoneandTelegraph)于1998年提出的电话/会议电视的建议标准，该标准又称为PX64K标准。CCITT推出的H.263标准用于低位速率通信的电视图像编码。","analysis":"C"},{"product_id":"20140305162119","ans":"本题考查多媒体基础知识。在多媒体应用中，很重要的一个环节是制作所需要的各种媒体素材。声卡用于处理音频信息，它可以把话筒、录音机、电子乐器等输入的声音信息进行模数转换（A/D)、压缩等处理，也可以把经过计算机处理的数字化的声音信号通过还原（解压缩）、数模转换（D/A)后用音箱播放出来，或者用录音设备记录下来。音频卡的关键技术包括数字音频、音乐合成（FM合成和波形表合面)、MIDI(乐器数字接口）和音效。数字音频部分具有44.1kHz的采样率，8位以上的分辨率；具有录音和播放声音信号的功能；同时具有压缩采样信号的能力，最常用的压缩方法是自适应脉冲编码调制。数字音频的实现有不同的方法和芯片，大多数采用的是CODEC芯片，它具有硬件压缩功能。视频卡是基于PC的一种多媒体视频信号处理设备，用来支持视频信号的输入与输出。它可以采集视频源、声频源和激光视盘机、录像机、摄像机等设备的信息，经过编辑或特技等处理而产生非常精美的画面。还可以对这些画面进行捕捉、数字化、冻结、存储、压缩、输出等操作。对画面的修整、像素显示调整、缩放功能等都是视频卡支持的标准功能。视频卡的功能是连接摄像机、VCR影碟机、TV等设备，以便获取、处理和表现各种动画和数字化视频媒体。多媒体素材编辑软件用于采集、整理和编辑各种媒体数据。文字处理软件的功能主要是文字处理，包括文字录入、编辑，文档编辑、排版、管理、打印、表格处理等功能，使用文字处理软件可以创建符合用户要求的、美观的文稿。常用的字处理软件有WPS、Word、Notebook(记事本)、Writer(写字板）等。图形/图像软件的主要功能包括显示和编辑图形/图像、图像压缩、图像捕捉、图形/图像素材库制作等。例如，Photoshop用于图像的设计、编辑与处理，其功能强大，是使用最多的一种图形/图像工具软件；Xara3D是一种3D图形软件，可用于制作高质量的三维动画。","analysis":"D"},{"product_id":"20140305162208","ans":"本题考查软件开发过程和软件开发阶段的基础知识。需求分析确定软件要完成的功能及非功能性要求；概要设计将需求转化为软件的模块划分，确定模块之间的调用关系；详细设计将模块进行细化，得到详细的数据结构和算法；编码根据详细设计进行代码的编写，得到可以运行的软件，并进行单元测试。","analysis":"B"},{"product_id":"20140305162510","ans":"本题考查结构化分析与设计基础知识。软件设计必须依据软件的需求来进行，结构化分析的结果为结构化设计提供了最基本的输入信息，其关系为：根据加工规格说明和控制规格说明进行过程设计；根据数据字典和实体关系图进行数据设计；根据数据流图进行接口设计；根据数据流图进行体系结构设计。","analysis":"A"},{"product_id":"20140305162620","ans":"本题考査软件项目管理的相关知识。关键路径是从开始到结束的最长路径，也是完成项目所需要的最短时间。根据上述活动图，路径A-B-D-I-J-L是关键路径，其长度为20。","analysis":"A"},{"product_id":"20140305162807","ans":"甘特图（Gantt图）是进行项目进度管理的一个重要工具，它对项目进度进行描述，显示在什么地方活动是并行进行的，并用颜色或图标来指明完成的程度。使用该图，项目经理可以清晰的了解每个任务的开始和截止时间，哪些任务可以并行进行，哪些在关键路径上，但是不能很清晰的看出各任务之间的依赖关系。","analysis":"D"},{"product_id":"20140305163014","ans":"本题考查风险管理知识。风险是一种具有负面后果的、人们不希望发生的事件。项目经理必须进行风险管理，以了解和控制项目中的风险。风险可能会发生，因此具有一定的概率；风险产生的后果严重程度不一样，因此需要区分。在对风险进行优先级排序时，需要根据风险概率和后果来进行排序。在确定了风险之后，根据实际情况，可以通过改变系统的性能或功能需求来避免某些风险。在项目开发过程中，不可能去除所有风险，但是可以通过采取行动来降低或者减轻风险。而且风险需要定期地评估和管理。","analysis":"A"},{"product_id":"20140305163151","ans":"本题考查程序语言翻译基础知识。在编写C/C++源程序时，为所定义的变量赋初始值是良好的编程习惯，而赋初值不是强制的要求，因此编译程序不检查变量是否赋初值。如果表达式中引用的变量从定义到使用始终没有赋值，则该变量中的值表现为一个随机数，这样对表达式的求值结果就是不确定的了。","analysis":"D"},{"product_id":"20140305164610","ans":"本题考查数组元素的存储知识。二维数组arr[1..M，1..N]的元素可以按行存储，也可以按列存储。按列存储时，元素的排列次序为，先是第一列的所有元素，然后是第二列的所有元素，最后是第N列的所有元素。每一列的元素则按行号从小到大依次排列。因此，对于元素arr[i,j]，其存储位置如下计算：先计算其前面j-1列上的元素总数，为然后计算第j列上排列在arr[i,j]之前的元素数目，为i-1,因此arr[i,j]的地址为base+((j-1)*M+i-1)*K。","analysis":"C"},{"product_id":"20140305164857","ans":"由于信号量S是一个互斥信号量，表示半成品箱当前有无生产者使用，所以初值为1。信号量S1表示半成品箱容量，故其初值为n。当生产者甲不断地将其工序上加工的半成品放入半成品箱时，应该先测试半成品箱是否有空位，故生产者甲使用P(S1)。信号量S2表示半成品箱有无半成品，初值为0。当生产者乙从半成品箱取出继续加工前应先测试半成品箱有无半成品，故生产者乙使用P(S2)。","analysis":"B"},{"product_id":"20140305164943","ans":"由于信号量S是一个互斥信号量，表示半成品箱当前有无生产者使用，所以初值为1。信号量S1表示半成品箱容量，故其初值为n。当生产者甲不断地将其工序上加工的半成品放入半成品箱时，应该先测试半成品箱是否有空位，故生产者甲使用P(S1)。信号量S2表示半成品箱有无半成品，初值为0。当生产者乙从半成品箱取出继续加工前应先测试半成品箱有无半成品，故生产者乙使用P(S2)。","analysis":"A"},{"product_id":"20140305165326","ans":"文件的全文件名应包括盘符及从根目录开始的路径名，所以从题图可以看出文件fl.java的全文件名为D:\\Program\\Java-prog\\fl.java。文件的相对路径是当前工作目录下的路径名，所以从题图可以看出文件fl.java的相对路径名为Java-prog\\。","analysis":"C"},{"product_id":"20140305165429","ans":"文件的全文件名应包括盘符及从根目录开始的路径名，所以从题图可以看出文件fl.java的全文件名为D:\\Program\\Java-prog\\fl.java。文件的相对路径是当前工作目录下的路径名，所以从题图可以看出文件fl.java的相对路径名为Java-prog\\。","analysis":"A"},{"product_id":"20140305165809","ans":"当进程请求读磁盘时，操作系统先进行移臂调度，再进行旋转调度。由于系统刚完成了10号柱面的操作，当前移动臂在13号柱面上，若系统采用SCAN(扫描）调度算法，则系统响应柱面序列为15→20→30→8→6→5→2。按照旋转调度的原则进程在15号柱面上的响应序列为⑦→⑩→①，因为进程访问的是不同磁道上的不同编号的扇区，旋转调度总是让首先到达读写磁头位置下的扇区先进行传送操作。进程在20号柱面上的响应序列为②→④，或④→②。对于②和④可以任选一个进行读写，因为进程访问的是不同磁道上具有相同编号的扇区，旋转调度可以任选一个读写磁头位置下的扇区进行传送操作。从上分析可以得出按照SCAN(扫描）调度算法的响应序列为⑦⑩①②④③⑨⑧⑤⑥。","analysis":"A"},{"product_id":"20140305165954","ans":"若系统采用CSCAN(单向扫描）调度算法，在返程时是不响应用户请求的，因此系统的柱面响应序列为15→20→30→2→5→6→8。可见，按照CSCAN(单向扫描）调度算法的响应序列为⑦⑩①②④③⑥⑤⑧⑨。","analysis":"C"},{"product_id":"20140305170059","ans":"本题考查程序语言基础知识。在机器层面上，所有的数据都是二进制形式的。应用领域中的数据可以有不同的形式、意义和运算，程序中的数据已经进行了抽象，不同类型的数据需要不同大小的存储空间，因此为程序中的数据规定类型后，可以更合理地安排存储空间。不同类型的数据其取值方式和运算也不同，引入类型信息后，在对源程序进行编译时就可以对参与表达式求值的数据对象可以进行合法性检查。","analysis":"B"},{"product_id":"20140305170209","ans":"本题考查软件生存周期模型。喷泉模型是典型的面向对象生命周期模型，是一种以用户需求为动力，以对象作为驱动的模型。该模型克服了瀑布模型不支持软件重用和多项开发活动集成的局限性。“喷泉”一词本身体现了迭代和无间隙特性。迭代意味着模型中的开发活动常常需要重复多次，在迭代过程中不断地完善软件系统；无间隙是指在开发活动之间不存在明显的边界。","analysis":"D"},{"product_id":"20140305170339","ans":"本题考查软件生存周期模型。瀑布模型是将软件生存周期各个活动规定为依线性顺序连接的若干阶段的模型，它为软件的开发和维护提供了一种有效的管理模式，适合于软件需求很明确的软件项目的模型。本题中开发的大学记账系统是基于原有系统开发的，要求采用新技术，而需求是明确的。演化模型在获取一组基本的需求后，通过快速分析构造出该软件的一个初始可运行版本，然后逐步演化成为最终软件产品。原型模型快速构造软件的原型，在此基础上开发最终软件产品。这两类模型主要是针对需求不确定或者不清楚的情况下，进行项目开发建议采用的。而螺旋模型增加了风险分析。","analysis":"A"},{"product_id":"20140305170417","ans":"本题考查需求分析的相关知识。要求将每个用户的数据和其他用户的数据隔离开，是安全性要求，而安全性质量子特性在ISO/IEC软件质量模型中属于功能性质量特性。","analysis":"A"},{"product_id":"20140305170609","ans":"本题考査软件设计的相关知识。为了使用户满意，软件应该满足两个必要条件：设计的规格说明书符合用户的要求，这称为设计质量；程序按照设计规格说明所规定的情况正确执行，这称为程序质量。设计质量评审的对象是在需求分析阶段产生的软件需求规格说明、数据需求规格说明、在软件概要设计阶段产生的软件概要设计说明书等。主要从以下方面进行评审：软件的规格说明是否合乎用户的要求；可靠性；保密措施实现情况等；操作特性实施情况等；性能实现情况；可修改性、可扩充性、可互换性和可移植性；可测试性；可复用性。","analysis":"D"},{"product_id":"20140305170709","ans":"本题考查软件维护的相关知识。软件维护的类型一般有四类：正确性维护是指改正在系统开发阶段已发生而系统测试阶段尚未发现的错误；适应性维护是指使应用软件适应信息技术变化和管理需求变化而进行的修改；完善性维护是为扩充功能和改善性能而进行的修改；预防性维护是为了改进应用软件的可靠性和可维护性，为了适应未来变化的软硬件环境的变化，主动增加预防性的新的功能，以适应将来各类变化。修改现有应用软件中的某个排序算法，提供其运行效率属于完善性维护。","analysis":"C"},{"product_id":"20140305171028","ans":"本题考查软件测试的相关知识。折半查找是在一组有序的数（假设为递增顺序）中査找一个数的算法，其思想是：将待查找的数与数组中间位置mid的数进行比较，若相等，则查找成功；若大于中间位置的数，则在后半部分进行查找；若小于中间位置的数，则在前半部分进行查找。直到查找成功，返回所查找的数的位置，或者失败，返回-1。设计一个查找成功的测试用例，可以覆盖除了return-1之外的所有语句和路径；设计一个査找失败的测试用例，可以覆盖除了returnmid之外的所有语句和路径。因此，最少需要2个测试用例才可以覆盖所有的路径。","analysis":"B"},{"product_id":"20140305171226","ans":"本题考查软件测试的相关知识。等价类划分是一类黑盒测试技术，将程序的输入域划分为若干等价类，然后从每个等价类中选取一个代表性数据作为测试用例。本题的等价类划分可以划分为三个等价类，一个有效等价类I，即班委来自集合{班长，副班长，学习委员，生活委员}，年龄在15〜25;—个无效等价类II，即班委不来自集合{班长，副班长，学习委员，生活委员}，而年龄在15〜25;—个无效等价类III，即班委来自集合{班长，副班长，学习委员，生活委员}，而年龄不在15〜25。题中选项A来自等价类II。","analysis":"D"},{"product_id":"20140305171319","ans":"本题考查软件维护的相关知识。软件维护的类型一般有四类：正确性维护、适应性维护、完善性维护和预防性维护。防错性的程序设计可以减少在系统运行时发生错误，因此可以有效地控制正确性维护成本。","analysis":"A"},{"product_id":"20140305171421","ans":"本题考查面向对象的基本知识。采用面向对象开发方法时，对象是系统运行时基本实体。它既包括数据（属性)，也包括作用于数据的操作（行为）。一个对象通常可由对象名、属性和操作三部分组成。","analysis":"D"},{"product_id":"20140305171556","ans":"本题考查面向对象的基本知识。面向对象技术中，将一组大体上相似的对象定义为一个类。把一组对象的共同特征加以抽象并存储在一个类中，是面向对象技术中的一个重要特点。一个所包含的方法和数据描述一组对象的共同行为和属性。在类定义时，属性声明private的目的是实现数据隐藏，以免意外更改。","analysis":"D"},{"product_id":"20140305171642","ans":"本题考查面向对象的基本知识。面向对象技术中，将一组大体上相似的对象定义为一个类。把一组对象的共同特征加以抽象并存储在一个类中，是面向对象技术中的一个重要特点。一个所包含的方法和数据描述一组对象的共同行为和属性。在类定义时，属性声明private的目的是实现数据隐藏，以免意外更改。","analysis":"A"},{"product_id":"20140305171858","ans":"本题考查设计模式的基本知识。命令（Command)模式通过将请求封装为一个对象，可将不同的请求对客户进行参数化。责任链（ChainofResponsibility)模式将多个对象的请求连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止，避免请求的发送者和接收者之间的耦合关系。观察者（Observer)模式定义对象之间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。在上述观察者模式的类图中，Subject(目标）知道其观察者，可以有任意多个观察者观察同一个目标，提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。ConcreteSubject(具体目标）将有关状态存入各ConcreteObserver对象，当它的状态发生改变时，向它的各个观察者发出通知。ConcreteObserver(具体观察者）维护一个指向ConcreteSubject对象的引用，存储有关状态，实现Observer的更新接口以使自身状态与目标的状态保持一致。","analysis":"C"},{"product_id":"20140305171947","ans":"本题考查设计模式的基本知识。命令（Command)模式通过将请求封装为一个对象，可将不同的请求对客户进行参数化。责任链（ChainofResponsibility)模式将多个对象的请求连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止，避免请求的发送者和接收者之间的耦合关系。观察者（Observer)模式定义对象之间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。在上述观察者模式的类图中，Subject(目标）知道其观察者，可以有任意多个观察者观察同一个目标，提供注册和删除观察者对象的接口。Observer(观察者）为那些在目标发生改变时需获得通知的对象定义一个更新接口。ConcreteSubject(具体目标）将有关状态存入各ConcreteObserver对象，当它的状态发生改变时，向它的各个观察者发出通知。ConcreteObserver(具体观察者）维护一个指向ConcreteSubject对象的引用，存储有关状态，实现Observer的更新接口以使自身状态与目标的状态保持一致。","analysis":"B"},{"product_id":"20140305172116","ans":"本题考查面向对象的基础知识。在面向对象软件开发中，对象是软件系统中基本的运行时实体，对象封装了属性和行为。封装是一种信息隐藏技术，其目的是使对象的使用者和生产者分离，使对象的定义和实现分开。","analysis":"B"},{"product_id":"20140305172307","ans":"本题考查设计模式的基本知识。适配器(Adapter)模式是将类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。Bridge(桥接）模式将对象的抽象和其实现分离，从而可以独立地改变它们。组合(Composite)模式描述了如何构造一个类层次式结构。装饰器（Decorator)模式的意图是动态地给一个对象添加一些额外职责。在需要给某个对象而不是整个类添加一些功能时使用。这种模式对增加功能比生成子类更加灵活。","analysis":"D"},{"product_id":"20140305172614","ans":"本题考查设计模式的基本知识。适配器（Adapter)模式是将类的接口转换成客户希望的另外一个接口。代理（Proxy)模式通过提供与对象相同的接口来控制对这个对象的访问，以使得在确实需要这个对象时才对它进行创建和初始化。组合（Composite)模式描述了如何构造一个类层次式结构。装饰器（Decorator)模式动态地给一个对象添加职责。","analysis":"B"},{"product_id":"20140305172817","ans":"本题考查UML面向对象开发的基本知识。UML2.0提供多种视图，只有部署图描述系统的物理视图。部署图通常在实施阶段使用，以说明哪些组件或子系统部署于哪些结点。","analysis":"D"},{"product_id":"20140305173310","ans":"本题考査面向对象建模的基本知识。在采用面向对象方法进行业务建模时，业务用例和参与者一起描述组织或企业所支持的业务过程。业务流程被定义为多个不同的业务用例，其中每个业务用例都代表业务中某个特定的工作流程。业务用例确定了执行业务时将要发生的事情，描述了一系列动作的执行，以及产生对特定业务主角具有价值的结果。业务对象模型从业务角色内部的观点定义了业务用例。该模型确定了业务人员及其处理和使用的对象之间应该具有的静态和动态关系，注重业务中承担的角色及其当前职责，既描述业务结构，又描述这些结构元素如何完成业务用例。","analysis":"D"},{"product_id":"20140305222505","ans":"本题考査面向对象建模的基本知识。在采用面向对象方法进行业务建模时，业务用例和参与者一起描述组织或企业所支持的业务过程。业务流程被定义为多个不同的业务用例，其中每个业务用例都代表业务中某个特定的工作流程。业务用例确定了执行业务时将要发生的事情，描述了一系列动作的执行，以及产生对特定业务主角具有价值的结果。业务对象模型从业务角色内部的观点定义了业务用例。该模型确定了业务人员及其处理和使用的对象之间应该具有的静态和动态关系，注重业务中承担的角色及其当前职责，既描述业务结构，又描述这些结构元素如何完成业务用例。","analysis":"C"},{"product_id":"20140305222731","ans":"本题考查程序语言翻译基础知识。分析题中所给自动机识别字符串的特点可知，该自动机识别的字符串必须以01结尾，而之前的0和1可以以任意方式组合，因此，正规式为(0丨1)*01。","analysis":"A"},{"product_id":"20140305223142","ans":"本题考查函数调用时参数传递基础知识。发生函数调用时，调用函数与被调用函数之间交换信息的主要方法有传值调用和引用调用两种。若实现函数调用时实参向形式参数传递相应类型的值，则称为是传值调用。这种方式下形式参数不能向实际参数传递信息。在C语言中，要实现被调用函数对实际参数的修改，必须用指针作形参。即调用时需要先对实参进行取地址运算，然后将实参的地址传递给指针形参。本质上仍属于传值调用。引用是C++中增加的数据类型，当形式参数为引用类型时，函数中对形参的访问和修改本质上就是针对相应实际参数变量所作的访问和改变。本题中，传值调用方式下，表达式“X=f(a)”中调用f时，是将a的值（即5)传给r这样执行函数f时，r的初始值为5,经过“a=r+l”运算后，全局变量a的值从5变为6,然后“r=r*2”将r的值改变为10,“returnr”将10返回并赋值给x,因此执行“printa+x”后输出了16。传值调用方式下，表达式“x=f(a)”中调用f时，r则是a的引用（即r是a的别名），因此，经过“a=r+l”运算后，a的值（也就是r的值）变为6,然后“r=r*2”将r的值（也就是a的值）改变为12,“returnr”使得将12返回并赋值给X，因此执行“printa+x”后输出了24。","analysis":"B"},{"product_id":"20140305223203","ans":"本题考查函数调用时参数传递基础知识。发生函数调用时，调用函数与被调用函数之间交换信息的主要方法有传值调用和引用调用两种。若实现函数调用时实参向形式参数传递相应类型的值，则称为是传值调用。这种方式下形式参数不能向实际参数传递信息。在C语言中，要实现被调用函数对实际参数的修改，必须用指针作形参。即调用时需要先对实参进行取地址运算，然后将实参的地址传递给指针形参。本质上仍属于传值调用。引用是C++中增加的数据类型，当形式参数为引用类型时，函数中对形参的访问和修改本质上就是针对相应实际参数变量所作的访问和改变。本题中，传值调用方式下，表达式“X=f(a)”中调用f时，是将a的值（即5)传给r这样执行函数f时，r的初始值为5,经过“a=r+l”运算后，全局变量a的值从5变为6,然后“r=r*2”将r的值改变为10,“returnr”将10返回并赋值给x,因此执行“printa+x”后输出了16。传值调用方式下，表达式“x=f(a)”中调用f时，r则是a的引用（即r是a的别名），因此，经过“a=r+l”运算后，a的值（也就是r的值）变为6,然后“r=r*2”将r的值（也就是a的值）改变为12,“returnr”使得将12返回并赋值给X，因此执行“printa+x”后输出了24。","analysis":"D"},{"product_id":"20140305223604","ans":"本题考查关系代数运算与SQL查询方面的基础知识。授权语句的格式如下：GRANT〈权限>[,<权限>]...[ON<对象类型><对象名>]TO<用户>[,<用户][WITHGRANTOPTION];若在授权语句中指定了“WITHGRANTOPTION”子句，那么，获得了权限的用户还可以将该权限赋给其他用户。","analysis":"D"},{"product_id":"20140305223711","ans":"本题考查关系代数运算与SQL查询方面的基础知识。授权语句的格式如下：GRANT〈权限>[,<权限>]...[ON<对象类型><对象名>]TO<用户>[,<用户][WITHGRANTOPTION];若在授权语句中指定了“WITHGRANTOPTION”子句，那么，获得了权限的用户还可以将该权限赋给其他用户。","analysis":"D"},{"product_id":"20140305224022","ans":"","analysis":"D"},{"product_id":"20140305224137","ans":"","analysis":"C"},{"product_id":"20140305224228","ans":"","analysis":"B"},{"product_id":"20140305224525","ans":"本题考查E-R图向关系模型转换方面的基础知识。E-R图转换为关系模型时，对两个实体间的多对多联系应该转换为一个独立的关系模式，其方法是将两个实体的码加上联系的属性构成一个独立的关系模式。","analysis":"D"},{"product_id":"20140305224701","ans":"根据next函数的定义，“abaabaca”的next函数值为“01122341”。","analysis":"B"},{"product_id":"20140305224955","ans":"本题考查线性表的链表存储结构知识。随机访问是指可由元素的序号和第一个元素存储位置的首地址计算得出该序号所对应元素的存储位置，这要求这一组元素必须连续地存储，链表存储结构中元素的存储位置是可以分散的，仅通过指针将逻辑上相邻而存储位置不要求相邻的元素链接起来，而且只能顺着指针所指示的方向进行遍历。单向循环链表中指针的指示方向是单方向地，其示意图如下所示，对于表中的任意一个元素，访问其直接后继的运算时间复杂度为O(1)，访问其直接前驱的运算时间复杂度为O(n)。链表中是否含有头结点要看具体的应用情况和运算要求，并没有必须设置的要求。","analysis":"A"},{"product_id":"20140305225156","ans":"本题考查图结构的基础知识。对于无向图中的两个顶点u和v，若存在边（u，v)，则该边为计算U的度和V的度各贡献一个值1，因此，所有顶点的度数之和为e的两倍。","analysis":"D"},{"product_id":"20140305230134","ans":"","analysis":"B"},{"product_id":"20140305230607","ans":"本题考查二叉树应用知识。构造最优二叉树的哈夫曼算法如下：①根据给定的n个权值{w1,w2,...,wn}，构成n棵二叉树的集合F={T1,T2,...,Tn}，其中每棵二叉树Ti中只有一个带权为wi的根结点，其左右子树均空。②在F中选取两棵权值最小的二叉树作为左、右子树构造一棵新的二叉树，置新构造二叉树的根结点的权值为其左、右子树根结点的权值之和。③从F中删除这两棵树，同时将新得到的二叉树加入到F中。重复②、③，直到F中只含一棵树时为止。这棵树便是最优二叉树（哈夫曼树）。根据题中给出的权值集合，构造哈夫曼树的过程如下图所示。","analysis":"C"},{"product_id":"20140305231043","ans":"本题考査算法的设计策略。单源点最短路径问题是指给定图G和源点v0,求从v0到图G中其余各顶点的最短路径。迪杰斯特拉（Dijkstra)算法是一个求解单源点最短路径的经典算法，其思想是：把图中所有的顶点分成两个集合S和T,S集合开始时只包含顶点v0,T集合开始时包含图中除了顶点v0之外的所有顶点。凡是以v0为源点，己经确定了最短路径的终点并入S集合中，顶点集合T则是尚未确定最短路径的顶点集合。按各顶点与v0间最短路径长度递增的次序，逐个把T集合中的顶点加入到S集合中，使得从v0到S集合中各顶点的路径长度始终不大于从v0到T集合中各顶点的路径长度。该算法是以一种贪心的方式将T集合中的顶点加入到S集合中的，而且该贪心方法可以求得问题的最优解。","analysis":"C"},{"product_id":"20140305231226","ans":"本题考査算法的设计策略。从题干可以看出，划分操作与快速排序中的划分操作是一样的，确定某个元素如r的最终位置，划分后，在r之前的元素都小于r,在r之后的元素都大于r(假设无重复元素)。因此可以据此确定r是数组中第几小的数。题干所述的算法把找第i小的数转换为确定任意一个元素是第几小的数，然后根据这个结果再在依据该元素划分后得到的结果在前一部分还是后一部分来继续确定某个元素为第几小的数，重复这种处理，直到找到第i小的数。这是分治策略的一个典型应用。","analysis":"A"},{"product_id":"20140305231545","ans":"","analysis":"A"},{"product_id":"20140305231627","ans":"","analysis":"A"},{"product_id":"20140305231827","ans":"A类网络的地址掩码是8比特，剩余的24比特可表示主机地址，所以主机地址数为224个。如果为A类网络指定的子网掩码为255.255.192.0,则其二进制表示为11111111111111111100000000000000,实际上把A类网络划分为210=1024个子网。","analysis":"D"},{"product_id":"20140305231908","ans":"A类网络的地址掩码是8比特，剩余的24比特可表示主机地址，所以主机地址数为224个。如果为A类网络指定的子网掩码为255.255.192.0,则其二进制表示为11111111111111111100000000000000,实际上把A类网络划分为210=1024个子网。","analysis":"C"},{"product_id":"20140305232029","ans":"TCP是互联网中的传输层协议，使用3次握手协议建立连接。这种建立连接的方法可以防止产生错误的连接，这种错误往往是由网络中存储的过期的分组引起的。TCP使用的流量控制协议是可变大小的滑动窗口协议。","analysis":"A"},{"product_id":"20140305232109","ans":"TCP是互联网中的传输层协议，使用3次握手协议建立连接。这种建立连接的方法可以防止产生错误的连接，这种错误往往是由网络中存储的过期的分组引起的。TCP使用的流量控制协议是可变大小的滑动窗口协议。","analysis":"C"},{"product_id":"20140305232226","ans":"本题考查Web站点文档及相关知识。刷新和重置缓存的命令是ipconfig/flushdns。","analysis":"B"},{"product_id":"20140305232542","ans":"题目中描述敏捷开发方法极限编程（XP)。XP强调简单、沟通、反馈和勇气4个核心价值（values)，适合于需要快速和灵活交付的适当规模（moderately-sized)的任何项目。XP强调客户全职（fiill-time)参与。客户和项目的其他成员工作在一起(together),以简单方式进行有效地沟通（communicate)，以掌握项目按照需求向项目成功的方向进行。极限编程（XP)是一种软件开发方法，其核心价值观是简单、沟通、反馈和勇气。成功的软件开发是团队努力的结果—不仅仅指开发团队，而是包括了客户、管理人员和开发人员组成的更大团队。XP是一种将上述人员组织起来并帮助他们取得成功的简单的过程。XP主要针对一个十几人或更少程序员组成的、在同一个场所工作的面向对象的项目团队。XP原则适用于需要快速且灵活地交付髙质量软件的中等规模项目组。一个XP项目组需要一个全程参与的客户给予指导。客户、程序员和项目经理协同工作来构建需要的软件系统。客户，也就是需要软件的人，将学到简单而有效的沟通方法，来确保获得他们所需要的，从而引导项目走向成功。","analysis":"D"},{"product_id":"20140305232652","ans":"题目中描述敏捷开发方法极限编程（XP)。XP强调简单、沟通、反馈和勇气4个核心价值（values)，适合于需要快速和灵活交付的适当规模（moderately-sized)的任何项目。XP强调客户全职（fiill-time)参与。客户和项目的其他成员工作在一起(together),以简单方式进行有效地沟通（communicate)，以掌握项目按照需求向项目成功的方向进行。极限编程（XP)是一种软件开发方法，其核心价值观是简单、沟通、反馈和勇气。成功的软件开发是团队努力的结果—不仅仅指开发团队，而是包括了客户、管理人员和开发人员组成的更大团队。XP是一种将上述人员组织起来并帮助他们取得成功的简单的过程。XP主要针对一个十几人或更少程序员组成的、在同一个场所工作的面向对象的项目团队。XP原则适用于需要快速且灵活地交付髙质量软件的中等规模项目组。一个XP项目组需要一个全程参与的客户给予指导。客户、程序员和项目经理协同工作来构建需要的软件系统。客户，也就是需要软件的人，将学到简单而有效的沟通方法，来确保获得他们所需要的，从而引导项目走向成功。","analysis":"B"},{"product_id":"20140305232807","ans":"题目中描述敏捷开发方法极限编程（XP)。XP强调简单、沟通、反馈和勇气4个核心价值（values)，适合于需要快速和灵活交付的适当规模（moderately-sized)的任何项目。XP强调客户全职（fiill-time)参与。客户和项目的其他成员工作在一起(together),以简单方式进行有效地沟通（communicate)，以掌握项目按照需求向项目成功的方向进行。极限编程（XP)是一种软件开发方法，其核心价值观是简单、沟通、反馈和勇气。成功的软件开发是团队努力的结果—不仅仅指开发团队，而是包括了客户、管理人员和开发人员组成的更大团队。XP是一种将上述人员组织起来并帮助他们取得成功的简单的过程。XP主要针对一个十几人或更少程序员组成的、在同一个场所工作的面向对象的项目团队。XP原则适用于需要快速且灵活地交付髙质量软件的中等规模项目组。一个XP项目组需要一个全程参与的客户给予指导。客户、程序员和项目经理协同工作来构建需要的软件系统。客户，也就是需要软件的人，将学到简单而有效的沟通方法，来确保获得他们所需要的，从而引导项目走向成功。","analysis":"D"},{"product_id":"20140305232932","ans":"题目中描述敏捷开发方法极限编程（XP)。XP强调简单、沟通、反馈和勇气4个核心价值（values)，适合于需要快速和灵活交付的适当规模（moderately-sized)的任何项目。XP强调客户全职（fiill-time)参与。客户和项目的其他成员工作在一起(together),以简单方式进行有效地沟通（communicate)，以掌握项目按照需求向项目成功的方向进行。极限编程（XP)是一种软件开发方法，其核心价值观是简单、沟通、反馈和勇气。成功的软件开发是团队努力的结果—不仅仅指开发团队，而是包括了客户、管理人员和开发人员组成的更大团队。XP是一种将上述人员组织起来并帮助他们取得成功的简单的过程。XP主要针对一个十几人或更少程序员组成的、在同一个场所工作的面向对象的项目团队。XP原则适用于需要快速且灵活地交付髙质量软件的中等规模项目组。一个XP项目组需要一个全程参与的客户给予指导。客户、程序员和项目经理协同工作来构建需要的软件系统。客户，也就是需要软件的人，将学到简单而有效的沟通方法，来确保获得他们所需要的，从而引导项目走向成功。","analysis":"A"},{"product_id":"20140305233023","ans":"题目中描述敏捷开发方法极限编程（XP)。XP强调简单、沟通、反馈和勇气4个核心价值（values)，适合于需要快速和灵活交付的适当规模（moderately-sized)的任何项目。XP强调客户全职（fiill-time)参与。客户和项目的其他成员工作在一起(together),以简单方式进行有效地沟通（communicate)，以掌握项目按照需求向项目成功的方向进行。极限编程（XP)是一种软件开发方法，其核心价值观是简单、沟通、反馈和勇气。成功的软件开发是团队努力的结果—不仅仅指开发团队，而是包括了客户、管理人员和开发人员组成的更大团队。XP是一种将上述人员组织起来并帮助他们取得成功的简单的过程。XP主要针对一个十几人或更少程序员组成的、在同一个场所工作的面向对象的项目团队。XP原则适用于需要快速且灵活地交付髙质量软件的中等规模项目组。一个XP项目组需要一个全程参与的客户给予指导。客户、程序员和项目经理协同工作来构建需要的软件系统。客户，也就是需要软件的人，将学到简单而有效的沟通方法，来确保获得他们所需要的，从而引导项目走向成功。","analysis":"C"}]},{"paperId":"78","field":"20111","question_list":[{"product_id":"20140304095434","ans":"本题考查寄存器的基本知识。CPU中通常设置一些寄存器，用于暂时存储程序运行过程中的相关信息。其中，通用寄存器常用于暂存运算器需要的数据或运算结果，地址寄存器和数据寄存器用于访问内存时的地址和数据暂存，指令寄存器用于暂存正在执行的指令，程序计数器中存放待执行的指令的地址。","analysis":"C"},{"product_id":"20140304100215","ans":"本题考查指令系统的基本概念。寻址方式是指寻找操作数或操作数地址的方式。指令系统中采用不同寻址方式的目的是为了在效率和方便性上找一个平衡。立即寻址和寄存器寻址在效率上是最快的，但是寄存器数目少，不可能将操作数都存入其中等待使用，立即寻址的使用场合也非常有限，这样就需要将数据保存在内存中，然后使用直接寻址、寄存器间接寻址、寄存器相对寻址、基址加变址寻址、相对基址及变址寻址等寻址方式将内存中的数据移入寄存器中。","analysis":"D"},{"product_id":"20140304100455","ans":"本题考查计算机系统的基础知识。总线是连接计算机有关部件的一组信号线，是计算机中用来传送信息代码的公共通道。釆用总线结构主要有以下优点：简化系统结构，便于系统设计制造；大大减少了连线数目，便于布线，减小体积，提髙系统的可靠性；便于接口设计，所有与总线连接的设备均釆用类似的接口；便于系统的扩充、更新与灵活配置，易于实现系统的模块化；便于设备的软件设计，所有接口的软件就是对不同的口地址进行操作；便于故障诊断和维修，同时也降低了成本。","analysis":"C"},{"product_id":"20140304100548","ans":"本题考査数据表示的基础知识。使用补码表示数据时，可以将符号位和其他位统一处理，减法也可按加法来处理，从而简化运算部件的设计。","analysis":"B"},{"product_id":"20140304101417","ans":"本题考查数据表示的基础知识。浮点数在计算机中用以近似表示任意某个实数，一个浮点数a可如下表示：a=MXbE其中，尾数部分M的位数越多，数的精度越高，指数部分E的位数越多，能表示的数值越大。因此在总长度固定的情况下，增加E的位数、减少M的位数可以扩大可表示的数的范围同时降低精度。","analysis":"A"},{"product_id":"20140304102622","ans":"本题考查系统可靠性方面的基础知识。由子系统构成串联系统时，其中任何一个子系统失效就足以使系统失效，其可靠度等于各子系统可靠度的乘积；构成并联系统时，只要有一个子系统正常工作，系统就能正常工作。设每个子系统的可靠性分别以R1，R2，…，RN表示，则整个系统用串联方式构造时的可靠度为R=R1×R2…×…RN，整个系统用串联方式构造时的可靠度为R=1-(1-R1)(1-R2)…(1-RN)因此，本系统的可靠度为R(1-(1-R)2)2","analysis":"D"},{"product_id":"20140304102819","ans":"本题考查数字证书和CA证书授权（CertificateAuthority)中心的相关知识点。数字证书是由权威机构CA证书授权（CertificateAuthority)中心发行的，能提供在Internet上进行身份验证的一种权威性电子文档，人们可以在互联网交往中用它来证明自己的身份和识别对方的身份。数字证书包含版本、序列号、签名算法标识符、签发人姓名、有效期、主体名、主体公钥信息等并附有CA的签名，用户A获取用户B的数字证书后通过验证CA的签名来确认数字证书的有效性。验证CA的签名时使用的是CA的公钥。","analysis":"C"},{"product_id":"20140304102932","ans":"本题考查计算机病毒的基础知识。病毒文件名称一般分为三部分，第一部分表示病毒的类型，如Worm表示蠕虫病毒，Trojan表示特洛伊木马，Backdoor表示后门病毒，Macro表示宏病毒等。宏病毒感染的对象是使用某些程序创建的文本文档、数据库、电子表格等文件。","analysis":"C"},{"product_id":"20140304103132","ans":"本题考査IE浏览器不同区域安全等级的基础知识。在IE浏览器中，安全等级从可信站点、本地Intranet、Internet到受限站点默认情况下依次为低、中低、中、高，逐步提升，如下图所示。","analysis":"D"},{"product_id":"20140304103320","ans":"软件著作权中翻译权是指以不同于原软件作品的一种程序语言转换该作品原使用的程序语言，而重现软件作品内容的创作的产品权利。简单地说，也就是指将原软件从一种程序语言转换成另一种程序语言的权利。","analysis":"B"},{"product_id":"20140304103441","ans":"由于是软件公司研发的财务软件产品，因此，软件公司享有该软件产品的软件著作权。又由于商业秘密的构成条件是：商业秘密必须具有未公开性，即不为公众所知悉；商业秘密必须具有实用性，即能为权利人带来经济效益；商业秘密必须具有保密性，即采取了保密措施。综上所述，公司仅享有该软件产品的软件著作权和商业秘密权。","analysis":"C"},{"product_id":"20140304103600","ans":"在计算机信息处理中，“哈夫曼编码”是一种一致性编码法（又称“熵编码法”)，用于数据的无损耗压缩。这一术语是指使用一张特殊的编码表将源字符（例如某文件中的一个符号）进行编码。这张编码表的特殊之处在于，它是根据每一个源字符出现的估算概率而建立起来的。出现概率髙的字符使用较短的编码，出现概率低的则使用较长的编码，这便使编码之后的字符串的平均期望长度降低，从而到无损压缩数据的目的。","analysis":"A"},{"product_id":"20140304103729","ans":"CIF是常用的标准化图像格式（CommonIntermediateFormat)。在H.323协议簇中，规定了视频采集设备的标准采集分辨率，CIF=352X288像素。","analysis":"B"},{"product_id":"20140304103850","ans":"由ISO制定的MPEG系列标准中,MPEG-7称为“多媒体内容描述接口”(multimediacontentdescriptioninterface)。该标准是建立对多媒体内容的描述标准，满足包括静止图像、图形、3D模型、音频、话音、视频以及以上元素组合在一起的合成多媒体信息的应用领域的要求，并兼顾标准的通用性和扩展性的要求。","analysis":"D"},{"product_id":"20140304104023","ans":"本题考查项目管理及工具技术。软件开发小组的沟通路径受到小组组织形式和规模的影响。若任意小组成员之间均可能有沟通路径，则可用完全连通图来对开发小组的沟通路径建模，最多的沟通路径为完全连通图的边数，即n个成员的开发小组的沟通路径是n(n-1)/2,因此8个成员的开发小组的沟通路径有28条。","analysis":"A"},{"product_id":"20140304104214","ans":"本题考查软件的分析与设计方法。模块独立性是创建良好设计的一个重要原则，一般采用模块间的耦合和模块的内聚两个准则来进行度量。耦合是模块之间的相对独立性的度量，模块之间的连接越紧密，联系越多，耦合性就越高，而其模块独立性就越弱。一般来说，模块之间的耦合有7种类型，根据耦合性从低到高为非直接耦合、数据耦合、标记耦合、控制耦合、外部耦合、公共耦合和内容耦合。如果一个模块访问另一个模块时，彼此之间是通过数据参数（不是控制参数、公共数据结构或外部变量）来交换输入、输出信息的，则称这种耦合为数据耦合；如果一组模块通过数据结构本身传递，则称这种耦合为标记耦合；若一组模块都访问同一个公共数据环境，则它们之间的耦合就称为公共耦合；若一个模块直接访问另一个模块的内部数据、一个模块不通过正常入口转到另一个模块内部、两个模块有一部分程序代码重叠或者一个模块有多个入口，上述几个情形之一发生则说明两个模块之间就发生了内容耦合。","analysis":"D"},{"product_id":"20140304104325","ans":"本题考查风险分析和风险控制技术。风险是一种具有负面后果的、人们不希望发生的事件。通常认为风险具有以下特点：风险是可能发生的事件，其发生的可能性用风险概率来描述；风险是会给项目带来损失的事件；可能对风险进行干预，以期减少损失。针对每一种风险，应弄清可能减少造成损失或避免损失的程度。对风险加以控制，采取一些有效的措施来降低风险或是消除风险。","analysis":"B"},{"product_id":"20140304104539","ans":"本题考查项目管理及工具技术。项目估算是项目计划和管理的一个至关重要的方面。成本超出某个限度可能导致客户取消项目，而过低的成本估算可能会迫使开发小组投入大量的时间却没有相应的经济回报。目前常用的项目估算方法有专家判断方法，该方法受到专家经验和主观性等方面的影响；算法方法，根据某个计算模型来估算项目开发成本，如启发式方法COCOMO模型，但这些模型中的参数难以确定；机器学习方法，如根据过去的项目开发数据，建立分类模型，预测新项目的开发成本，但这类方法难以定义训练数据的特征以及定义数据对象之间的相似性。即使结合多种方法，上述问题仍然存在，因此并不能得到精确地估算结果。","analysis":"D"},{"product_id":"20140304104846","ans":"本题考查项目管理及工具技术。根据关键路径法，计算出关键路径为0—2—5—7—8—9,关键路径长度为65。因此里程碑2在关键路径上，而里程碑1、3和4不在关键路径上。","analysis":"B"},{"product_id":"20140304105541","ans":"本题考查程序语言的基础知识。逆波兰式（reversepolishnotation，也叫后缀表达式）是将运算符写在操作数之后的表达式表示方法。对逆波兰式进行求值的方法是：从左至右扫描表达式，遇到操作数则压栈，遇到运算符号则从栈中弹出操作数进行运算，然后将运算结果压入栈中，重复该过程直到表达式结束，最后的结果为栈顶元素。由于控制上比较简单，所以逆波兰式更便于计算。表达式“a-b+c*d”的后缀式为“ab-cd*+”。表达式“(a-b)*c+d”的后缀式为“ab-c*d+”。表达式“(a-b)*(c+d)”的后缀式为“ab-cd+*”。表达式“a-b*c+d”的后缀式为“abc*-d+”。","analysis":"B"},{"product_id":"20140304105626","ans":"本题考查程序语言的基础知识。逆波兰式（reversepolishnotation，也叫后缀表达式）是将运算符写在操作数之后的表达式表示方法。对逆波兰式进行求值的方法是：从左至右扫描表达式，遇到操作数则压栈，遇到运算符号则从栈中弹出操作数进行运算，然后将运算结果压入栈中，重复该过程直到表达式结束，最后的结果为栈顶元素。由于控制上比较简单，所以逆波兰式更便于计算。表达式“a-b+c*d”的后缀式为“ab-cd*+”。表达式“(a-b)*c+d”的后缀式为“ab-c*d+”。表达式“(a-b)*(c+d)”的后缀式为“ab-cd+*”。表达式“a-b*c+d”的后缀式为“abc*-d+”。","analysis":"C"},{"product_id":"20140304105901","ans":"本题考查程序语言的基础知识。程序中的数据具有类型属性时，就可以规定数据对象的取值范围及能够进行的运算，在运算前便于进行类型检查，也更有利于为数据合理分配存储单元。","analysis":"B"},{"product_id":"20140304110036","ans":"本题考査操作系统文件管理方面的基础知识。根据题意，系统中字长为32位，可记录32个物理块的使用情况，这样0〜31号物理块的使用情况在位示图中的第1个字中描述，32〜63号物理块的使用情况在位示图中的第2个字中描述，……，4064〜4095号物理块的使用情况在位示图中的第128个字中描述，4096〜4127号物理块的使用情况在位示图中的第129个字中描述。根据题意，若磁盘的容量为200GB，物理块的大小为1MB，那么该磁盘就有204800个物理块（即200X1024)，位示图的大小为204800/32=6400个字。","analysis":"A"},{"product_id":"20140304110114","ans":"本题考査操作系统文件管理方面的基础知识。根据题意，系统中字长为32位，可记录32个物理块的使用情况，这样0〜31号物理块的使用情况在位示图中的第1个字中描述，32〜63号物理块的使用情况在位示图中的第2个字中描述，……，4064〜4095号物理块的使用情况在位示图中的第128个字中描述，4096〜4127号物理块的使用情况在位示图中的第129个字中描述。根据题意，若磁盘的容量为200GB，物理块的大小为1MB，那么该磁盘就有204800个物理块（即200X1024)，位示图的大小为204800/32=6400个字。","analysis":"D"},{"product_id":"20140304110403","ans":"本题考查操作系统进程管理方面的基础知识。试题(25)的正确答案是分析如下：情况①不会发生死锁：已知系统资源R的数目等于3,进程数等于2,每个进程对R资源的最大需求为2。若系统为2个进程各分配1个资源，系统可供分配的剩余资源数等于1，则可以保证1个进程得到所需资源运行完毕。当该进程释放资源后又能保证另一个进程运行完毕，故系统不会发生死锁。情况②会发生死锁：已知系统资源R的数目等于3,进程数等于3,每个进程对R资源的最大需求为2。若系统为3个进程各分配1个资源，系统可供分配的剩余资源数等于0,则无法保证进程得到所需资源运行完毕，故系统会发生死锁。情况③不会发生死锁：已知系统资源R的数目等于5,进程数等于2,每个进程对R资源的最大需求为3。若系统为两个进程各分配两个资源，系统可供分配的剩余资源数等于1，则可以保证1个进程得到所需资源运行完毕。当该进程释放资源后又能保证另一个进程运行完毕，故系统不会发生死锁。情况④会发生死锁：已知系统资源R的数目等于5,进程数等于3,每个进程对R资源的最大需求为3。若系统为3个进程分别分配2、2和1个资源，系统可供分配的剩余资源数等于0,则无法保证进程得到所需资源运行完毕，故系统会发生死锁。情况⑤会发生死锁：已知系统资源R的数目等于6,进程数等于3,每个进程对R资源的最大需求为3。若系统为3个进程各分配2个资源，系统可供分配的剩余资源数等于0,则无法保证进程得到所需资源运行完毕，故系统会发生死锁。情况⑥不会发生死锁：已知系统资源R的数目等于6,进程数等于4,每个进程对R资源的最大需求为2。若系统为4个进程各分配1个资源，系统可供分配的剩余资源数等于2,则可以保证2个进程得到所需资源运行完毕。当该进程释放资源后又能保证剩余2个进程运行完毕，故系统不会发生死锁。","analysis":"C"},{"product_id":"20140304110646","ans":"分析如下：情况②：若将m加1等于4时，系统为3个进程各分配1个资源，系统可供分配的剩余资源数等于1，则可以保证1个进程得到所需资源运行完毕。当该进程释放资源后又能保证另一个进程运行完毕，故系统不会发生死锁。情况④：若将m加2等于7时，系统为3个进程各分配2个资源，系统可供分配的剩余资源数等于1，则可以保证1个进程得到所需资源运行完毕。当该进程释放资源后又能保证另两个进程运行完毕，故系统不会发生死锁。情况⑤：若将m加1等于7时，系统为3个进程各分配2个资源，系统可供分配的剩余资源数等于1，则可以保证1个进程得到所需资源运行完毕。当该进程释放资源后又能保证另两个进程运行完毕，故系统不会发生死锁。","analysis":"D"},{"product_id":"20140304110949","ans":"本题考查操作系统存储管理方面的基础知识。在请求页式存储管理方案中，当访问的页面不在内存时需要置换页面，置换页面的原则如下表，即最先置换访问位和修改位为00的页，其次是访问位和修改位为01的页，然后是访问位和修改位为10的页，最后才置换访问位和修改位为11的页。因此本题当该进程访问的页面2不在内存时，应该淘汰表中页号为5的页面。由于3C18H=3000+0C18,因此该地址对应的页号为3,根据页面变换表，经变换后的页帧号为2。","analysis":"D"},{"product_id":"20140304111802","ans":"本题考查操作系统存储管理方面的基础知识。在请求页式存储管理方案中，当访问的页面不在内存时需要置换页面，置换页面的原则如下表，即最先置换访问位和修改位为00的页，其次是访问位和修改位为01的页，然后是访问位和修改位为10的页，最后才置换访问位和修改位为11的页。因此本题当该进程访问的页面2不在内存时，应该淘汰表中页号为5的页面。由于3C18H=3000+0C18,因此该地址对应的页号为3,根据页面变换表，经变换后的页帧号为2。","analysis":"A"},{"product_id":"20140304111921","ans":"本题考查软件过程模型。软件过程是软件生命周期中的一系列相关活动，即用于开发和维护软件及相关产品的一系列活动。软件过程模型可以帮助开发团队理解开发过程，形成对开发中的活动、资源和约束的共同理解，可以根据具体情况对一个过程进行裁剪等。瀑布模型从一种非常高层的角度描述了软件开发过程中进行的活动，并且提出了要求开发人员经过的事件序列。该模型适用于项目开始时需求已确定的情况。V模型是瀑布模型的变种，它说明测试活动是如何与分析和设计相联系的。原型模型允许开发人员快速地构造整个系统或系统的一部分以理解或澄清问题。原型的用途是获知用户的真正需求，因此原型模型可以有效地引发系统需求。螺旋模型把开发活动和风险管理结合起来，以将风险减到最小并控制风险。","analysis":"C"},{"product_id":"20140304112046","ans":"本题考查软件过程改进。软件开发过程极大地影响所生成的产品质量，因此改进过程将改进软件产品的质量。这也是进行过程改进的前提和理念。软件质量依赖于软件开发过程的质量，其中，人的因素是主导的，开发技术、过程质量、成本时间和进度也是影响因素。另外，要使得过程改进有效，需要制定过程改进的目标，还需要对开发人员进行培训。CMMI是SEI将已有的几个CMM模型结合在一起，使之构成“集成模型”，即成熟度模型，该模型支持阶段性过程改进和连续性过程改进。","analysis":"D"},{"product_id":"20140304112155","ans":"本题考查软件质量管理。软件可靠性指的是一个系统对于给定的时间间隔内、在给定条件下无失效运作的概率。根据定义，软件可靠性与软件的潜在错误的数量、位置有关，与软件产品的使用方式有关，而软件产品的开发方式不决定软件产品的可靠性。","analysis":"D"},{"product_id":"20140304112312","ans":"本题考查软件质量管理。软件可靠性指的是一个系统对于给定的时间间隔内、在给定条件下无失效运作的概率。软件可用性使之在给定的时间点上，一个软件系统能够按照规格说明正确运行的概率。软件可维护性是在给定的使用条件下，在规定的时间间隔内，使用规定的过程和资源完成维护活动的概率。","analysis":"A"},{"product_id":"20140304112739","ans":"本题考查文档与软件维护。文档是指某种数据媒体和其中所记录的数据。在软件开发过程中，有大量的信息要记录和使用，因此文档具有重要的作用，如可以提高软件开发过程的能见度、提髙开发效率、作为开发人员在一定阶段的工作成果和结束标志、记录开发过程中的有关信息、提高对软件运行维护和培训的有关信息、便于用户了解软件功能和性能等各项指标。髙质量的文档应该体现在几个方面：针对性，文档编制应考虑读者。按不同的类型、不同层次的读者，决定怎样适应他们的需要；精确性，文档的行文应该十分确切，不能出现多义性的描述。同一项目几个文档的内容应该是协调一致，没有矛盾的；清晰性，文档编写应力求简明，如有可能，配以适当的图表，以增强其清晰性；完整性，任何文档都应当是完整的、独立的，应该自成体系；灵活性，各个不同软件项目，其规模和复杂程度有着许多实际差别，不能一律看待；可追溯性，由于各开发阶段编制的文档与各个阶段完成的工作有密切的关系，前后两个阶段生成的文档，随着开发工作的逐步延伸，具有一定的继承关系，在一个项目各开发阶段之间提供的文档必定存在着可追溯的关系。","analysis":"D"},{"product_id":"20140304112959","ans":"本题考査软件维护技术。在软件开发完成交付用户使用后，就进入软件运行/维护阶段。软件维护活动根据其内容可以分为4种类型：改正性维护，为了识别和纠正软件错误、改正软件性能上的缺陷、排除实施中的误使用，应进行的诊断和改正错误的过程；适应性维护，由于信息技术飞速发展，软件运行的外部环境或数据环境可能会发生变化，为了使软件适应这种变化，而修改软件的过程；完善性维护，在软件使用过程中，用户往往会对软件提出新的功能与性能要求，为了满足这些要求，需要修改或再开发软件，以扩充软件功能、增强软件性能、改进加工效率、提高软件的可维护性而进行的维护活动；预防性维护是为了提高软件的可维护性和可靠性等，为以后进一步改进软件打下良好基础而进行的维护工作。","analysis":"C"},{"product_id":"20140304121244","ans":"本题考査软件测试技术。语句覆盖是一种白盒测试技术，指的是设计若干测试用例，运行被测程序，使得每一个可执行语句至少执行一次。题中的逻辑流的输入是一个数组a，只要存在某个a[i]>a[j]的情况，则该测试用例下可以覆盖所有的可执行语句，因此至少需要1个测试用例即可。","analysis":"A"},{"product_id":"20140304121519","ans":"本题考查软件测试技术。功能测试检查软件是否能实现需求中指定的那些功能。性能测试是测试软件的安全性、精确性、速度和可靠性。回归测试用于识别在改正当前故障的同时可能会引入新的故障。验收测试是客户对系统进行测试以验证软件系统是否符合他们对需求的理解。","analysis":"C"},{"product_id":"20140304121704","ans":"本题考查面向对象分析的基本知识。面向对象分析的目的是为了获得对应用问题的理解，确定系统的功能、性能要求。面向对象分析包含5个活动：认定对象、组织对象、描述对象间的相互作用、定义对象的操作和定义对象的内部信息。而分析阶段最重要的是理解问题域的概念，其结果将影响整个工作。经验表明，从应用定义域概念标识对象是非常合理的。因此，面向对象分析的第一步就是确定问题域。","analysis":"C"},{"product_id":"20140304121810","ans":"本题考查面向对象开发中静态成员的基本知识。面向对象开发方法中，静态成员的含义是所修饰的成员是属于类的，而不是属于某对象的。静态数据成员对该类只有一份，该类的所有对象共享静态数据成员，可被该类的所有方法访问，其值可以修改，但是不论是通过对象还是类对静态数据成员值的修改，都会反应到整个类。类的静态方法只能访问该类的静态数据成员。","analysis":"D"},{"product_id":"20140304122028","ans":"本题考查统一建模语言（UML）的基本知识。通常是用一组视图反映系统的各个方面，以完整地描述系统，每个视图代表系统描述中的一个抽象，显示系统中的一个特定的方面。UML2.0中提供了多种图形，从静态和动态两个方面表现系统视图。类图展现了一组对象、接口、协作和它们之间的关系。对象图展现了一组对象以及其之间的关系，描述了在类图中所建立的事物的实例的静态快照。序列图是场景的图形化表示，描述了以时间顺序组织的对象之间的交互活动。通信图和序列图同构，强调收发消息的对象的结构组织。状态图展现了一个状态机，由状态、转换、事件和活动组成，它关注系统的动态视图，强调对象行为的事件顺序。活动图是一种特殊的状态图，展现了在系统内从一个活动到另一个活动的流程，它专注于系统的动态视图。序列图、通信图、交互图和定时图均被称为交互图，它们用于对系统的动态方面进行建模。","analysis":"A"},{"product_id":"20140304122132","ans":"本题考查统一建模语言（UML）的基本知识。通常是用一组视图反映系统的各个方面，以完整地描述系统，每个视图代表系统描述中的一个抽象，显示系统中的一个特定的方面。UML2.0中提供了多种图形，从静态和动态两个方面表现系统视图。类图展现了一组对象、接口、协作和它们之间的关系。对象图展现了一组对象以及其之间的关系，描述了在类图中所建立的事物的实例的静态快照。序列图是场景的图形化表示，描述了以时间顺序组织的对象之间的交互活动。通信图和序列图同构，强调收发消息的对象的结构组织。状态图展现了一个状态机，由状态、转换、事件和活动组成，它关注系统的动态视图，强调对象行为的事件顺序。活动图是一种特殊的状态图，展现了在系统内从一个活动到另一个活动的流程，它专注于系统的动态视图。序列图、通信图、交互图和定时图均被称为交互图，它们用于对系统的动态方面进行建模。","analysis":"B"},{"product_id":"20140304122255","ans":"本题考查统一建模语言（UML）的基本知识。通常是用一组视图反映系统的各个方面，以完整地描述系统，每个视图代表系统描述中的一个抽象，显示系统中的一个特定的方面。UML2.0中提供了多种图形，从静态和动态两个方面表现系统视图。类图展现了一组对象、接口、协作和它们之间的关系。对象图展现了一组对象以及其之间的关系，描述了在类图中所建立的事物的实例的静态快照。序列图是场景的图形化表示，描述了以时间顺序组织的对象之间的交互活动。通信图和序列图同构，强调收发消息的对象的结构组织。状态图展现了一个状态机，由状态、转换、事件和活动组成，它关注系统的动态视图，强调对象行为的事件顺序。活动图是一种特殊的状态图，展现了在系统内从一个活动到另一个活动的流程，它专注于系统的动态视图。序列图、通信图、交互图和定时图均被称为交互图，它们用于对系统的动态方面进行建模。","analysis":"D"},{"product_id":"20140304122459","ans":"本题考查面向对象开发的基本知识。进行面向对象设计时，类图中可以展现类之间的关联关系，还可以在类图中图示关联中的数量关系，即多重度。表示数量关系时，用多重度说明数量或数量范围，表示有多少个实例（对象）能被连接起来，即一个类的实例能够与另一个类的多少个实例相关联。","analysis":"C"},{"product_id":"20140304122647","ans":"本题考查设计模式的基本知识。每一个设计模式描述了一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心。这样，就能重复地使用该方案而不必做重复劳动。设计模式的核心在于提供了相关问题的解决方案。因此，面向对象软件开发过程中，采用设计模式的主要目的就是复用成功的设计。","analysis":"A"},{"product_id":"20140304123027","ans":"Bridge(桥接）模式将对象的抽象和其实现分离，从而可以独立地改变它们，抽象类定义对该抽象的接口，如上图中Implementor，而具体的子类则用不同方式加以实现，如ConcretelmplementorA和ConcretelmplementorB。Composite(组合）模式是结构型对象模式的一个实例。它描述了如何构造一个类层次式结构，这一结构由两种类型的对象所对应的类构成，其中的组合对象使得用户可以组合基元对象以及其他的组合对象，从而形成任意复杂的结构。Facade(外观）模式则描述了如何用单个对象表示整个子系统。Singleton(单例）模式保证一个类只产生唯一的一个实例。","analysis":"A"},{"product_id":"20140304123150","ans":"Bridge(桥接）模式将对象的抽象和其实现分离，从而可以独立地改变它们，抽象类定义对该抽象的接口，如上图中Implementor，而具体的子类则用不同方式加以实现，如ConcretelmplementorA和ConcretelmplementorB。Composite(组合）模式是结构型对象模式的一个实例。它描述了如何构造一个类层次式结构，这一结构由两种类型的对象所对应的类构成，其中的组合对象使得用户可以组合基元对象以及其他的组合对象，从而形成任意复杂的结构。Facade(外观）模式则描述了如何用单个对象表示整个子系统。Singleton(单例）模式保证一个类只产生唯一的一个实例。","analysis":"D"},{"product_id":"20140304123302","ans":"本题考查设计模式的基本知识。例如，通常用户可以对应用系统进行配置，并将配置信息保存在配置文件中，应用系统启动时首先加载配置文件，而这一配置信息在内存中仅有一份。为了保证这一配置实例只有一份，采用Singleton(单例）模式，以保证一个类只产生唯一的一个实例。","analysis":"D"},{"product_id":"20140304123425","ans":"本题考查设计模式的基本知识。Adapter模式是将类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。Command模式将请求封装在对象中，这样它就可作为参数来传递，也可以被存储在历史列表里，或者以其他方式使用。Singleton(单例）模式保证一个类只产生唯一的一个实例。策略模式（Strategy)定义一系列的算法，把它们一个个封装起来，并使它们可以相互替换，这一模式使得算法可以独立于使用它的客户而变化。","analysis":"A"},{"product_id":"20140304123829","ans":"本题考查程序语言处理的基础知识。将高级语言程序翻译为机器语言程序的过程中，需要依次进行词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成等阶段，其中，中间代码生成和代码优化可以省略。程序中的错误分为语法错误和语义错误，语法分析阶段不能发现语义错误。语义分析阶段主要处理语法正确的语言结构的含义信息，可以与目标机器的体系结构无关。目标代码生成阶段的工作与目标机器的体系结构是密切相关的。","analysis":"D"},{"product_id":"20140304124128","ans":"本题考查程序语言处理的基础知识。从有限自动机的初态到终态的路径上的标记形成其可识别的字符串。对于题中的自动机，0000的识别路径为A—B—B—B—B，不能到达终态C，所以0000不能被该自动机识别；1111的识别路径为A—A—A—A—A，不能到达终态C，所以1111也不能被该自动机识别；1010的识别路径为A—A—B—C—B,结束状态不是终态C，所以1010不能被该自动机识别；0101的识别路径为A—B—C—B—C，存在从初态到终态的识别路径，所以0101可以被该自动机识别。","analysis":"C"},{"product_id":"20140304124242","ans":"本题考查程序语言的基础知识。一个函数被调用时，可能需要接受从外部传入的数据信息，传值调用与引用调用（传地址）是函数调用时常采用的信息传递方式。传值调用是将实参的值传给被调用函数的形参，引用调用的实质是将实参的地址传给被调用函数的形参。","analysis":"C"},{"product_id":"20140304125648","ans":"本题考查数据库基本概念、数据库设计的基础知识。试题（51)、（52)考查数据库联系类型方面的基本概念。根据题意，“每个科室有若干名职工，一名职工只属于一个科室”，因此科室和职工的所属联系类型是1:n，由“一个医生可以为多个病患看病；一个病患可以由多个医生多次诊治”，得知病患和医生的就诊联系类型是n:m。试题（53)、（54)考查数据库设计方面的基础知识。就诊联系是多对多联系，对于多对多联系只能转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性取该联系所关联的两个多方实体的码及联系的属性，关系的码是多方实体的码构成的属性组。另外，由于病患会找多个医生为其诊治，因此就诊关系模式设计时需要加上就诊时间，以便唯一区分就诊关系中的每一个元组，即就诊关系模式的主键为（病历号，职工号，就诊时间）。","analysis":"B"},{"product_id":"20140304125759","ans":"本题考查数据库基本概念、数据库设计的基础知识。试题（51)、（52)考查数据库联系类型方面的基本概念。根据题意，“每个科室有若干名职工，一名职工只属于一个科室”，因此科室和职工的所属联系类型是1:n，由“一个医生可以为多个病患看病；一个病患可以由多个医生多次诊治”，得知病患和医生的就诊联系类型是n:m。试题（53)、（54)考查数据库设计方面的基础知识。就诊联系是多对多联系，对于多对多联系只能转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性取该联系所关联的两个多方实体的码及联系的属性，关系的码是多方实体的码构成的属性组。另外，由于病患会找多个医生为其诊治，因此就诊关系模式设计时需要加上就诊时间，以便唯一区分就诊关系中的每一个元组，即就诊关系模式的主键为（病历号，职工号，就诊时间）。","analysis":"D"},{"product_id":"20140304125906","ans":"本题考查数据库基本概念、数据库设计的基础知识。试题（51)、（52)考查数据库联系类型方面的基本概念。根据题意，“每个科室有若干名职工，一名职工只属于一个科室”，因此科室和职工的所属联系类型是1:n，由“一个医生可以为多个病患看病；一个病患可以由多个医生多次诊治”，得知病患和医生的就诊联系类型是n:m。试题（53)、（54)考查数据库设计方面的基础知识。就诊联系是多对多联系，对于多对多联系只能转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性取该联系所关联的两个多方实体的码及联系的属性，关系的码是多方实体的码构成的属性组。另外，由于病患会找多个医生为其诊治，因此就诊关系模式设计时需要加上就诊时间，以便唯一区分就诊关系中的每一个元组，即就诊关系模式的主键为（病历号，职工号，就诊时间）。","analysis":"C"},{"product_id":"20140304130024","ans":"本题考查数据库基本概念、数据库设计的基础知识。试题（51)、（52)考查数据库联系类型方面的基本概念。根据题意，“每个科室有若干名职工，一名职工只属于一个科室”，因此科室和职工的所属联系类型是1:n，由“一个医生可以为多个病患看病；一个病患可以由多个医生多次诊治”，得知病患和医生的就诊联系类型是n:m。试题（53)、（54)考查数据库设计方面的基础知识。就诊联系是多对多联系，对于多对多联系只能转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性取该联系所关联的两个多方实体的码及联系的属性，关系的码是多方实体的码构成的属性组。另外，由于病患会找多个医生为其诊治，因此就诊关系模式设计时需要加上就诊时间，以便唯一区分就诊关系中的每一个元组，即就诊关系模式的主键为（病历号，职工号，就诊时间）。","analysis":"B"},{"product_id":"20140304132758","ans":"本题考查关系数据库规范化理论方面的基础知识。根据函数依赖定义，可知AC→U，AB→U，所以AC和AB为候选关键字。","analysis":"D"},{"product_id":"20140304132943","ans":"根据主属性的定义，\"包含在任何一个候选码中的属性叫做主属性（Primeattribute),否则叫做非主属性（Nonprimeattribute)\",所以，关系中的3个属性都是主属性。","analysis":"C"},{"product_id":"20140304134215","ans":"本题考查数组存储的基础知识。按行方式存储时，元素A[i，j]之前的元素个数为(1+2+…+i+j)，由于数组M的下标从1开始，因此，存储A[i，j]的是M[1+2+…+i+j+1]，即。","analysis":"A"},{"product_id":"20140304135251","ans":"本题考査顺序查找方法。假设从前往后找，则所找元素为第1个元素时，与表中的1个元素作了比较，所找元素为第2个元素时，与表中的2个元素作了比较，……，所找元素为第n个元素时，与表中的n个元素作了比较，因此，平均查找长度等于(1+2+…+n)/n。","analysis":"B"},{"product_id":"20140304135419","ans":"本题考查二叉树的基本概念。在平衡二叉树中，任意一个结点的左、右子树的髙度之差的绝对值不超过1。虽然在结构上都符合二叉树的定义，但完全二叉树、线索二叉树、二叉排序树与最优二叉树的应用场合和概念都不同。线索二叉树与二叉树的遍历运算相关，是一种存储结构。二叉排序树的结构与给定的初始关键码序列相关。最优二叉树（即哈夫曼树）是一类带权路径长度最短的二叉树，由给定的一个权值序列构造。线索二叉树、二叉排序树和最优二叉树在结构上都不要求是平衡二叉树。在完全二叉树中，去掉最后一层后就是满二叉树，而且最后一层上的叶子结点必须从该层的最左边开始排列，满足任意一个结点的左、右子树的高度之差的绝对值不超过1的条件，因此在形态上是一个平衡的二叉树。","analysis":"A"},{"product_id":"20140304135954","ans":"本题考查数据结构的基础知识。无向图的邻接矩阵是一个对称矩阵，每条边会表示两次，因此矩阵中的非零元素数目为2E。","analysis":"C"},{"product_id":"20140304140613","ans":"本题考查散列表的基本概念。对于关键字序列（26,25,72,38,8,18,59)和散列函数H(Key)=Keymod13,采用线性探测的开放定址法解决冲突构造的散列表如下表所示：","analysis":"D"},{"product_id":"20140304140759","ans":"本题考查算法设计技术。N-皇后问题是一个经典的计算问题，该问题基于一些约束条件来求问题的可行解。该问题不易划分为子问题求解，因此分治法不适用：由于不是要求最优解，因此不具备最优子结构性质，也不宜用动态规划法和贪心法求解。而系统搜索法--回溯法可以有效地求解该问题。","analysis":"D"},{"product_id":"20140304141039","ans":"本题考查算法设计技术。分治方法是一种重要的算法设计技术(设计策略)，该策略将原问题划分成n个规模较小而结构与原问题相似的子问题；递归地解决这些子问题；然后再合并其结果，最终得到原问题的解。分治算法往往用递归技术来实现，但并非必须。分治算法最理想的情况是划分为k个规模相等的子问题，但很多时候往往不能均匀地划分子问题。分治算法的代价在划分子问题和合并子问题的解上，根据不同的问题，划分的代价和合并的代价有所不同。例如归并排序中，主要的计算代价在合并解上，而在快速排序中，主要的计算代价在划分子问题上。","analysis":"A"},{"product_id":"20140304141647","ans":"","analysis":"A"},{"product_id":"20140304141858","ans":"本题考査排序算法。插入排序算法的基本思想是将待排序数组分为两个部分，已排好序部分和未排序部分。其主要步骤为：开始时，第一个元素在已排好序部分中，其余元素在未排序部分。然后依次从未排序部分中取出第一个元素，从后向前与排好序部分的元素进行比较并将其插入到已排好序部分的正确位置。直到所有元素排好序。归并排序的基本思想是将待排序数组划分为子问题，对子问题求解，然后合并解。其主要步骤为：将数组分为两个相同规模的子数组，分别包含前n/2个元素和后n/2个元素；递归地排序这两个子数组；合并排好序的两个子数组，依次比较两个排好序的子数组的元素，得到整个数组的排好序的序列。根据上述算法思想和算法步骤，可以得到题中实例的比较次数分别为12和14。","analysis":"A"},{"product_id":"20140304142342","ans":"ARP是网络层协议，它的作用是实现IP地址与MAC地址之间的变换。IP地址是分配给主机的逻辑地址，在互联网中表示唯一的主机。另外，每个主机还有一个物理地址，通常用网卡地址（MAC地址）来表示主机的物理地址。物理地址和逻辑地址的区别可以从两个角度看：从网络互连的角度看，逻辑地址在整个互连网络中有效，而物理地址只是在子网内部有效；从网络协议分层的角度看，逻辑地址由Internet层使用，而物理地址由子网访问子层（具体地说就是数据链路层）使用。由于有两种主机地址，因而需要一种映像关系把这两种地址对应起来。在Internet中用地址分解协议（AddressResolutionProtocol，ARP)来实现逻辑地址到物理地址映像。ARP分组的格式如下图所示。各字段的含义解释如下：•硬件类型：网络接口硬件的类型，对以太网此值为1。•协议类型：发送方使用的协议，0800H表示IP协议。•硬件地址长度：对以太网，地址长度为6字节。•协议地址长度：对IP协议，地址长度为4字节。•操作类型：1一ARP请求，2—ARP响应，3—RARP请求，4—RARP响应。通常Internet应用程序把要发送的报文交给IP协议，IP当然知道接收方的逻辑地址(否则就不能通信了），但不一定知道接收方的物理地址。在把IP分组向下传送给本地数据链路实体之前可以用两种方法得到目标物理地址：①查本地内存中的ARP地址映像表，其逻辑结构如下表所示。可以看出这是IP地址和以太网地址的对照表。②如果在ARP表中查不到，就广播一个ARP请求分组，这种分组经过路由器进一步转发，可以到达所有连网的主机。它的含义是“如果你的IP地址是这个分组中的目标结点协议地址，请回答你的物理地址是什么”。收到该分组的主机一方面可以用分组中的两个源地址更新自己的ARP地址映像表，另一方面用自己的IP地址与目标结点协议地址字段比较，若相符则发回一个ARP响应分组，向发送方报告自己的硬件地址，若不相符则不予回答。","analysis":"C"},{"product_id":"20140304142517","ans":"ARP是网络层协议，它的作用是实现IP地址与MAC地址之间的变换。IP地址是分配给主机的逻辑地址，在互联网中表示唯一的主机。另外，每个主机还有一个物理地址，通常用网卡地址（MAC地址）来表示主机的物理地址。物理地址和逻辑地址的区别可以从两个角度看：从网络互连的角度看，逻辑地址在整个互连网络中有效，而物理地址只是在子网内部有效；从网络协议分层的角度看，逻辑地址由Internet层使用，而物理地址由子网访问子层（具体地说就是数据链路层）使用。由于有两种主机地址，因而需要一种映像关系把这两种地址对应起来。在Internet中用地址分解协议（AddressResolutionProtocol，ARP)来实现逻辑地址到物理地址映像。ARP分组的格式如下图所示。各字段的含义解释如下：•硬件类型：网络接口硬件的类型，对以太网此值为1。•协议类型：发送方使用的协议，0800H表示IP协议。•硬件地址长度：对以太网，地址长度为6字节。•协议地址长度：对IP协议，地址长度为4字节。•操作类型：1一ARP请求，2—ARP响应，3—RARP请求，4—RARP响应。通常Internet应用程序把要发送的报文交给IP协议，IP当然知道接收方的逻辑地址(否则就不能通信了），但不一定知道接收方的物理地址。在把IP分组向下传送给本地数据链路实体之前可以用两种方法得到目标物理地址：①查本地内存中的ARP地址映像表，其逻辑结构如下表所示。可以看出这是IP地址和以太网地址的对照表。②如果在ARP表中查不到，就广播一个ARP请求分组，这种分组经过路由器进一步转发，可以到达所有连网的主机。它的含义是“如果你的IP地址是这个分组中的目标结点协议地址，请回答你的物理地址是什么”。收到该分组的主机一方面可以用分组中的两个源地址更新自己的ARP地址映像表，另一方面用自己的IP地址与目标结点协议地址字段比较，若相符则发回一个ARP响应分组，向发送方报告自己的硬件地址，若不相符则不予回答。","analysis":"B"},{"product_id":"20140304142641","ans":"集线器是一种物理层设备，它的作用是从一个端口接收信息，并向其他端口广播出去。集线器不解释所传送信息的含义，也不能识别任何协议数据单元。集线器的各个端口构成一个冲突域，即只能有一个端口发送数据，如果有两个以上端口同时发送，就冲突了。网桥是数据链路层设备，能识别数据链路层协议数据单元，并根据数据链路层地址进行数据转发。交换机是一种多端口网桥，任何一对端口之间都能进行数据转发。交换机的各个端口构成一个广播域，但不是冲突域，即可以有多个端口同时发送数据而不会出现冲突。","analysis":"D"},{"product_id":"20140304142809","ans":"“三网合一”是将电信网、广播电视网以及互联网进行整合，实现业务互联互通的一种网络解决方案。","analysis":"A"},{"product_id":"20140304142958","ans":"把4个C类网络汇聚成一个超网地址，使用的网络掩码为255.255.252.0。","analysis":"C"},{"product_id":"20140304143928","ans":"本题考查英语的基本知识。和许多项目经理一样,Ravi研究了作为主要软件开发生命周期过程的瀑布模型，但是，他发现瀑布模型不能满足要求，原因是客户希望软件分阶段提交。也就说明系统必须按照部分构建和交付系统，而不是作为一个整体进行。这种情况在很多其他项目中也类似。现实世界中，很难有一种标准的过程或在前期的项目中使用的过程作为目前项目的最佳选择。因此，为了达到最佳的适应性，需要针对新的问题，对已有开发过程进行裁剪（针对新的问题，做适应性修改）。但是，即使经过裁剪，一个开发过程也很难应对变更的需求。因此，为了适应变化的需求而不失去对项目的控制，必须用需求变更管理过程对开发过程进行补充。","analysis":"B"},{"product_id":"20140304144015","ans":"本题考查英语的基本知识。和许多项目经理一样,Ravi研究了作为主要软件开发生命周期过程的瀑布模型，但是，他发现瀑布模型不能满足要求，原因是客户希望软件分阶段提交。也就说明系统必须按照部分构建和交付系统，而不是作为一个整体进行。这种情况在很多其他项目中也类似。现实世界中，很难有一种标准的过程或在前期的项目中使用的过程作为目前项目的最佳选择。因此，为了达到最佳的适应性，需要针对新的问题，对已有开发过程进行裁剪（针对新的问题，做适应性修改）。但是，即使经过裁剪，一个开发过程也很难应对变更的需求。因此，为了适应变化的需求而不失去对项目的控制，必须用需求变更管理过程对开发过程进行补充。","analysis":"C"},{"product_id":"20140304144110","ans":"本题考查英语的基本知识。和许多项目经理一样,Ravi研究了作为主要软件开发生命周期过程的瀑布模型，但是，他发现瀑布模型不能满足要求，原因是客户希望软件分阶段提交。也就说明系统必须按照部分构建和交付系统，而不是作为一个整体进行。这种情况在很多其他项目中也类似。现实世界中，很难有一种标准的过程或在前期的项目中使用的过程作为目前项目的最佳选择。因此，为了达到最佳的适应性，需要针对新的问题，对已有开发过程进行裁剪（针对新的问题，做适应性修改）。但是，即使经过裁剪，一个开发过程也很难应对变更的需求。因此，为了适应变化的需求而不失去对项目的控制，必须用需求变更管理过程对开发过程进行补充。","analysis":"A"},{"product_id":"20140304144214","ans":"本题考查英语的基本知识。和许多项目经理一样,Ravi研究了作为主要软件开发生命周期过程的瀑布模型，但是，他发现瀑布模型不能满足要求，原因是客户希望软件分阶段提交。也就说明系统必须按照部分构建和交付系统，而不是作为一个整体进行。这种情况在很多其他项目中也类似。现实世界中，很难有一种标准的过程或在前期的项目中使用的过程作为目前项目的最佳选择。因此，为了达到最佳的适应性，需要针对新的问题，对已有开发过程进行裁剪（针对新的问题，做适应性修改）。但是，即使经过裁剪，一个开发过程也很难应对变更的需求。因此，为了适应变化的需求而不失去对项目的控制，必须用需求变更管理过程对开发过程进行补充。","analysis":"D"},{"product_id":"20140304144258","ans":"本题考查英语的基本知识。和许多项目经理一样,Ravi研究了作为主要软件开发生命周期过程的瀑布模型，但是，他发现瀑布模型不能满足要求，原因是客户希望软件分阶段提交。也就说明系统必须按照部分构建和交付系统，而不是作为一个整体进行。这种情况在很多其他项目中也类似。现实世界中，很难有一种标准的过程或在前期的项目中使用的过程作为目前项目的最佳选择。因此，为了达到最佳的适应性，需要针对新的问题，对已有开发过程进行裁剪（针对新的问题，做适应性修改）。但是，即使经过裁剪，一个开发过程也很难应对变更的需求。因此，为了适应变化的需求而不失去对项目的控制，必须用需求变更管理过程对开发过程进行补充。","analysis":"D"}]},{"paperId":"80","field":"20102","question_list":[{"product_id":"20140308213609","ans":"本题考查CPU中相关寄存器的基础知识。计算机中主机与外设间进行数据传输的输入输出控制方法有程序控制方式、中断方式、DMA等。在程序控制方式下，由CPU执行程序控制数据的输入输出过程。在中断方式下，外设准备好输入数据或接收数据时向CPU发出中断请求信号，若CPU决定响应该请求，则暂停正在执行的任务，转而执行中断服务程序进行数据的输入输出处理，之后再回去执行原来被中断的任务。在DMA方式下，CPU只需向DMA控制器下达指令，让DMA控制器来处理数据的传送，数据传送完毕再把信息反馈给CPU,这样就很大程度上减轻了CPU的负担，可以大大节省系统资源。","analysis":"C"},{"product_id":"20140308213736","ans":"本题考查计算机中的数据表示和运算基础知识。釆用8位补码表示整型数据时，可表示的数据范围为-128〜127,因此进行127+1运算会产生溢出。","analysis":"C"},{"product_id":"20140308213856","ans":"本题考查计算机系统的总线基础知识。内存容量为4GB，即内存单元的地址宽度为32位。字长为32位即要求数据总线的宽度为32位，因此地址总线和数据总线的宽度都为32。地址总线的宽度就是处理机寻址范围，若地址总线为n位，则可寻址空间为2的n次方字节。所以本题的可寻址空间为：4*1024*1024*1024*位，所以地址总线宽度为32","analysis":"A"},{"product_id":"20140308214101","ans":"本题考查计算机系统中存储部件的基础知识。由2KX4位的存储器芯片组成容量为16KX8位的存储器时，共需要16片（16KX8/(2KX4))。用2个存储器芯片组成2KX8的存储空间（每个芯片的地址空间连续)，16KX8位的存储空间共分为8段，即0000H~07FFH，0800H~0FFFH，1000H~17FFH，1800H~1FFFH，2000H~27FFH,2800H~2FFFH,3000H~37FFH,3800H~3FFFH。显然，地址单元0B1FH所在芯片的起始地址为0800H。","analysis":"B"},{"product_id":"20140308214242","ans":"本题考查CPU中相关寄存器的基础知识。指令寄存器（IR)用于暂存从内存取出的、正在运行的指令，这是由系统使用的寄存器，程序员不能访问。存储器数据寄存器（MDR)和存储器地址寄存器（MAR)用于对内存单元访问时的数据和地址暂存，也是由系统使用的，程序员不能访问。程序计数器（PC)用于存储指令的地址，CPU根据该寄存器的内容从内存读取待执行的指令，程序员可以访问该寄存器。","analysis":"A"},{"product_id":"20140308214455","ans":"本题考查计算机系统的基础知识。磁盘格式化是指把一张空白的盘划分成一个个小区域并编号，以供计算机储存和读取数据。格式化是一种纯物理操作，是在磁盘的所有数据区上写零的操作过程，同时对硬盘介质做一致性检测，并且标记出不可读和坏的扇区。由于大部分硬盘在出厂时已经格式化过，所以只有在硬盘介质产生错误时才需要进行格式化。磁盘分区就是将磁盘划分成一块块的存储区域。在传统的磁盘管理中，将一个硬盘分为两大类分区：主分区和扩展分区。主分区是能够安装操作系统、能够进行计算机启动的分区，这样的分区可以直接格式化，然后安装系统，直接存放文件。磁盘里的文件都是按存储时间先后来排列的，理论上文件之间都是紧凑排列而没有空隙的。但是，用户常常会对文件进行修改，而且新增加的内容并不是直接加到原文件的位置的，而是放在磁盘存储空间的最末尾，系统会在这两段之间加上联系标识。当有多个文件被修改后，磁盘里就会有很多不连续的文件。一旦文件被删除，所占用的不连续空间就会空着，并不会被自动填满，而且，新保存的文件也不会放在这些地方，这些空着的磁盘空间，就被称作“磁盘碎片”。因此，硬盘的每个分区里都会有碎片。碎片太多，其他的不连续文件相应也多，系统在执行文件操作时就会因反复寻找联系标识，工作效率大大降低，直接的反映就是感觉慢。磁盘清理将删除计算机上所有不需要的文件（这些文件由用户或系统进行确认)。磁盘碎片整理，就是通过系统软件或者专业的磁盘碎片整理软件对电脑磁盘在长期使用过程中产生的碎片和凌乱文件重新整理，释放出更多的磁盘空间，可提高电脑的整体性能和运行速度。","analysis":"C"},{"product_id":"20140308214700","ans":"本题考查网络安全中网络攻击的基础知识。网络攻击的主要手段包括口令入侵、放置特洛伊木马程序、拒绝服务（DoS)攻击、端口扫描、网络监听、欺骗攻击和电子邮件攻击等。口令入侵是指使用某些合法用户的账号和口令登录到目的主机，然后再实施攻击活动。特洛伊木马（Trojans)程序常被伪装成工具程序或游戏，一旦用户打开了带有特洛伊木马程序的邮件附件或从网上直接下载，或执行了这些程序之后，当用户连接到互联网上时，这个程序就会向黑客通知用户的IP地址及被预先设定的端口。拒绝服务（DoS)攻击目的是使计算机或网络无法提供正常的服务。最常见的拒绝服务攻击有网络带宽攻击和连通性攻击。带宽攻击指以极大的通信量冲击网络，使得所有可用网络资源都被消耗殆尽，最后导致合法的用户请求无法通过。连通性攻击是指用大量的连接请求冲击计算机，使得所有可用的操作系统资源都被消耗殆尽，最终计算机无法再处理合法用户的请求。端口扫描就是利用Socket编程与目标主机的某些端口建立TCP连接、进行传输协议的验证等，从而侦知目标主机的扫描端口是否处于激活状态、主机提供了哪些服务、提供的服务中是否含有某些缺陷等。网络监听是主机的一种工作模式，在这种模式下，主机可以接收到本网段在同一条物理通道上传输的所有信息。使用网络监听工具可轻而易举地截取包括口令和账号在内的信息资料。欺骗攻击是攻击者创造一个易于误解的上下文环境，以诱使受攻击者进入并且做出缺乏安全考虑的决策。IP欺骗是欺骗攻击的一种，IP欺骗实现的过程是：使得被信任的主机丧失工作能力，同时采样目标主机发出的TCP序列号，猜测出它的数据序列号。然后，伪装成被信任的主机，同时建立起与目标主机基于地址验证的应用连接。如果成功，黑客可以使用一种简单的命令放置一个系统后门，以进行非授权操作。","analysis":"A"},{"product_id":"20140308214805","ans":"本题考查网络攻击中ARP攻击的原理。ARP攻击（ARP欺骗）是欺骗攻击的一种，通过伪造IP地址和MAC地址，能够在网络中产生大量的ARP通信量使网络阻塞，如果伪造网关的IP地址和MAC地址对，则所有发往网关的IP包将因为MAC地址错误而无法到达网关(ARP攻击一般会将MAC地址改为发起ARP攻击的主机地址），造成无法跨网段通信。处理ARP攻击的方法为首先断开ARP攻击主机的网络连接，然后用“arp-d”命令清除受攻击影响的ARP缓存。","analysis":"B"},{"product_id":"20140308214922","ans":"本题考查网络攻击中网络监听的基础知识。网络监听是主机的一种工作模式，在这种模式下，主机可以接收到本网段在同一条物理通道上传输的所有信息。使用网络监听工具可轻而易举地截取包括口令和账号在内的信息资料。采用数据加密的方式保护包括口令和账号在内的信息资料，使得即使网络监听获取密文后也无法解密成明文，是对付网络监听的有效手段。","analysis":"C"},{"product_id":"20140308215025","ans":"本题考查知识产权方面的基础知识，涉及软件商标权主体资格的相关概念。在我国，商标权是指注册商标专用权，只有依法进行商标注册后，商标注册人才能取得商标权，其商标才能得到法律的保护。商标权不包括商标设计人的权利，主要注重商标所有人的权利，即注册商标所有人具有其商标的专用权。商标设计人的发表权、署名权等人身权在商标的使用中没有反映，所以不受商标法保护。商标设计人可以通过其他法律来保护属于自己的权利，如可以将商标设计图案作为美术作品通过著作权法来保护；与产品外观关系密切的商标图案还可以申请外观设计专利通过专利法加以保护。软件商标制作人、软件商标使用人均未涉及软件注册商标，所以均不能成为软件商标权的权利人。","analysis":"D"},{"product_id":"20140308215202","ans":"本题考查知识产权方面的基础知识，涉及软件商业秘密权的相关概念。著作权从软件作品性的角度保护其表现形式，源代码（程序)、目标代码（程序)、软件文档是计算机软件的基本表达方式（表现形式)，受著作权保护；专利权从软件功能性的角度保护软件的思想内涵，即软件的技术构思、程序的逻辑和算法等的思想内涵，当计算机软件同硬件设备是一个整体，涉及计算机程序的发明专利，可以申请方法专利，取得专利权保护。商标权是为商业化的软件从商品、商誉的角度为软件提供保护，利用商标权可以禁止他人使用相同或者近似的商标、生产（制作）或销售假冒软件产品。商标权受保护的力度大于其他知识产权，对软件的侵权行为更容易受到行政查处。而商业秘密权是商业秘密的合法控制人采取了保密措施，依法对其经营信息和技术信息享有的专有使用权，我国《反不正当竞争法》中对商业秘密的定义为“不为公众所知悉、能为权利人带来经济利益、具有实用性并经权利人采取保密措施.的技术信息和经营信息”。软件技术秘密是指软件中适用的技术情报、数据或知识等，包括程序、设计方法、技术方案、功能规划、开发情况、测试结果及使用方法的文字资料和图表，如程序设计说明书、流程图、用户手册等。软件经营秘密指具有软件秘密性质的经营管理方法以及与经营管理方法密切相关的信息和情报，其中包括管理方法、经营方法、产销策略、客户情报（客户名单、客户需求)，以及对软件市场的分析、预测报告和未来的发展规划、招投标中的标底及标书内容等。","analysis":"C"},{"product_id":"20140308215447","ans":"本题考查知识产权方面的基础知识，涉及软件发明专利申请权归属的相关概念。根据《专利法》第六条第1款规定，执行本单位的任务所完成的发明创造是职务发明创造。职务发明创造申请专利的权利属于单位，申请被批准后，该单位为专利权人。专利法实施细则》第十一条对“执行本单位的任务所完成的发明创造”作出了解释。执行本单位的任务所完成的发明创造是指：（1)在本职工作中作出的发明创造：（2)履行本单位交付的本职工作之外的任务所作出的发明创造；（3)退职、退休或者调动工作后—年内所作出的、与其在原单位承担的本职工作或原单位分配的任务有关的发明创造。李某是为完成其兼职软件公司交给的工作而作出的该项发明，属于职务发明。专利申请权应归属软件公司。《专利法》第六条第3款规定：“利用本单位的物质技术条件所完成的发明创造，单位与发明人或者设计人订有合同，对申请专利的权利和专利权的归属作出约定的，从其约定。”在事先有约定的情况下，按照约定确定权属。如果单位和发明人没有对权属问题作出约定或约定不明的，该发明创造仍视为职务发明创造，专利申请权仍然属于单位。本题未涉及合同约定，故D项不正确，","analysis":"C"},{"product_id":"20140308215622","ans":"本题考查多媒体方面的基础知识，涉及彩色图像数据量计算。图像的分辨率越高，图像深度越深，则数字化后的图像效果越逼真，图像数据量也越大。其图像数据量可用下面的公式估算：图像数据量=图像的总像素X图像深度（b)其中图像的总像素为图像的水平方向像素乘以垂直方向像素数。例如，一幅640X480的256色图像，其图像文件大小约为640X480X8≈300KB。","analysis":"B"},{"product_id":"20140308215737","ans":"本题考查多媒体方面的基础知识。涉及图片存储光盘数量的计算。图像数据量的计算方式如下：图像数据量=图像的总像素X图像深度（b),需用光盘数量的计算方式如下：光盘数量=图像的总像素X图像深度/4GB(张）","analysis":"B"},{"product_id":"20140308220012","ans":"本题考查软件开发生命周期模型的基本知识。常见的软件生存周期模型有瀑布模型、演化模型、螺旋模型、喷泉模型等。瀑布模型是将软件生存周期各个活动规定为依线性顺序连接的若干阶段的模型，适合于软件需求很明确的软件项目。V模型是瀑布模型的一种演变模型，将测试和分析与设计关联进行，加强分析与设计的验证。原型模型是一种演化模型，通过快速构建可运行的原型系统，然后根据运行过程中获取的用户反馈进行改进。演化模型特别适用于对软件需求缺乏准确认识的情况。螺旋模型将瀑布模型和演化模型结合起来，加入了两种模型均忽略的风险分析。本题中项目组具备了所开发系统的相关领域及类似规模系统的开发经验，即需求明确，瀑布模型最适合开发此项目。","analysis":"B"},{"product_id":"20140308220236","ans":"本题考查软件项目管理的基础知识。软件项目计划的一个重要内容是安排进度，常用的方法有Gantt图和PERT图。Gantt图用水平条状图描述，它以日历为基准描述项目任务，可以清楚地表示任务的持续时间和任务之间的并行，但是不能清晰地描述各个任务之间的依赖关系。PERT图是一种网络模型，描述一个项目的各任务之间的关系。可以明确表达任务之间的依赖关系，即哪些任务完成后才能开始另一些任务，以及如期完成整个工程的关键路径，但是不能清晰地描述各个任务之间的并行关系。图中任务流ABEGHIK的持续时间是36,ABEGHJK的持续时间是40,ACEGHIK的持续时间是33,ACEGHJK的持续时间为37。所以项目关键路径长度为40。","analysis":"C"},{"product_id":"20140308220304","ans":"本题考查软件项目管理的基础知识。软件项目计划的一个重要内容是安排进度，常用的方法有Gantt图和PERT图。Gantt图用水平条状图描述，它以日历为基准描述项目任务，可以清楚地表示任务的持续时间和任务之间的并行，但是不能清晰地描述各个任务之间的依赖关系。PERT图是一种网络模型，描述一个项目的各任务之间的关系。可以明确表达任务之间的依赖关系，即哪些任务完成后才能开始另一些任务，以及如期完成整个工程的关键路径，但是不能清晰地描述各个任务之间的并行关系。图中任务流ABEGHIK的持续时间是36,ABEGHJK的持续时间是40,ACEGHIK的持续时间是33,ACEGHJK的持续时间为37。所以项目关键路径长度为40。","analysis":"B"},{"product_id":"20140308220542","ans":"本题考查软件开发过程管理的基本知识。敏捷开发方法XP是一种轻量级、高效、低风险、柔性、可预测的、科学的软件开发方法，其特性包含在12个最佳实践中。（1）计划游戏：快速制定计划、随着细节的不断变化而完善；（2）小型发布：系统的设计要能够尽可能早地交付；（3）隐喻：找到合适的比喻传达信息；（4）简单设计：只处理当前的需求使设计保持简单；（5）测试先行：先写测试代码再编写程序；（6）重构：重新审视需求和设计，重新明确地描述它们，以符合新的和现有的需求;（7）结队编程；（8）集体代码所有制；（9）持续集成：可以按日甚至按小时为客户提供可运行的版本；（10）每周工作40个小时；（11）现场客户；（12）编码标准。","analysis":"C"},{"product_id":"20140308220637","ans":"本题考查软件开发风险分析的基本知识。风险分析实际上是4个不同的活动：风险识别、风险预测、风险评估和风险控制。风险识别是试图系统化地确定对项目计划（估算、进度、资源分配）的威胁。风险预测又称为风险估算，它从两个方面评估一个风险：风险发生的可能性或概率；以及如果风险发生时所产生的后果。风险评估根据风险及其发生的概率和产生的影响预测是否影响参考水平值。风险控制的目的是辅助项目组建立处理风险的策略，有效的策略应考虑风险避免、风险监控、风险管理及意外事件计划。","analysis":"D"},{"product_id":"20140308220729","ans":"本题考查程序设计语言的基础知识。变量是计算机内存单元的抽象，在程序中表示数据，具有名称、类型、值、地址、作用域、存储类别等属性，其值在运行过程中由指令进行修改。常量也用于在程序中表示数据，但常量在程序运行过程中不能修改，常量也具有类型，如整型常量、浮点型常量、字符串常量等，也称为字面量或文字。","analysis":"B"},{"product_id":"20140308220833","ans":"本题考查程序语言翻译的基础知识。编译程序是一种将高级语言程序翻译成目标程序的系统软件，它对源程序的翻译过程分为词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成，以及符号表管理和出错处理。源程序可以被看成是一个字符串。词法分析是编译过程的第一阶段，其任务是对源程序从前到后（从左到右）逐个字符地扫描，从中识别出一个个的“单词”符号。语法分析的任务是在词法分析的基础上，根据语言的语法规则将单词符号序列分解成各类语法单位，如“表达式”、“语句”、“程序”等。语义分析阶段主要检查源程序是否包含语义错误，并收集类型信息供后面的代码生成阶段使用。只有语法和语义都正确的源程序才能被翻译成正确的目标代码。","analysis":"A"},{"product_id":"20140308221053","ans":"","analysis":"B"},{"product_id":"20140308221339","ans":"本题考査PV操作方面的基本知识。因为P1是P3和P4的前驱，当P1执行完成后，应通知P3和P4，故应采用V(S1)V(S2)操作分别通知P3和P4;同理，P2是P3和P5的前驱，当P2执行完后，应通知P3和P5,故应采用V(S3)V(S4)操作分别通知P3和P5。","analysis":"C"},{"product_id":"20140308221440","ans":"本题考査PV操作方面的基本知识。因为P3是P1和P2的后继，当P3执行前应测试P1和P2是否执行完，故应采用P(S1)P(S3)操作分别测试P1和P2是否执行完；又因为P3是P4和P5的前驱，当P3执行完应通知P4和P5,故应采用V(S5)V(S6)操作分别通知P4和P5。","analysis":"B"},{"product_id":"20140308221517","ans":"本题考査PV操作方面的基本知识。因为P4是P1和P3的后继，当P4执行前应测试P1和P3是否执行完，故应采用P(S2)P(S5)操作分别测试P1和P3是否执行完；又因为P5是P2和P3的前驱的后继，当P5执行前应测试P2和P3是否执行完,故应采用P(S4)P(S6)操作分别测试P2和P3是否执行完。","analysis":"C"},{"product_id":"20140308221644","ans":"本题考查操作系统中设备管理的基本知识。访问一个数据块的时间应为寻道时间加旋转延迟时间及传输时间。根据题意，每块的旋转延迟时间及传输时间共需102ms，磁头从一个磁道移至另一个磁道需要10ms，但逻辑上相邻数据块的平均距离为10个磁道，即读完一个数据块到下一个数据块寻道时间需要100ms。通过上述分析，本题访问一个数据块的时间应为202ms，而读取一个100块的文件共需要20200ms。","analysis":"D"},{"product_id":"20140308221857","ans":"本题考查操作系统中文件管理的基本知识。根据题意，磁盘块的大小为512B，每个块号需占3B，因此一个磁盘物理块可存放512/3=170个块号。根索引采用一级索引时的文件最大长度为：170X512/1024=87040/1024=85KB根索引采用二级索引时的文件最大长度为：170X170X512/1024=28900X512/1024=14450KB","analysis":"A"},{"product_id":"20140308221944","ans":"本题考查操作系统中文件管理的基本知识。根据题意，磁盘块的大小为512B，每个块号需占3B，因此一个磁盘物理块可存放512/3=170个块号。根索引采用一级索引时的文件最大长度为：170X512/1024=87040/1024=85KB根索引采用二级索引时的文件最大长度为：170X170X512/1024=28900X512/1024=14450KB","analysis":"C"},{"product_id":"20140308222056","ans":"冗余是指对于实现系统规定功能是多余的那部分资源，包括硬件、软件、信息和时间。通常冗余技术分为4类：（1)结构冗余，按其工作方法可以分为静态、动态和混合冗余；（2)信息冗余，指的是为了检测或纠正信息在运算或传输中的错误另外加的一部分信息；（3)时间冗余，是指以重复执行指令或程序来消除瞬时错误带来的影响；（4)冗余附件技术，是指为实现上述冗余技术所需的资源和技术。","analysis":"C"},{"product_id":"20140308222207","ans":"软件成熟度模型CMM是对软件组织进化阶段的描述，该模型在解决软件过程存在问题方面取得了很大的成功，因此在软件界产生了巨大影响，促使软件界重视并认真对待过程改进工作。过程能力成熟度模型基于这样的理念：改进过程将改进产品，尤其是软件产品。软件组织为提高自身的过程能力，把不够成熟的过程提升到较成熟的过程涉及4个方面，这4个方面构成了软件过程改进的框架，即过程改进基础设施、过程改进线路图、软件过程评估方法和软件过程改进计划。在进行评估后需要把发现的问题转化为软件过程改进计划。而过程改进通常不可能是一次性的，需要反复进行。每一次改进要经历4个步骤：评估、计划、改进和监控。","analysis":"B"},{"product_id":"20140308222301","ans":"软件复杂性度量是软件度量的一个重要分支。软件复杂性度量的参数有很多，主要包括：（1)规模，即指令数或者源程序行数；（2)难度，通常由程序中出现的操作数所决定的量来表示；（3)结构，通常用与程序结构有关的度量来表示；（4)智能度，即算法的难易程度。","analysis":"B"},{"product_id":"20140308222448","ans":"软件复杂性度量是软件度量的一个重要分支，而其主要表现在程序的复杂性。其中，McCabe度量法是一种基于程序控制流的复杂性度量方法，该方法认为程序的复杂性很大程度上取决于控制的复杂性。首先根据程序画出程序图，然后基于图论用图的环路数来度量程序复杂性，即V(G)=m-n+2p，其中m，n和p分别表示图G中弧的个数、顶点的个数和强连通分量数。根据上述公式可得，上图的复杂性为9-7+2=4。","analysis":"A"},{"product_id":"20140308222532","ans":"软件的可维护性是指维护人员理解、改正、改动和改进这个软件的难易程度，是软件开发阶段各个时期的关键目标。软件系统的可维护性评价指标包括可理解性、可测试性、可修改性、可靠性、可移植性、可使用性和效率。","analysis":"C"},{"product_id":"20140308222644","ans":"软件系统文档是系统建设过程的“痕迹”，是系统维护人员的指南，是开发人员与用户交流的工具。软件系统文档不仅包括应用软件开发过程中产生的文档，还包括硬件采购和网络设计中形成的文档；不仅包括有一定格式要求的规范文档，还包括系统建设过程中的各种来往文件、会议纪要、会计单据等资料形成的不规范文档。软件系统文档可以提高软件开发的可见度，提高软件开发效率，且便于用户理解软件的功能、性能等各项指标。","analysis":"C"},{"product_id":"20140308222806","ans":"软件测试是软件开发过程中一个独立而且非常重要的阶段，它是为了发现错误而执行程序的过程。因此一个成功的测试应该能发现至今未发现的错误。而且需要特别指出的是软件测试不能表明软件中不存在错误，它只能说明软件中存在错误。另外，由于问题的复杂性、软件本身的复杂性和抽象性、软件开发各个阶段工作的多样性、参加开发各种人员之间的配合关系等因素，使得开发的每个环节都可能产生错误，因此软件测试应该贯穿到软件开发的各个阶段中，且需要尽早地和不断地进行。经验表明，测试中存在一种集群现象，即在被测程序段中，若发现的错误数目越多，则残存的错误数目也较多。","analysis":"C"},{"product_id":"20140308222923","ans":"黑盒测试也称为功能测试，在完全不考虑软件的内部结构和特性的情况下来测试软件的外部特性。常用的黑盒测试技术包括等价类划分、边界值分析、错误猜测和因果图的报告。白盒测试也称为结构测试，根据程序的内部结构和逻辑来设计测试用例，对程序的执行路径和过程进行测试，检查是否满足设计的需要。常用的白盒测试技术包括逻辑覆盖和基本路径测试。","analysis":"B"},{"product_id":"20140308223234","ans":"本题考查面向对象设计的原则。开-闭原则(Open-ClosedPrinciple)是面向对象的可复用设计(ObjectOrientedDesign,OOD)的基石。开-闭原则是指一个软件实体应当对扩展开放，对修改关闭，即在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展。满足开-闭原则的系统可以通过扩展己有的软件系统，提供新的能力和行为，以满足对软件的新需求，使软件系统有一定的适应性和灵活性；因为已有的软件模块，特别是最重要的抽象层模块不能再修改，这就使变化中的软件系统有一定的稳定性和延续性；满足开-闭原则的系统具备更好的可复用性与可维护性。在面向对象编程中，通过抽象类及接口，规定了具体类的特征作为抽象层，相对稳定，从而满足“对修改关闭”的要求；而从抽象类导出的具体类可以改变系统的行为，从而满足对扩展开放。里氏代换原则（LiskovSubstitutionPrinciple，LSP)是指一个软件实体如果使用的是—个基类的话，那么一定适用于其子类，而且软件系统觉察不出基类对象和子类对象的区别，也就是说，在软件系统中把基类都替换成它的子类，程序的行为没有变化。但需要注意的是，里氏代换原则中仅仅指出了用子类的对象去代替基类的对象，而反过来的代换则是不成立的。例如，如果一个软件模块中使用的是一个子类对象，那么使用父类对象去代换子类对象则可能产生错误。用一句简单的话概括：任何基类对象可以出现的地方，子类对象一定可以代替基类对象。依赖倒转原则（DependenceInversionPrinciple,DIP)就是要依赖于抽象，而不依赖于实现，或者说要针对接口编程，不要针对实现编程。系统中进行设计和实现的时候应当使用接口和抽象类进行变量类型声明、参数类型声明、方法返回类型说明，以及数据类型的转换等，而不要用具体类进行上述操作。要保证做到这一点，一个具体类应当只实现接口和抽象类中声明过的方法，而不要给出多余的方法。传统的过程性系统的设计办法倾向于使高层次的模块依赖于低层次的模块，抽象层次依赖于具体层次。依赖倒转原则就是把这个不良的依赖关系倒转过来。面向对象设计的重要原则是创建抽象层次，并且从该抽象层次导出具体层次，具体层次给出不同的实现。继承关系就是一种从抽象化到具体化的导出。抽象层包含的应该是应用系统的业务逻辑和宏观的、对整个系统来说重要的战略性决定，而具体层次含有的是一些次要的与实现有关的算法和逻辑，以及战术性的决定，带有一定的偶然性选择。从复用的角度来说，高层抽象的模块是应当复用的，而且是复用的重点，因为它含有一个应用系统最重要的宏观业务逻辑，是较为稳定的部分。而在传统的过程性设计中，复用则侧重于具体层次模块的复用。使用依赖倒转原则时建议不依赖于具体类，即程序中所有的依赖关系都应该终止于抽象类或者接口。尽量做到：任何变量都不应该持有一个指向具体类的指针或者引用；任何类都不应该从具体类派生；任何方法都不应该覆写它的任何基类中的己经实现的方法。","analysis":"B"},{"product_id":"20140308223318","ans":"本题考查面向对象设计的原则。开-闭原则(Open-ClosedPrinciple)是面向对象的可复用设计(ObjectOrientedDesign,OOD)的基石。开-闭原则是指一个软件实体应当对扩展开放，对修改关闭，即在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展。满足开-闭原则的系统可以通过扩展己有的软件系统，提供新的能力和行为，以满足对软件的新需求，使软件系统有一定的适应性和灵活性；因为已有的软件模块，特别是最重要的抽象层模块不能再修改，这就使变化中的软件系统有一定的稳定性和延续性；满足开-闭原则的系统具备更好的可复用性与可维护性。在面向对象编程中，通过抽象类及接口，规定了具体类的特征作为抽象层，相对稳定，从而满足“对修改关闭”的要求；而从抽象类导出的具体类可以改变系统的行为，从而满足对扩展开放。里氏代换原则（LiskovSubstitutionPrinciple，LSP)是指一个软件实体如果使用的是—个基类的话，那么一定适用于其子类，而且软件系统觉察不出基类对象和子类对象的区别，也就是说，在软件系统中把基类都替换成它的子类，程序的行为没有变化。但需要注意的是，里氏代换原则中仅仅指出了用子类的对象去代替基类的对象，而反过来的代换则是不成立的。例如，如果一个软件模块中使用的是一个子类对象，那么使用父类对象去代换子类对象则可能产生错误。用一句简单的话概括：任何基类对象可以出现的地方，子类对象一定可以代替基类对象。依赖倒转原则（DependenceInversionPrinciple,DIP)就是要依赖于抽象，而不依赖于实现，或者说要针对接口编程，不要针对实现编程。系统中进行设计和实现的时候应当使用接口和抽象类进行变量类型声明、参数类型声明、方法返回类型说明，以及数据类型的转换等，而不要用具体类进行上述操作。要保证做到这一点，一个具体类应当只实现接口和抽象类中声明过的方法，而不要给出多余的方法。传统的过程性系统的设计办法倾向于使高层次的模块依赖于低层次的模块，抽象层次依赖于具体层次。依赖倒转原则就是把这个不良的依赖关系倒转过来。面向对象设计的重要原则是创建抽象层次，并且从该抽象层次导出具体层次，具体层次给出不同的实现。继承关系就是一种从抽象化到具体化的导出。抽象层包含的应该是应用系统的业务逻辑和宏观的、对整个系统来说重要的战略性决定，而具体层次含有的是一些次要的与实现有关的算法和逻辑，以及战术性的决定，带有一定的偶然性选择。从复用的角度来说，高层抽象的模块是应当复用的，而且是复用的重点，因为它含有一个应用系统最重要的宏观业务逻辑，是较为稳定的部分。而在传统的过程性设计中，复用则侧重于具体层次模块的复用。使用依赖倒转原则时建议不依赖于具体类，即程序中所有的依赖关系都应该终止于抽象类或者接口。尽量做到：任何变量都不应该持有一个指向具体类的指针或者引用；任何类都不应该从具体类派生；任何方法都不应该覆写它的任何基类中的己经实现的方法。","analysis":"A"},{"product_id":"20140308223359","ans":"本题考查面向对象设计的原则。开-闭原则(Open-ClosedPrinciple)是面向对象的可复用设计(ObjectOrientedDesign,OOD)的基石。开-闭原则是指一个软件实体应当对扩展开放，对修改关闭，即在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展。满足开-闭原则的系统可以通过扩展己有的软件系统，提供新的能力和行为，以满足对软件的新需求，使软件系统有一定的适应性和灵活性；因为已有的软件模块，特别是最重要的抽象层模块不能再修改，这就使变化中的软件系统有一定的稳定性和延续性；满足开-闭原则的系统具备更好的可复用性与可维护性。在面向对象编程中，通过抽象类及接口，规定了具体类的特征作为抽象层，相对稳定，从而满足“对修改关闭”的要求；而从抽象类导出的具体类可以改变系统的行为，从而满足对扩展开放。里氏代换原则（LiskovSubstitutionPrinciple，LSP)是指一个软件实体如果使用的是—个基类的话，那么一定适用于其子类，而且软件系统觉察不出基类对象和子类对象的区别，也就是说，在软件系统中把基类都替换成它的子类，程序的行为没有变化。但需要注意的是，里氏代换原则中仅仅指出了用子类的对象去代替基类的对象，而反过来的代换则是不成立的。例如，如果一个软件模块中使用的是一个子类对象，那么使用父类对象去代换子类对象则可能产生错误。用一句简单的话概括：任何基类对象可以出现的地方，子类对象一定可以代替基类对象。依赖倒转原则（DependenceInversionPrinciple,DIP)就是要依赖于抽象，而不依赖于实现，或者说要针对接口编程，不要针对实现编程。系统中进行设计和实现的时候应当使用接口和抽象类进行变量类型声明、参数类型声明、方法返回类型说明，以及数据类型的转换等，而不要用具体类进行上述操作。要保证做到这一点，一个具体类应当只实现接口和抽象类中声明过的方法，而不要给出多余的方法。传统的过程性系统的设计办法倾向于使高层次的模块依赖于低层次的模块，抽象层次依赖于具体层次。依赖倒转原则就是把这个不良的依赖关系倒转过来。面向对象设计的重要原则是创建抽象层次，并且从该抽象层次导出具体层次，具体层次给出不同的实现。继承关系就是一种从抽象化到具体化的导出。抽象层包含的应该是应用系统的业务逻辑和宏观的、对整个系统来说重要的战略性决定，而具体层次含有的是一些次要的与实现有关的算法和逻辑，以及战术性的决定，带有一定的偶然性选择。从复用的角度来说，高层抽象的模块是应当复用的，而且是复用的重点，因为它含有一个应用系统最重要的宏观业务逻辑，是较为稳定的部分。而在传统的过程性设计中，复用则侧重于具体层次模块的复用。使用依赖倒转原则时建议不依赖于具体类，即程序中所有的依赖关系都应该终止于抽象类或者接口。尽量做到：任何变量都不应该持有一个指向具体类的指针或者引用；任何类都不应该从具体类派生；任何方法都不应该覆写它的任何基类中的己经实现的方法。","analysis":"C"},{"product_id":"20140308223434","ans":"本题考查面向对象设计的原则。开-闭原则(Open-ClosedPrinciple)是面向对象的可复用设计(ObjectOrientedDesign,OOD)的基石。开-闭原则是指一个软件实体应当对扩展开放，对修改关闭，即在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展。满足开-闭原则的系统可以通过扩展己有的软件系统，提供新的能力和行为，以满足对软件的新需求，使软件系统有一定的适应性和灵活性；因为已有的软件模块，特别是最重要的抽象层模块不能再修改，这就使变化中的软件系统有一定的稳定性和延续性；满足开-闭原则的系统具备更好的可复用性与可维护性。在面向对象编程中，通过抽象类及接口，规定了具体类的特征作为抽象层，相对稳定，从而满足“对修改关闭”的要求；而从抽象类导出的具体类可以改变系统的行为，从而满足对扩展开放。里氏代换原则（LiskovSubstitutionPrinciple，LSP)是指一个软件实体如果使用的是—个基类的话，那么一定适用于其子类，而且软件系统觉察不出基类对象和子类对象的区别，也就是说，在软件系统中把基类都替换成它的子类，程序的行为没有变化。但需要注意的是，里氏代换原则中仅仅指出了用子类的对象去代替基类的对象，而反过来的代换则是不成立的。例如，如果一个软件模块中使用的是一个子类对象，那么使用父类对象去代换子类对象则可能产生错误。用一句简单的话概括：任何基类对象可以出现的地方，子类对象一定可以代替基类对象。依赖倒转原则（DependenceInversionPrinciple,DIP)就是要依赖于抽象，而不依赖于实现，或者说要针对接口编程，不要针对实现编程。系统中进行设计和实现的时候应当使用接口和抽象类进行变量类型声明、参数类型声明、方法返回类型说明，以及数据类型的转换等，而不要用具体类进行上述操作。要保证做到这一点，一个具体类应当只实现接口和抽象类中声明过的方法，而不要给出多余的方法。传统的过程性系统的设计办法倾向于使高层次的模块依赖于低层次的模块，抽象层次依赖于具体层次。依赖倒转原则就是把这个不良的依赖关系倒转过来。面向对象设计的重要原则是创建抽象层次，并且从该抽象层次导出具体层次，具体层次给出不同的实现。继承关系就是一种从抽象化到具体化的导出。抽象层包含的应该是应用系统的业务逻辑和宏观的、对整个系统来说重要的战略性决定，而具体层次含有的是一些次要的与实现有关的算法和逻辑，以及战术性的决定，带有一定的偶然性选择。从复用的角度来说，高层抽象的模块是应当复用的，而且是复用的重点，因为它含有一个应用系统最重要的宏观业务逻辑，是较为稳定的部分。而在传统的过程性设计中，复用则侧重于具体层次模块的复用。使用依赖倒转原则时建议不依赖于具体类，即程序中所有的依赖关系都应该终止于抽象类或者接口。尽量做到：任何变量都不应该持有一个指向具体类的指针或者引用；任何类都不应该从具体类派生；任何方法都不应该覆写它的任何基类中的己经实现的方法。","analysis":"D"},{"product_id":"20140308223518","ans":"本题考查面向对象设计的原则。开-闭原则(Open-ClosedPrinciple)是面向对象的可复用设计(ObjectOrientedDesign,OOD)的基石。开-闭原则是指一个软件实体应当对扩展开放，对修改关闭，即在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展。满足开-闭原则的系统可以通过扩展己有的软件系统，提供新的能力和行为，以满足对软件的新需求，使软件系统有一定的适应性和灵活性；因为已有的软件模块，特别是最重要的抽象层模块不能再修改，这就使变化中的软件系统有一定的稳定性和延续性；满足开-闭原则的系统具备更好的可复用性与可维护性。在面向对象编程中，通过抽象类及接口，规定了具体类的特征作为抽象层，相对稳定，从而满足“对修改关闭”的要求；而从抽象类导出的具体类可以改变系统的行为，从而满足对扩展开放。里氏代换原则（LiskovSubstitutionPrinciple，LSP)是指一个软件实体如果使用的是—个基类的话，那么一定适用于其子类，而且软件系统觉察不出基类对象和子类对象的区别，也就是说，在软件系统中把基类都替换成它的子类，程序的行为没有变化。但需要注意的是，里氏代换原则中仅仅指出了用子类的对象去代替基类的对象，而反过来的代换则是不成立的。例如，如果一个软件模块中使用的是一个子类对象，那么使用父类对象去代换子类对象则可能产生错误。用一句简单的话概括：任何基类对象可以出现的地方，子类对象一定可以代替基类对象。依赖倒转原则（DependenceInversionPrinciple,DIP)就是要依赖于抽象，而不依赖于实现，或者说要针对接口编程，不要针对实现编程。系统中进行设计和实现的时候应当使用接口和抽象类进行变量类型声明、参数类型声明、方法返回类型说明，以及数据类型的转换等，而不要用具体类进行上述操作。要保证做到这一点，一个具体类应当只实现接口和抽象类中声明过的方法，而不要给出多余的方法。传统的过程性系统的设计办法倾向于使高层次的模块依赖于低层次的模块，抽象层次依赖于具体层次。依赖倒转原则就是把这个不良的依赖关系倒转过来。面向对象设计的重要原则是创建抽象层次，并且从该抽象层次导出具体层次，具体层次给出不同的实现。继承关系就是一种从抽象化到具体化的导出。抽象层包含的应该是应用系统的业务逻辑和宏观的、对整个系统来说重要的战略性决定，而具体层次含有的是一些次要的与实现有关的算法和逻辑，以及战术性的决定，带有一定的偶然性选择。从复用的角度来说，高层抽象的模块是应当复用的，而且是复用的重点，因为它含有一个应用系统最重要的宏观业务逻辑，是较为稳定的部分。而在传统的过程性设计中，复用则侧重于具体层次模块的复用。使用依赖倒转原则时建议不依赖于具体类，即程序中所有的依赖关系都应该终止于抽象类或者接口。尽量做到：任何变量都不应该持有一个指向具体类的指针或者引用；任何类都不应该从具体类派生；任何方法都不应该覆写它的任何基类中的己经实现的方法。","analysis":"D"},{"product_id":"20140308223551","ans":"本题考查面向对象设计的原则。开-闭原则(Open-ClosedPrinciple)是面向对象的可复用设计(ObjectOrientedDesign,OOD)的基石。开-闭原则是指一个软件实体应当对扩展开放，对修改关闭，即在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展。满足开-闭原则的系统可以通过扩展己有的软件系统，提供新的能力和行为，以满足对软件的新需求，使软件系统有一定的适应性和灵活性；因为已有的软件模块，特别是最重要的抽象层模块不能再修改，这就使变化中的软件系统有一定的稳定性和延续性；满足开-闭原则的系统具备更好的可复用性与可维护性。在面向对象编程中，通过抽象类及接口，规定了具体类的特征作为抽象层，相对稳定，从而满足“对修改关闭”的要求；而从抽象类导出的具体类可以改变系统的行为，从而满足对扩展开放。里氏代换原则（LiskovSubstitutionPrinciple，LSP)是指一个软件实体如果使用的是—个基类的话，那么一定适用于其子类，而且软件系统觉察不出基类对象和子类对象的区别，也就是说，在软件系统中把基类都替换成它的子类，程序的行为没有变化。但需要注意的是，里氏代换原则中仅仅指出了用子类的对象去代替基类的对象，而反过来的代换则是不成立的。例如，如果一个软件模块中使用的是一个子类对象，那么使用父类对象去代换子类对象则可能产生错误。用一句简单的话概括：任何基类对象可以出现的地方，子类对象一定可以代替基类对象。依赖倒转原则（DependenceInversionPrinciple,DIP)就是要依赖于抽象，而不依赖于实现，或者说要针对接口编程，不要针对实现编程。系统中进行设计和实现的时候应当使用接口和抽象类进行变量类型声明、参数类型声明、方法返回类型说明，以及数据类型的转换等，而不要用具体类进行上述操作。要保证做到这一点，一个具体类应当只实现接口和抽象类中声明过的方法，而不要给出多余的方法。传统的过程性系统的设计办法倾向于使高层次的模块依赖于低层次的模块，抽象层次依赖于具体层次。依赖倒转原则就是把这个不良的依赖关系倒转过来。面向对象设计的重要原则是创建抽象层次，并且从该抽象层次导出具体层次，具体层次给出不同的实现。继承关系就是一种从抽象化到具体化的导出。抽象层包含的应该是应用系统的业务逻辑和宏观的、对整个系统来说重要的战略性决定，而具体层次含有的是一些次要的与实现有关的算法和逻辑，以及战术性的决定，带有一定的偶然性选择。从复用的角度来说，高层抽象的模块是应当复用的，而且是复用的重点，因为它含有一个应用系统最重要的宏观业务逻辑，是较为稳定的部分。而在传统的过程性设计中，复用则侧重于具体层次模块的复用。使用依赖倒转原则时建议不依赖于具体类，即程序中所有的依赖关系都应该终止于抽象类或者接口。尽量做到：任何变量都不应该持有一个指向具体类的指针或者引用；任何类都不应该从具体类派生；任何方法都不应该覆写它的任何基类中的己经实现的方法。","analysis":"C"},{"product_id":"20140308223723","ans":"本题考查组合和聚合的基本概念。组合（Composition)和聚合（Aggregation)都是关联（Association)的特殊种类。组合是一种很强的“拥有”关系，部分和整体的生命周期通常一样。组合成的新对象完全支配其组成部分，包括它们的创建和湮灭等。一个组合关系的成分对象是不能被另一个组合构成的对象共享的。聚合同样表示“拥有”关系，但其程度不如组合强，有时候“部分”对象可以在不同的“整体”对象之间共享，并且“部分”对象的生命周期也可以与“整体”对象不同，甚至“部分”对象可以脱离“整体”对象而单独存在。一般而言，组合是值的合成（AggregationbyValue)，而聚合是引用的合成（AggregationbyReference)。","analysis":"B"},{"product_id":"20140308223806","ans":"本题考查组合和聚合的基本概念。组合（Composition)和聚合（Aggregation)都是关联（Association)的特殊种类。组合是一种很强的“拥有”关系，部分和整体的生命周期通常一样。组合成的新对象完全支配其组成部分，包括它们的创建和湮灭等。一个组合关系的成分对象是不能被另一个组合构成的对象共享的。聚合同样表示“拥有”关系，但其程度不如组合强，有时候“部分”对象可以在不同的“整体”对象之间共享，并且“部分”对象的生命周期也可以与“整体”对象不同，甚至“部分”对象可以脱离“整体”对象而单独存在。一般而言，组合是值的合成（AggregationbyValue)，而聚合是引用的合成（AggregationbyReference)。","analysis":"A"},{"product_id":"20140308223850","ans":"本题考查组合和聚合的基本概念。组合（Composition)和聚合（Aggregation)都是关联（Association)的特殊种类。组合是一种很强的“拥有”关系，部分和整体的生命周期通常一样。组合成的新对象完全支配其组成部分，包括它们的创建和湮灭等。一个组合关系的成分对象是不能被另一个组合构成的对象共享的。聚合同样表示“拥有”关系，但其程度不如组合强，有时候“部分”对象可以在不同的“整体”对象之间共享，并且“部分”对象的生命周期也可以与“整体”对象不同，甚至“部分”对象可以脱离“整体”对象而单独存在。一般而言，组合是值的合成（AggregationbyValue)，而聚合是引用的合成（AggregationbyReference)。","analysis":"D"},{"product_id":"20140308224053","ans":"本题考查面向对象设计中的设计模式。题中的类图是观察者设计模式，在该设计模式中的Subject和Observer分别表示抽象的被观察者和观察者。通常，一个观察者（Observer)观察一个被观察者（Subject)，而一个被观察者可以被多个观察者关注。当Subject的状态发生变化时，Subject将通知所有的Observer，告知状态已经发生了变化，而Observer收到通知后，将查询Subject的状态。","analysis":"D"},{"product_id":"20140308224123","ans":"本题考查面向对象设计中的设计模式。题中的类图是观察者设计模式，在该设计模式中的Subject和Observer分别表示抽象的被观察者和观察者。通常，一个观察者（Observer)观察一个被观察者（Subject)，而一个被观察者可以被多个观察者关注。当Subject的状态发生变化时，Subject将通知所有的Observer，告知状态已经发生了变化，而Observer收到通知后，将查询Subject的状态。","analysis":"B"},{"product_id":"20140308224314","ans":"","analysis":"D"},{"product_id":"20140308224423","ans":"本题考查程序设计的基础知识。可视化程序设计是以“所见即所得”的编程思想为原则，力图实现编程工作的可视化，即随时可以看到结果，程序与结果的调整同步。与传统的编程方式相比，“可视化程序设计”仅通过直观的操作方式即可完成界面的设计工作。可视化程序设计语言的特点主要表现在两个方面：一是基于面向对象的思想，引入了控件的概念和事件驱动；二是程序开发过程一般遵循以下步骤，即先进行界面的绘制工作，再基于事件编写程序代码，以响应鼠标、键盘的各种动作。可视化程序设计最大的优点是设计人员可以不用编写或只需编写很少的程序代码，就能完成应用程序的设计，这样就能极大地提高设计人员的工作效率。","analysis":"A"},{"product_id":"20140308224732","ans":"本题考查程序设计语言的基础知识。汇编语言源程序中的每一条指令语句在源程序汇编时都要产生可供计算机执行的指令代码（即目标代码）。伪指令语句用于指示汇编程序如何汇编源程序，常用于为汇编程序提供以下信息：该源程序如何分段，有哪些逻辑段在程序段中，哪些是当前段，它们分别由哪个段寄存器指向；定义了哪些数据，存储单元是如何分配的等。伪指令语句除定义的具体数据要生成目标代码外，其他均没有对应的目标代码。伪指令语句的这些命令功能是由汇编程序在汇编源程序时，通过执行一段程序来完成的，而不是在运行目标程序时实现的。目前主要有两种不同标准的汇编语言指令格式：Windows下的汇编语言基本上都遵循Intel风格的语法,如MASM、NASM，而Unix/Linux下的汇编语言基本上都遵循AT&T风格的语法。汇编语言语句的通用格式如下：汇编语言语句格式中的“名称”并不是所有语句都必需的。如果语句中带有“名称”，则大多数情况下“名称”都表示的是内存中某一存储单元的地址，也就是其后面各项在内存中存放的第一个存储单元的地址。","analysis":"B"},{"product_id":"20140308231848","ans":"本题考查数据库概念结构设计中的基础知识。根据局部应用设计好各局部E-R图之后，就可以对各个局部E-R图进行合并。合并的目的在于解决分E-R图中相互间存在的冲突，消除分E-R图之间存在的信息冗余，使之成为能够被全系统所有用户共同理解和接受的统一的、精炼的全局概念模型。分E-R图之间的冲突主要分为结构冲突、属性冲突和命名冲突三类。因为结构冲突是指同一实体在不同的分E-R图中有不同的属性，同—对象在某一分E-R图中被抽象为实体而在另一分E-R图中又被抽象为属性，需要统一。因为属性冲突是指同一属性可能会存在于不同的分E-R图，由于设计人员不同或是出发点不同，对属性的类型、取值范围、数据单位等可能会不一致，这些属性对应的数据将来只能以一种形式在计算机中存储，这就需要在设计阶段进行统一。因为命名冲突是指相同意义的属性在不同的分E-R图上有着不同的命名，或是名称相同的属性在不同的分E-R图中代表着不同的意义，这些也要进行统一。","analysis":"D"},{"product_id":"20140308232846","ans":"本题考查关系运算和E-R图的基本概念。简单属性是原子的、不可再分的。复合属性可以细分为更小的部分（即划分为别的属性）。有时用户希望访问整个属性，有时希望访问属性的某个成分，那么在模式设计时可采用复合属性。本题学生实体集Students的“家庭住址”可以进一步分为邮编、省、市、街道。在大多数情况下，定义的属性对于一个特定的实体都只有单独的一个值。例如，对于一个特定的学生，只对应一个学生号、学生姓名，这样的属性叫做单值属性。但是，在某些特定情况下，一个属性可能对应一组值。例如，学生可能有0个、1个或多个亲属，那么学生的亲属的姓名可能有多个。这样的属性称为多值属性。为了将数据库模式设计得更合理。","analysis":"C"},{"product_id":"20140308232945","ans":"本题考查关系运算和E-R图的基本概念。试题（53)应该将家庭成员、关系及联系电话加上学生号设计成为一个独立的实体。","analysis":"D"},{"product_id":"20140308233308","ans":"本题主要考查关系模式规范化方面的相关知识。因为根据函数依赖集F可知（时间，学生）可以决定关系R中的全部属性，故关系模式R的一个主键是（时间，学生)。","analysis":"D"},{"product_id":"20140308233409","ans":"本题主要考查关系模式规范化方面的相关知识。因为根据函数依赖集F可知，R中的每个非主属性完全函数依赖于（时间，学生），所以R是2NF。","analysis":"B"},{"product_id":"20140308233450","ans":"本题主要考查关系模式规范化方面的相关知识。因为R2(学生，课程，成绩）的主键为（学生，课程），而R2的每个属性都不传递依赖于R2的任何键，所以R2是BCNF。","analysis":"C"},{"product_id":"20140308233704","ans":"本题考查数据结构的基础知识。从题目中的图可以推导出，队头元素的指针为(Q.rear-Q.len+1+M)%M。","analysis":"D"},{"product_id":"20140308234007","ans":"本题考查数据结构的基础知识。.树的带权路径长度为树中所有叶子节点的带权路径长度之和。哈夫曼树是指权值为w1，w2,…，wn的n个叶子节点的二叉树中带权路径长度最小的二叉树。构造最优二叉树的哈夫曼算法如下：(1)根据给定的n个权值{w1,w2,…，wn},构成n棵二叉树的集合F={T1，T2,…，Tn}，其中每棵二叉树Ti中只有一个带权为wi的根节点，其左右子树均空。在F中选取两棵权值最小的二叉树作为左、右子树构造一棵新的二叉树，置新构造二叉树的根节点的权值为其左、右子树根节点的权值之和。从F中删除这两棵树，同时将新得到的二叉树加入到F中。重复（2)、（3)，直到F中只含一棵树时为止。这棵树便是最优二叉树（哈夫曼树）。从以上叙述可知，哈夫曼树中权值最小的两个节点互为兄弟节点。","analysis":"C"},{"product_id":"20140308234153","ans":"本题考查数据结构的基础知识。拓扑排序是将AOV网中所有顶点排成一个线性序列的过程，并且该序列满足：若在AOV网中从顶点vi到vj有一条路径，则在该线性序列中，顶点vi必然在顶点vj之前。对AOV网进行拓扑排序的方法如下：(1)在AOV网中选择一个入度为零（没有前驱）的顶点且输出它；(2)从网中删除该顶点及与该顶点有关的所有边；(3)重复上述两步，直至网中不存在入度为零的顶点为止。本题中只有序列“654321”可由上述过程导出。对有向图进行拓扑排序的结果会有两种情况：一种是所有顶点已输出，此时整个拓扑排序完成，说明网中不存在回路；另一种是尚有未输出的顶点，剩余的顶点均有前驱顶点，表明网中存在回路。","analysis":"A"},{"product_id":"20140308234413","ans":"本题考查数据结构的基础知识。对序列15,23，38,47,55,62,88,95，102，123进行二分查找的过程可用以下二叉树之一描述，其中，左图描述的是除2以后向下取整时的判定过程，右图则对应除2以后向上取整时的判定过程从上图可知，二分法查找95时，参与比较的元素依次为55、95，或者62、102、95。","analysis":"D"},{"product_id":"20140308234545","ans":"本题考查数据结构的基础知识。设树中的节点总数为n、分支数目为m，那么n=5+4+2+叶子节点数，m=5X1+4X2+2X3。在树中，节点总数等于分支数目加上1，即n=m+1。因此，叶子节点数=5X1+4X2+2X3+1-5-4-2=9","analysis":"B"},{"product_id":"20140308234706","ans":"","analysis":"A"},{"product_id":"20140308235631","ans":"","analysis":"C"},{"product_id":"20140308235813","ans":"该题考查算法分析的基础知识，以及对算法中循环结构的掌握。分析算法时间复杂度并不是确定算法运行的具体时间的长短，而是执行某个（某些）操作的次数。该题要求计算count++语句执行的次数，根据上述C程序段可知，i=1时执行1次，i=2时执行2次，i=4时执行4次，i=8时执行8次，总共执行次数为1+2+4+8=15次。","analysis":"A"},{"product_id":"20140308235918","ans":"","analysis":"B"},{"product_id":"20140309000212","ans":"本题考查公钥体系的概念和应用。1976年斯坦福大学的Diffie和Heilman提出了使用不同的密钥进行加密和解密的公钥加密算法。设P为明文，C为密文，E为公钥控制的加密算法，D为私钥控制的解密算法，这些参数满足下列3个条件：（1）D(E(P))=P（2）不能由E导出D（3）选择明文攻击（选择任意明文-密文对以确定未知的密钥）不能破解E加密时计算C=E(P)，解密时计算P=D(C)。加密和解密是互逆的。用公钥加密、私钥解密，可实现保密通信；用私钥加密、公钥解密，可实现数字签名。","analysis":"A"},{"product_id":"20140309000235","ans":"本题考查公钥体系的概念和应用。1976年斯坦福大学的Diffie和Heilman提出了使用不同的密钥进行加密和解密的公钥加密算法。设P为明文，C为密文，E为公钥控制的加密算法，D为私钥控制的解密算法，这些参数满足下列3个条件：（1）D(E(P))=P（2）不能由E导出D（3）选择明文攻击（选择任意明文-密文对以确定未知的密钥）不能破解E加密时计算C=E(P)，解密时计算P=D(C)。加密和解密是互逆的。用公钥加密、私钥解密，可实现保密通信；用私钥加密、公钥解密，可实现数字签名。","analysis":"D"},{"product_id":"20140309000328","ans":"本题考查考生对HTTP命令的掌握程度。GET是HTTP协议提供的少数操作方法中的一种，其含义是读一个网页。HEAD命令用于读取网页头信息。POST命令用于把消息加到指定的网页上。没有READ这一命令。","analysis":"B"},{"product_id":"20140309000459","ans":"本题考查数据交换网的基础知识。帧中继（FrameRelay，FR)是为克服X.25交换网的缺陷、提髙传输性能而发展起来的高速分组交换技术。帧中继网络不进行差错和流量控制，并且通过流水方式进行交换，所以比X.25网络的通信开销更少，传输速度更快。帧中继提供面向连接的虚电路服务，因而比DDN专线更能提高通信线路利用率，用户负担的通信费用也更低廉。在帧中继网中，用户的信息速率可以在一定的范围内变化，从而既可以适应流式业务，又可以适应突发式业务，这使得帧中继成为远程传输的理想形式。","analysis":"C"},{"product_id":"20140309000633","ans":"本题考查HTML文档中<table>标记常用的属性定义。Align用于定义文本的对齐方式。","analysis":"A"},{"product_id":"20140309001024","ans":"无论何时当人们发现自己在鸡尾酒会上向别人解释，比方说他们“在计算机领域”或“在远程通信领域”或“在电子基金转账领域”工作时，他们都会沉浸在高科技的幻觉中，这就暗示他们是高科技王国里的一分子。在我们看来，他们一般都不是。在这些领域中，只有那些有根本性突破的研究人员是在做高科技业务，我们所有其他局外人只是他们工作成果的应用者。我们用计算机和其他新技术组件来开发产品或者组织我们的事务，因为是以团队和项目以及其他紧密结合的工作小组的形式来从事这项工作的，主要在从事人类交流的业务。我们的成功源自良好的、与所有此项工作的参与者之间的人际交往，同样我们的失败原因也是由于糟糕的人际交往。我们倾向于集中精力做技术方面，而不是人际关系方面工作的主要原因，不是因为它更重要，而是因为它更容易做。与弄清楚贺瑞斯为什么恐惧不安，或者苏珊为什么在公司只工作了几个月就对公司不满意之类的事情相比，安装一个新的磁盘驱动器肯定是微不足道的。人际交往是很复杂的，并且就效果而言从来都不会是很明晰和清楚的，但是它们比工作的任何其他方面更重要。如果你发现自己关注的是技术而不是社会方面的问题，你就相当于在一条黑暗的街上丢失了钥匙，却到邻近的另一条街上去寻找。因为“这条街上的灯比那条街上的灯要亮一些”。","analysis":"C"},{"product_id":"20140309001158","ans":"无论何时当人们发现自己在鸡尾酒会上向别人解释，比方说他们“在计算机领域”或“在远程通信领域”或“在电子基金转账领域”工作时，他们都会沉浸在高科技的幻觉中，这就暗示他们是高科技王国里的一分子。在我们看来，他们一般都不是。在这些领域中，只有那些有根本性突破的研究人员是在做高科技业务，我们所有其他局外人只是他们工作成果的应用者。我们用计算机和其他新技术组件来开发产品或者组织我们的事务，因为是以团队和项目以及其他紧密结合的工作小组的形式来从事这项工作的，主要在从事人类交流的业务。我们的成功源自良好的、与所有此项工作的参与者之间的人际交往，同样我们的失败原因也是由于糟糕的人际交往。我们倾向于集中精力做技术方面，而不是人际关系方面工作的主要原因，不是因为它更重要，而是因为它更容易做。与弄清楚贺瑞斯为什么恐惧不安，或者苏珊为什么在公司只工作了几个月就对公司不满意之类的事情相比，安装一个新的磁盘驱动器肯定是微不足道的。人际交往是很复杂的，并且就效果而言从来都不会是很明晰和清楚的，但是它们比工作的任何其他方面更重要。如果你发现自己关注的是技术而不是社会方面的问题，你就相当于在一条黑暗的街上丢失了钥匙，却到邻近的另一条街上去寻找。因为“这条街上的灯比那条街上的灯要亮一些”。","analysis":"A"},{"product_id":"20140309001420","ans":"无论何时当人们发现自己在鸡尾酒会上向别人解释，比方说他们“在计算机领域”或“在远程通信领域”或“在电子基金转账领域”工作时，他们都会沉浸在高科技的幻觉中，这就暗示他们是高科技王国里的一分子。在我们看来，他们一般都不是。在这些领域中，只有那些有根本性突破的研究人员是在做高科技业务，我们所有其他局外人只是他们工作成果的应用者。我们用计算机和其他新技术组件来开发产品或者组织我们的事务，因为是以团队和项目以及其他紧密结合的工作小组的形式来从事这项工作的，主要在从事人类交流的业务。我们的成功源自良好的、与所有此项工作的参与者之间的人际交往，同样我们的失败原因也是由于糟糕的人际交往。我们倾向于集中精力做技术方面，而不是人际关系方面工作的主要原因，不是因为它更重要，而是因为它更容易做。与弄清楚贺瑞斯为什么恐惧不安，或者苏珊为什么在公司只工作了几个月就对公司不满意之类的事情相比，安装一个新的磁盘驱动器肯定是微不足道的。人际交往是很复杂的，并且就效果而言从来都不会是很明晰和清楚的，但是它们比工作的任何其他方面更重要。如果你发现自己关注的是技术而不是社会方面的问题，你就相当于在一条黑暗的街上丢失了钥匙，却到邻近的另一条街上去寻找。因为“这条街上的灯比那条街上的灯要亮一些”。","analysis":"B"},{"product_id":"20140309001556","ans":"无论何时当人们发现自己在鸡尾酒会上向别人解释，比方说他们“在计算机领域”或“在远程通信领域”或“在电子基金转账领域”工作时，他们都会沉浸在高科技的幻觉中，这就暗示他们是高科技王国里的一分子。在我们看来，他们一般都不是。在这些领域中，只有那些有根本性突破的研究人员是在做高科技业务，我们所有其他局外人只是他们工作成果的应用者。我们用计算机和其他新技术组件来开发产品或者组织我们的事务，因为是以团队和项目以及其他紧密结合的工作小组的形式来从事这项工作的，主要在从事人类交流的业务。我们的成功源自良好的、与所有此项工作的参与者之间的人际交往，同样我们的失败原因也是由于糟糕的人际交往。我们倾向于集中精力做技术方面，而不是人际关系方面工作的主要原因，不是因为它更重要，而是因为它更容易做。与弄清楚贺瑞斯为什么恐惧不安，或者苏珊为什么在公司只工作了几个月就对公司不满意之类的事情相比，安装一个新的磁盘驱动器肯定是微不足道的。人际交往是很复杂的，并且就效果而言从来都不会是很明晰和清楚的，但是它们比工作的任何其他方面更重要。如果你发现自己关注的是技术而不是社会方面的问题，你就相当于在一条黑暗的街上丢失了钥匙，却到邻近的另一条街上去寻找。因为“这条街上的灯比那条街上的灯要亮一些”。","analysis":"A"},{"product_id":"20140309001701","ans":"无论何时当人们发现自己在鸡尾酒会上向别人解释，比方说他们“在计算机领域”或“在远程通信领域”或“在电子基金转账领域”工作时，他们都会沉浸在高科技的幻觉中，这就暗示他们是高科技王国里的一分子。在我们看来，他们一般都不是。在这些领域中，只有那些有根本性突破的研究人员是在做高科技业务，我们所有其他局外人只是他们工作成果的应用者。我们用计算机和其他新技术组件来开发产品或者组织我们的事务，因为是以团队和项目以及其他紧密结合的工作小组的形式来从事这项工作的，主要在从事人类交流的业务。我们的成功源自良好的、与所有此项工作的参与者之间的人际交往，同样我们的失败原因也是由于糟糕的人际交往。我们倾向于集中精力做技术方面，而不是人际关系方面工作的主要原因，不是因为它更重要，而是因为它更容易做。与弄清楚贺瑞斯为什么恐惧不安，或者苏珊为什么在公司只工作了几个月就对公司不满意之类的事情相比，安装一个新的磁盘驱动器肯定是微不足道的。人际交往是很复杂的，并且就效果而言从来都不会是很明晰和清楚的，但是它们比工作的任何其他方面更重要。如果你发现自己关注的是技术而不是社会方面的问题，你就相当于在一条黑暗的街上丢失了钥匙，却到邻近的另一条街上去寻找。因为“这条街上的灯比那条街上的灯要亮一些”。","analysis":"B"}]},{"paperId":"82","field":"20101","question_list":[{"product_id":"20140306192401","ans":"本题考查CPU中相关寄存器的基础知识。指令寄存器（IR)用来保存当前正在执行的指令。当执行一条指令时，先把它从内存取到数据寄存器（DR)中，然后再传送至IR。为了执行任何给定的指令，必须对操作码进行测试，以便识别所要求的操作。指令译码器（ID)就是做这项工作的。指令寄存器中操作码字段的输出就是指令译码器的输入。操作码一经译码后，即可向操作控制器发出具体操作的特定信号。地址寄存器（AR)用来保存当前CPU所访问的内存单元的地址。由于在内存和CPU之间存在着操作速度上的差别，所以必须使用地址寄存器来保持地址信息，直到内存的读/写操作完成为止。为了保证程序指令能够连续地执行下去，CPU必须具有某些手段来确定下一条指令的地址。而程序计数器正起到这种作用，所以通常又称为指令计数器。在程序开始执行前，必须将它的起始地址，即程序的一条指令所在的内存单元地址送入PC,因此程序计数器(PC)的内容即是从内存提取的第一条指令的地址。当执行指令时，CPU将自动修改PC的内容，即每执行一条指令PC增加一个量，这个量等于指令所含的字节数，以便使其保持的总是将要执行的下一条指令的地址。由于大多数指令都是按顺序来执行的，所以修改的过程通常只是简单的对PC加1。","analysis":"B"},{"product_id":"20140306192758","ans":"","analysis":"D"},{"product_id":"20140306192936","ans":"本题考查中断基础知识。按照是否可以被屏蔽，可将中断分为两大类：不可屏蔽中断（又叫非屏蔽中断）和可屏蔽中断。不可屏蔽中断源一旦提出请求，CPU必须无条件响应，而对可屏蔽中断源的请求，CPU可以响应，也可以不响应。典型的非屏蔽中断源的例子是电源掉电，一旦出现，必须立即无条件地响应，否则进行其他任何工作都是没有意义的。典型的可屏蔽中断源的例子是打印机中断，CPU对打印机中断请求的响应可以快一些，也可以慢一些，因为让打印机等待是完全可以的。对于软中断，它不受中断允许标志位（IF位）的影响，所以属于非屏蔽中断范畴。","analysis":"C"},{"product_id":"20140306193237","ans":"本题考查逻辑运算基础知识。用真值表验证如下:","analysis":"B"},{"product_id":"20140306193329","ans":"本题考查指令系统基础知识。程序被加载到内存后开始运行，当CPU执行一条指令时，先把它从内存储器取到缓冲寄存器DR中，再送入IR暂存，指令译码器根据IR的内容产生各种微操作指令，控制其他的组成部件工作，完成所需的功能。程序计数器（PC)具有寄存信息和计数两种功能，又称为指令计数器。程序的执行分两种情况，一是顺序执行，二是转移执行。在程序开始执行前，将程序的起始地址送入PC,该地址在程序加载到内存时确定，因此PC的内容即是程序第一条指令的地址。执行指令时，CPU将自动修改PC的内容，以便使其保持的总是将要执行的下一条指令的地址。由于大多数指令都是按顺序来执行的，所以修改的过程通常只是简单地对PC加1。当遇到转移指令时，后继指令的地址根据当前指令的地址加上一个向前或向后转移的位移量得到，或者根据转移指令给出的直接转移地址得到。","analysis":"C"},{"product_id":"20140306193441","ans":"本题考查计算机系统基础知识。计算机系统的运算速度受多种因素的影响，64位微处理器可同时对64位数据进行运算，但不能说其速度是32位微处理器的2倍。","analysis":"C"},{"product_id":"20140306193629","ans":"OutlookExpress有以下一些优点：•可以脱机处理邮件，有效利用联机时间，降低了上网费用。•可以管理多个邮件账号，在同一个窗口中使用多个邮件账号。•可以使用通讯簿存储和检索电子邮件地址。•在邮件中添加个人签名或信纸。•发送和接收安全邮件。","analysis":"D"},{"product_id":"20140306193719","ans":"本题考查计算机病毒方面的基础知识。计算机病毒的分类方法有许多种，按照最通用的区分方式，即根据其感染的途径以及采用的技术区分，计算机病毒可分为文件型计算机病毒、引导型计算机病毒、宏病毒和目录型计算机病毒。文件型计算机病毒感染可执行文件（包括EXE和COM文件）。引导型计算机病毒影响软盘或硬盘的引导扇区。目录型计算机病毒能够修改硬盘上存储的所有文件的地址。宏病毒感染的对象是使用某些程序创建的文本文档、数据库、电子表格等文件，从文件名可以看出Macro.Melissa是一种宏病毒。","analysis":"D"},{"product_id":"20140306194047","ans":"本题考查计算机病毒方面的基础知识。计算机病毒的分类方法有许多种，按照最通用的区分方式，即根据其感染的途径以及采用的技术区分，计算机病毒可分为文件型计算机病毒、引导型计算机病毒、宏病毒和目录型计算机病毒。文件型计算机病毒感染可执行文件（包括EXE和COM文件）。引导型计算机病毒影响软盘或硬盘的引导扇区。目录型计算机病毒能够修改硬盘上存储的所有文件的地址。宏病毒感染的对象是使用某些程序创建的文本文档、数据库、电子表格等文件，从文件名可以看出Macro.Melissa是一种宏病毒。","analysis":"B"},{"product_id":"20140306194512","ans":"本题考查知识产权基本知识，即专利管理部门授予专利权的基本原则。我国授予专利权采用先申请原则，即两个以上的申请人分别就同一项发明创造申请专利权的，专利权授予最先申请的人。如果两个以上申请人在同一日分别就同样的发明创造申请专利的，应当在收到专利行政管理部门的通知后自行协商确定申请人。如果协商不成，专利局将驳回所有申请人的申请，即所有申请人均不能取得专利权。所以，先申请人可以获得专利申请权。","analysis":"B"},{"product_id":"20140306194719","ans":"本题考查知识产权知识，即软件知识产权归属。公民为完成法人或者其他组织工作任务所创作的作品是职务作品。职务作品可以是作品分类中的任何一种形式，如文字作品、电影作品、计算机软件都可能由于为执行工作任务而创作，属于职务作品。其著作权归属分两种情形：(1)—般职务作品一般职务作品的著作权由作者享有。单位或其他组织享有在其业务范围内优先使用的权利，期限为2年。单位的优先使用权是专有的，未经单位同意，作者不得许可第三人以与单位使用的相同方式使用该作品。在作品完成两年内，如单位在其业务范围内不使用，作者可以要求单位同意由第三人以与单位使用的相同方式使用，所获报酬，由作者与单位按约定的比例分配。(2)特殊的职务作品所谓特殊职务作品一是指是利用法人或者其他组织的物质技术条件创作，并由法人或者其他组织承担责任的工程设计、产品设计图纸、地图、计算机软件等职务作品；二是指法律、行政法规规定或者合同约定著作权由法人或者其他组织享有的职务作品。对于特殊职务作品，作者享有署名权，其他权利由法人或非法人单位享有。本题涉及软件知识产权，王某为完成公司指派的工作任务所开发的软件是职务软件，职务软件包括软件文档和源程序。该软件文档属于特殊职务作品，依据著作权法，对于特殊职务作品，除署名权以外，著作权的其他权利由公司享有。","analysis":"A"},{"product_id":"20140306195058","ans":"MPEG是MovingPictureExpertGroup的简称，最初是指由国际标准化组织（ISO)和国际电工委员会（IEC)联合组成的一个研究视频和音频编码标准的专家组。同时MPEG也用来命名这个小组所负责开发的一系列音、视频编码标准和多媒体应用标准。这个专家组至今为止已制定和制定中的标准包括MPEG-1、MPEG-2、MPEG-4、MPEG-7和MPEG-21标准。其中MPEG-1、MPEG-2和MPEG-4主要针对音、视频编码技术，而MPEG-7是多媒体内容描述接口标准，MPEG-21是多媒体应用框架标准。VCD使用了MPEG-1标准作为其音、视频信息压缩编码方案，而MPEG-2标准中的音、视频压缩编码技术被应用到DVD中。","analysis":"A"},{"product_id":"20140306195139","ans":"MPEG是MovingPictureExpertGroup的简称，最初是指由国际标准化组织（ISO)和国际电工委员会（IEC)联合组成的一个研究视频和音频编码标准的专家组。同时MPEG也用来命名这个小组所负责开发的一系列音、视频编码标准和多媒体应用标准。这个专家组至今为止已制定和制定中的标准包括MPEG-1、MPEG-2、MPEG-4、MPEG-7和MPEG-21标准。其中MPEG-1、MPEG-2和MPEG-4主要针对音、视频编码技术，而MPEG-7是多媒体内容描述接口标准，MPEG-21是多媒体应用框架标准。VCD使用了MPEG-1标准作为其音、视频信息压缩编码方案，而MPEG-2标准中的音、视频压缩编码技术被应用到DVD中。","analysis":"B"},{"product_id":"20140306195215","ans":"MPEG是MovingPictureExpertGroup的简称，最初是指由国际标准化组织（ISO)和国际电工委员会（IEC)联合组成的一个研究视频和音频编码标准的专家组。同时MPEG也用来命名这个小组所负责开发的一系列音、视频编码标准和多媒体应用标准。这个专家组至今为止已制定和制定中的标准包括MPEG-1、MPEG-2、MPEG-4、MPEG-7和MPEG-21标准。其中MPEG-1、MPEG-2和MPEG-4主要针对音、视频编码技术，而MPEG-7是多媒体内容描述接口标准，MPEG-21是多媒体应用框架标准。VCD使用了MPEG-1标准作为其音、视频信息压缩编码方案，而MPEG-2标准中的音、视频压缩编码技术被应用到DVD中。","analysis":"D"},{"product_id":"20140306195326","ans":"本题考查基于构件的软件开发基础知识。基于构件的软件开发，主要强调在构建软件系统时复用已有的软件“构件”，在检索到可以使用的构件后，需要针对新系统的需求对构件进行合格性检验、适应性修改，然后集成到新系统中。","analysis":"C"},{"product_id":"20140306195435","ans":"本题考查面向对象软件开发过程的基础知识。采用面向对象的软件开发，通常有面向对象分析、面向对象设计、面向对象实现。面向对象分析是为了获得对应用问题的理解，其主要任务是抽取和整理用户需求并建立问题域精确模型。面向对象设计是采用协作的对象、对象的属性和方法说明软件解决方案的一种方式，强调的是定义软件对象和这些软件对象如何协作来满足需求，延续了面向对象分析。面向对象实现主要强调釆用面向对象程序设计语言实现系统。面向对象测试是根据规范说明来验证系统设计的正确性。","analysis":"D"},{"product_id":"20140306195533","ans":"本题考查软件测试方法中白盒测试的基础知识。白盒测试也称为结构测试，根据程序的内部结构和逻辑来设计测试用例，对程序的执行路径和过程进行测试，检查是否满足设计的需要。白盒测试常用的技术涉及不同覆盖标准，在测试时需根据指定的覆盖标准确定测试数据。","analysis":"A"},{"product_id":"20140306195721","ans":"本题考查软件项目计划基础知识。软件项目计划的一个重要内容是安排进度，常用的方法有Gantt图和PERT图。Gantt图用水平条状图描述，它以日历为基准描述项目任务，可以清楚地表示任务的持续时间和任务之间的并行，但是不能清晰地描述各个任务之间的依赖关系。PERT图是一种网络模型，描述一个项目任务之间的关系。可以明确表达任务之间的依赖关系，即哪些任务完成后才能开始另一些任务，以及如期完成整个工程的关键路径。","analysis":"D"},{"product_id":"20140306195928","ans":"图中任务流1→2→5→7→9的持续时间是15，1→2→5→8→9的持续时间是13，1→3→6→8→9的持续时间是8,4→6→8→9的持续时间为9。所以项目关键路径长度为15。事件6在非关键路径上，其后的任务需要时间为5,所以最晚开始时间=15-5=10。","analysis":"C"},{"product_id":"20140306200248","ans":"","analysis":"B"},{"product_id":"20140306200450","ans":"","analysis":"D"},{"product_id":"20140306200543","ans":"本题考查程序语言基础知识。对C源程序进行编译时，需建立符号表，其作用是记录源程序中各个符号（变量等)的必要信息，以辅助语义的正确性检查和代码生成，在编译过程中需要对符号表进行快速有效地查找、插入、修改和删除等操作。符号表的建立可以始于词法分析阶段，也可以放到语法分析和语义分析阶段，但符号表的使用有时会延续到目标代码的运行阶段。","analysis":"A"},{"product_id":"20140306200741","ans":"因为Send原语是发送原语，如果系统采用信箱通信方式，那么当进程调用Send原语被设置成“等信箱”状态时，意味着指定的信箱存满了信件，无可用空间。","analysis":"D"},{"product_id":"20140306200839","ans":"假设并发进程数：m每个进程都需要资源数：a则不发生死锁的最少数目计算公式为：(a-1)*m+1此题中，m=6，a=2，则答案为（2-1）*6+1=7","analysis":"B"},{"product_id":"20140306201626","ans":"根据题意，页面变换表中状态位等于0和1分别表示页面不在内存或在内存，所以0、2和4号页面在内存。当访问的页面3不在内存时，系统应该首先淘汰未被访问的页面，因为根据程序的局部性原理，最近未被访问的页面下次被访问的概率更小；如果页面最近都被访问过，应该先淘汰未修改过的页面。因为未修改过的页面内存与辅存一致，故淘汰时无需写回辅存，使系统页面置换代价小。经上述分析，0、2和4号页面都是最近被访问过的，但2和4号页面都被修改过而0号页面未修改过，故应该淘汰0号页面。","analysis":"A"},{"product_id":"20140306201843","ans":"根据题意，页面大小为4KB，逻辑地址为十六进制2C25H其页号为2,页内地址为C25H，查页表后可知页帧号（物理块号）为4,该地址经过变换后，其物理地址应为页帧号4拼上页内地址C25H，即十六进制4C25H。","analysis":"C"},{"product_id":"20140306202101","ans":"系统读记录的时间为27/9=3ms。对第一种情况：系统读出并处理记录R1之后，将转到记录R3的开始处，所以为了读出记录R2,磁盘必须再转一圈，需要27ms(转一圈）的时间。这样，处理9个记录的总时间应为222ms。因为处理前8个记录（即R1，R2,…，R8)的总时间再加上读R9时间：8X27ms+6ms=222ms。","analysis":"C"},{"product_id":"20140306202212","ans":"对于第二种情况，若对信息进行分布优化的结果如下所示:从上表可以看出，当读出记录R1并处理结束后，磁头刚好转至R2记录的开始处，立即就可以读出并处理，因此处理9个记录的总时间为：9X(3ms(读记录）+3ms(处理记录））=9X6ms=54ms","analysis":"B"},{"product_id":"20140306202310","ans":"本题考查软件变更管理和配置管理的基础知识。软件变更控制是变更管理的重要内容，要有效进行变更控制，需要借助配置数据库和基线的概念。配置数据库一般包括开发库、受控库和产品库。","analysis":"C"},{"product_id":"20140306202508","ans":"本题考查软件设计原则的基础知识。软件设计时需要遵循抽象、模块化、信息隐蔽和模块独立原则。耦合性和内聚性是模块独立性的两个定性标准，在划分软件系统模块时，尽量做到高内聚、低耦合，提高模块的独立性。","analysis":"B"},{"product_id":"20140306202625","ans":"本题考查软件能力成熟度集成模型的基础知识。能力成熟度集成模型CMMI是CMM模型的最新版本，基于连续式表述的CMMI共有6个（0〜5)能力等级，对应于未完成级、已执行级、已管理级、已定义级、量化管理级、优化级。每个能力等级对应到一个一般目标，以及一组一般执行方法和特定方法。能力等级0指未执行过程，表明过程域的一个或多个特定目标没有被满足；能力等级1指过程通过转化可识别的输入工作产品，产生可识别的输出工作产品，关注于过程域的特定目标的完成；能力等级2指过程作为已管理的过程制度化，针对单个过程实例的能力；能力等级3指过程作为已定义的过程制度化，关注过程的组织级标准化和部署；能力等级4指过程作为定量管理的过程制度化；能力等级5指过程作为优化的过程制度化，表明过程得到很好地执行且持续得到改进。","analysis":"C"},{"product_id":"20140306205232","ans":"本题考查软件开发过程的基础知识。统一过程（UP)定义了初启阶段、精化阶段、构建阶段、移交阶段和产生阶段，每阶段达到某个里程碑时结束。其中初启阶段的里程碑是生命周期目标，精化阶段的里程碑是生命周期架构，构建阶段的里程碑是初始运作功能，移交阶段的里程碑是产品发布。","analysis":"B"},{"product_id":"20140306205344","ans":"本题考查软件程序设计的基础知识。程序的三种基本控制结构是顺序结构、选择结构和重复结构。","analysis":"B"},{"product_id":"20140306205456","ans":"本题考查软件配置管理的基础知识。软件配置管理是一组管理整个软件生存期各阶段中变更的活动，主要包括变更标识、变更控制和版本控制。","analysis":"C"},{"product_id":"20140306205638","ans":"本题考查软件测试基础知识。单元测试侧重于模块中的内部处理逻辑和数据结构，所有模块都通过了测试之后，把模块集成起来仍可能会出现穿越模块的数据丢失、模块之间的相互影响等问题，因此，需要模块按系统设计说明书的要求组合起来进行测试，即集成测试，以发现模块之间协作的问题。一个功能模块Ml中的函数F1有一个参数需要接收指向整型的指针，但是在功能模块M2中调用F1时传递了一个整型值，这种模块之间传递参数的错误，在集成测试中最可能测试出来。","analysis":"C"},{"product_id":"20140306210114","ans":"本题考查软件度量的基础知识。McCabe度量法是一种基于程序控制流的复杂性度量方法。采用这种方法先圃出程序图，然后采用公式V(G)=m-n+2计算环路复杂度。其中，m是图G中弧的个数，n是图G中的结点数。图中结点数为7,边数为11，所以环路复杂度为11-7+2=6。","analysis":"C"},{"product_id":"20140306210342","ans":"本题考査面向对象中继承基本概念。面向对象技术中，继承是父类和子类之间共享数据和方法的机制。这是类之间的一种关系，在定义和实现一个类的时候，可以在一个已经存在的类的基础上来进行，把这个已经存在的类所定义的内容作为自己的内容，并加入若干新的内容。可以存在多重继承的概念，但不同的程序设计语言可以有自己的规定。","analysis":"D"},{"product_id":"20140306210528","ans":"本题考查面向对象中的基本概念。在收到消息时，对象要予以响应。不同的对象收到同一消息可以产生完全不同的结果，这一现象叫做多态（polymorphism)。在使用多态的时候，用户可以发送一个通用的消息，而实现的细节则由接收对象自行决定。这样，同一消息就可以调用不同的方法。绑定是一个把过程调用和响应调用所需要执行的代码加以结合的过程。在一般的程序设计语言中，绑定是在编译时进行的，叫做静态绑定。动态绑定则是在运行时进行的，因此，一个给定的过程调用和代码的结合直到调用发生时才进行。动态绑定是和类的继承以及多态相联系的。在继承关系中，子类是父类的一个特例，所以父类对象可以出现的地方，子类对象也可以出现。因此在运行过程中，当一个对象发送消息请求服务时，要根据接收对象的具体情况将请求的操作与实现的方法进行连接，即动态绑定。","analysis":"B"},{"product_id":"20140306210721","ans":"本题考查面向对象中的基本概念。在收到消息时，对象要予以响应。不同的对象收到同一消息可以产生完全不同的结果，这一现象叫做多态（polymorphism)。在使用多态的时候，用户可以发送一个通用的消息，而实现的细节则由接收对象自行决定。这样，同一消息就可以调用不同的方法。绑定是一个把过程调用和响应调用所需要执行的代码加以结合的过程。在一般的程序设计语言中，绑定是在编译时进行的，叫做静态绑定。动态绑定则是在运行时进行的，因此，一个给定的过程调用和代码的结合直到调用发生时才进行。动态绑定是和类的继承以及多态相联系的。在继承关系中，子类是父类的一个特例，所以父类对象可以出现的地方，子类对象也可以出现。因此在运行过程中，当一个对象发送消息请求服务时，要根据接收对象的具体情况将请求的操作与实现的方法进行连接，即动态绑定。","analysis":"D"},{"product_id":"20140306210820","ans":"本题考查面向对象中的基本概念。在收到消息时，对象要予以响应。不同的对象收到同一消息可以产生完全不同的结果，这一现象叫做多态（polymorphism)。在使用多态的时候，用户可以发送一个通用的消息，而实现的细节则由接收对象自行决定。这样，同一消息就可以调用不同的方法。绑定是一个把过程调用和响应调用所需要执行的代码加以结合的过程。在一般的程序设计语言中，绑定是在编译时进行的，叫做静态绑定。动态绑定则是在运行时进行的，因此，一个给定的过程调用和代码的结合直到调用发生时才进行。动态绑定是和类的继承以及多态相联系的。在继承关系中，子类是父类的一个特例，所以父类对象可以出现的地方，子类对象也可以出现。因此在运行过程中，当一个对象发送消息请求服务时，要根据接收对象的具体情况将请求的操作与实现的方法进行连接，即动态绑定。","analysis":"C"},{"product_id":"20140306210948","ans":"本题考查面向对象分析的基本概念。面向对象分析包含5个活动：认定对象、组织对象、描述对象间的相互作用、定义对象的操作、定义对象的内部信息。认定对象是指：在应用领域中，按自然存在的实体确立对象。在定义域中，首先将自然存在的“名词”作为一个对象，这通常是研究问题定义域实体的良好开始。通过实体间的关系寻找对象常常没有问题，而困难在于寻找（选择）系统关心的实质性对象。实质性对象是系统稳定性的基础。例如在银行应用系统中，实质性对象应包含客户账务、清算等，而门卫值班表不是实质性对象，甚至可不包含在该系统中。组织对象含义是：分析对象间的关系，将相关对象抽象成类，其目的是为了简化关联对象，利用类的继承性建立具有继承性层次的类结构。抽象类时可从对象间的操作或一个对象是另一个对象的一部分来考虡;如房子由门和窗构成，门和窗是房子类的子类。由对象抽象类，通过相关类的继承构造类层次，所以说系统的行为和信息间的分析过程是一种迭代表征过程。描述对象间的相互作用是：描述出各对象在应用系统中的关系。如一个对象是另一个对象的一部分，一个对象与其他对象间的通信关系等。这样可以完整地描述每个对象的环境，由一个对象解释另一个对象，以及一个对象如何生成另一个对象，最后得到对象的界面描述。实现对象及其相互关系应该归入到系统的实现阶段，不属于分析阶段的任务。","analysis":"C"},{"product_id":"20140306211130","ans":"本题考查面向对象设计与面向对象分析的基本概念。面向对象分析与设计是面向对象软件开发过程中的两个重要阶段，面向对象分析产生分析模型，该分析模型可以使用UML表达，面向对象设计以分析模型为基础，继续对分析模型进行精化，得到设计模型，其表达仍然可以采用UML建模语言。","analysis":"A"},{"product_id":"20140306211253","ans":"本题考查面向对象方法中的设计模式知识。'题中的类图是抽象工厂设计模式，该设计模式的意图是提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。使用抽象工厂设计模式的常见情形是：一个系统要独立于其产品的创建、组合和表示时；一个系统要由多个产品系列中的一个来配置时；当需要强调一系列相关的产品对象的设计以便进行联合使用时；当提供一个产品类库，而只想显示它们的接口而不是实现时。对于希望使用已经存在的类，但其接口不符合需求的情形，应当考虑桥接设计模式。","analysis":"C"},{"product_id":"20140306211332","ans":"本题考查面向对象方法中的设计模式知识。'题中的类图是抽象工厂设计模式，该设计模式的意图是提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。使用抽象工厂设计模式的常见情形是：一个系统要独立于其产品的创建、组合和表示时；一个系统要由多个产品系列中的一个来配置时；当需要强调一系列相关的产品对象的设计以便进行联合使用时；当提供一个产品类库，而只想显示它们的接口而不是实现时。对于希望使用已经存在的类，但其接口不符合需求的情形，应当考虑桥接设计模式。","analysis":"D"},{"product_id":"20140306211519","ans":"本题考查UML类图之间类与类之间的关系。UML类图中类与类之间的关系有五种：依赖、关联、聚合、组合与继承。依赖是几种关系中最弱的一种关系，通常，使用类库就是其中的一种关系。聚合与组合都表示了整体和部分的关系。组合的程度比聚合高，当整体对象消失时，部分对象也随之消失，则属于组合关系，当整体对象消失而部分对象依然可以存在并继续被使用时，则属于聚合关系。依赖是一种弱关联，比如题中的a用到b的类；而关联是语义级别上的，比如b以属性的形式出现在a中。","analysis":"A"},{"product_id":"20140306211607","ans":"本题考查UML类图之间类与类之间的关系。UML类图中类与类之间的关系有五种：依赖、关联、聚合、组合与继承。依赖是几种关系中最弱的一种关系，通常，使用类库就是其中的一种关系。聚合与组合都表示了整体和部分的关系。组合的程度比聚合高，当整体对象消失时，部分对象也随之消失，则属于组合关系，当整体对象消失而部分对象依然可以存在并继续被使用时，则属于聚合关系。","analysis":"D"},{"product_id":"20140306211637","ans":"本题考查UML类图之间类与类之间的关系。UML类图中类与类之间的关系有五种：依赖、关联、聚合、组合与继承。依赖是几种关系中最弱的一种关系，通常，使用类库就是其中的一种关系。聚合与组合都表示了整体和部分的关系。组合的程度比聚合高，当整体对象消失时，部分对象也随之消失，则属于组合关系，当整体对象消失而部分对象依然可以存在并继续被使用时，则属于聚合关系。","analysis":"C"},{"product_id":"20140306211843","ans":"本题考查语言处理基础知识。编译和解释是语言处理的两种基本方式。编译过程包括词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成等阶段，以及符号表管理和出错处理模块。解释过程在词法、语法和语义分析方面与编译程序的工作原理基本相同，但是在运行用户程序时，它直接执行源程序或源程序的内部形式。这两种语言处理程序的根本区别是：在编译方式下，机器上运行的是与源程序等价的目标程序，源程序和编译程序都不再参与目标程序的执行过程；而在解释方式下，解释程序和源程序（或其某种等价表示）要参与到程序的运行过程中，运行程序的控制权在解释程序。解释器翻译源程序时不产生独立的目标程序，而编译器则需将源程序翻译成独立的目标程序。","analysis":"C"},{"product_id":"20140306212046","ans":"本题考查程序语言基础知识。HTML(HypertextMarkedLanguage，超文本标记语言），用于互联网的信息表示。用HTML编写的超文本文档称为HTML文档，它能独立于各种操作系统平台(如UNIX,Windows等）。HTML文档是纯文本文档，可以使用记事本、写字板等编辑工具来编写HTML文件，其文件（文档）的扩展名是.html或.htm，它们需要通过WWW浏览器进行解释并显示出效果。XML(ExtensibleMarkupLanguage,可扩展的标记语言）1.0标准于1998年2月10日发布，被认为是继HTML和Java编程语言之后的又一个里程碑式的Internet技术。XML丰富了HTML的描述功能，可以描述非常复杂的Web页面，如复杂的数字表达式、化学方程式等。XML的特点是结构化、自描述、可扩展和浏览器自适应等。用于WAP的标记语言就是WML(WirelessMarkupLanguage),其语法跟XML一样，是XML的子集。PHP(HypertextPreprocessor)是一种在服务器端执行的、嵌入HTML文档的脚本语言，其语言风格类似于C语言，被网站编程人员广泛运用。","analysis":"D"},{"product_id":"20140306212453","ans":"","analysis":"B"},{"product_id":"20140306212558","ans":"需求分析阶段的任务是：对现实世界要处理的对象（组织、部门、企业等）进行详细调查，在了解现行系统的概况，确定新系统功能的过程中，确定系统边界、收集支持系统目标的基础数据及其处理方法。逻辑设计阶段的任务之一是对关系模式进一步的规范化处理。因为生成的初始关系模式并不能完全符合要求，会有数据冗余、更新异常存在，这就需要根据规范化理论对关系模式进行分解，以消除冗余和更新异常。不过有时根据处理要求，可能还需要增加部分冗余以满足处理要求。逻辑设计阶段的任务就需要作部分关系模式的处理，分解、合并或增加冗余属性，提高存储效率和处理效率。","analysis":"A"},{"product_id":"20140306212905","ans":"本题考查关系代数运算方面的基础知识。","analysis":"B"},{"product_id":"20140306213226","ans":"根据题意，零件P关系的主键为（零件号，供应商）。","analysis":"B"},{"product_id":"20140306213426","ans":"试题要求查询各种零件的平均单价、最高单价与最低单价之间差距，因此，首先需要在结果列中的空（54)填写“零件名称，AVG(单价)，MAX(单价）-MIN(单价）”。其次必须用分组语句按零件号分组，故空（55)应填写“GROUPBY零件号”。完整的SQL语句为：SELECT零件号，零件名称，AVG(单价），MAX(单价）-MIN(单价）FROMPGROUPBY零件号;","analysis":"A"},{"product_id":"20140306213532","ans":"试题要求查询各种零件的平均单价、最高单价与最低单价之间差距，因此，首先需要在结果列中的空（54)填写“零件名称，AVG(单价)，MAX(单价）-MIN(单价）”。其次必须用分组语句按零件号分组，故空（55)应填写“GROUPBY零件号”。完整的SQL语句为：SELECT零件号，零件名称，AVG(单价），MAX(单价）-MIN(单价）FROMPGROUPBY零件号;","analysis":"D"},{"product_id":"20140306213851","ans":"为了解决关系P存在冗余以及插入异常和删除异常等问题，需要将零件关系P分解。用户无法查询某零件由哪些供应商供应，原因是分解是有损连接的，且不保持函数依赖。","analysis":"C"},{"product_id":"20140306214552","ans":"","analysis":"D"},{"product_id":"20140306215115","ans":"","analysis":"A"},{"product_id":"20140306215306","ans":"本题考查数据结构基础知识。二叉树具有以下性质：度为2的结点（双分支结点）数比度为0(叶子结点）数正好少1。而根据最优二叉树（哈夫曼树）的构造过程可知，最优二叉树中只有度为2和0的结点，因此，其结点总数为2n-1。","analysis":"B"},{"product_id":"20140306215514","ans":"本题考查数据结构基础知识。是栈一种后进先出的数据结构。将一个元素序列逆置时，可以使用栈也可以不用。链表结点的申请和释放次序与应用要求相关，不存在“先申请后释放”的操作要求。可执行程序的装入与卸载，也不存在“后进先出”的操作要求。对于函数的递归调用与返回，一定是后被调用执行的先返回。","analysis":"A"},{"product_id":"20140306215611","ans":"本题考查数据结构基础知识。当序列基本有序时，直接插入排序过程中元素比较的次数较少，当序列为逆序时，元素的比较次数最多。","analysis":"C"},{"product_id":"20140306215708","ans":"本题考查数据结构基础知识。装填因子a表示了哈希表的装满程度，显然，a越大发生冲突的可能性就越大。","analysis":"B"},{"product_id":"20140306215903","ans":"本题考查数据结构基础知识。根据关键字序列构造二叉排序树的基本过程是，若需插入的关键字大于树根，则插入到右子树上，若小于树根，则插入到左子树上，若为空树，则作为树根结点。","analysis":"C"},{"product_id":"20140306220224","ans":"本题考查算法分析与设计基础知识。根据题中给出的递归定义式进行推导，可得T(n)=n+n-1+…+2+1，因此时间复杂度为O(n2)。","analysis":"B"},{"product_id":"20140306220624","ans":"本题考查数据结构与算法基础知识。设尾指针的单向循环链表（不含头结点）如下图所示：设结点的指针域为next，新结点的指针为s，则在尾指针所指结点后插入结点的操作为：也就是插入操作的时间复杂度为O(1)。要删除尾指针所指结点，必须通过遍历操作找到尾结点的前驱结点，其操作序列如下：也就是说，删除操作的时间复杂度为O(n)。","analysis":"C"},{"product_id":"20140306220801","ans":"IP地址块222.125.80.128/26留给主机的地址码只有6位，26-2=62。这些地址都采用222.125.80.10xxxxxx的形式，其中最小的地址是222.125.80.10000001，即222.125.80.129，最大的是222.125.80.10111110，即222.125.80.190。","analysis":"C"},{"product_id":"20140306220839","ans":"IP地址块222.125.80.128/26留给主机的地址码只有6位，26-2=62。这些地址都采用222.125.80.10xxxxxx的形式，其中最小的地址是222.125.80.10000001，即222.125.80.129，最大的是222.125.80.10111110，即222.125.80.190。","analysis":"B"},{"product_id":"20140306220957","ans":"IP地址块222.125.80.128/26留给主机的地址码只有6位，26-2=62。这些地址都采用222.125.80.10xxxxxx的形式，其中最小的地址是222.125.80.10000001，即222.125.80.129，最大的是222.125.80.10111110，即222.125.80.190。","analysis":"B"},{"product_id":"20140306221312","ans":"本题考查HTML语言的基础知识。在HTML语言中，可以通过使用<mailto>标签定义一个指向电子邮件地址的超级链接，通过该链接可以在Internet中发送电子邮件。","analysis":"D"},{"product_id":"20140306221411","ans":"本试题考查POP3服务器的配置。POP3服务器默认端口为110。","analysis":"D"},{"product_id":"20140306221653","ans":"观察一下编程人员，你可能会发现，同厨师一样，某项任务的计划进度，可能受限于顾客要求的紧迫程度，但紧迫程度无法控制实际的完成情况。就像约好在两分钟内完成一个煎蛋，看上去可能进行得非常好。但当它无法在两分钟内完成时，顾客只能选择等待或者生吃煎蛋。软件顾客的情况类似。我现在并不认为软件经理内在的勇气和坚持不如厨师，或者不如其他工程经理。但为了满足顾客期望的日期而造成的不合理进度安排，在软件领域中却比其他的任何工程领域要普遍得多。而且，非量化方法的采用，少得可怜的数据支持，加上完全借助软件经理的直觉，这样的方式很难生产出健壮可靠和规避风险的估计。显然我们需要两种解决方案。开发并推行生产率图表、缺陷率、估算规则等等，整个组织最终会从这些数据的共享上获益。或者在基于可靠基础的估算出现之前，项目经理需要挺直腰杆并坚持他们的估计，确信自己的经验和直觉总比从期望得出的估计要强得多。","analysis":"B"},{"product_id":"20140306221812","ans":"观察一下编程人员，你可能会发现，同厨师一样，某项任务的计划进度，可能受限于顾客要求的紧迫程度，但紧迫程度无法控制实际的完成情况。就像约好在两分钟内完成一个煎蛋，看上去可能进行得非常好。但当它无法在两分钟内完成时，顾客只能选择等待或者生吃煎蛋。软件顾客的情况类似。我现在并不认为软件经理内在的勇气和坚持不如厨师，或者不如其他工程经理。但为了满足顾客期望的日期而造成的不合理进度安排，在软件领域中却比其他的任何工程领域要普遍得多。而且，非量化方法的采用，少得可怜的数据支持，加上完全借助软件经理的直觉，这样的方式很难生产出健壮可靠和规避风险的估计。显然我们需要两种解决方案。开发并推行生产率图表、缺陷率、估算规则等等，整个组织最终会从这些数据的共享上获益。或者在基于可靠基础的估算出现之前，项目经理需要挺直腰杆并坚持他们的估计，确信自己的经验和直觉总比从期望得出的估计要强得多。","analysis":"C"},{"product_id":"20140306221909","ans":"观察一下编程人员，你可能会发现，同厨师一样，某项任务的计划进度，可能受限于顾客要求的紧迫程度，但紧迫程度无法控制实际的完成情况。就像约好在两分钟内完成一个煎蛋，看上去可能进行得非常好。但当它无法在两分钟内完成时，顾客只能选择等待或者生吃煎蛋。软件顾客的情况类似。我现在并不认为软件经理内在的勇气和坚持不如厨师，或者不如其他工程经理。但为了满足顾客期望的日期而造成的不合理进度安排，在软件领域中却比其他的任何工程领域要普遍得多。而且，非量化方法的采用，少得可怜的数据支持，加上完全借助软件经理的直觉，这样的方式很难生产出健壮可靠和规避风险的估计。显然我们需要两种解决方案。开发并推行生产率图表、缺陷率、估算规则等等，整个组织最终会从这些数据的共享上获益。或者在基于可靠基础的估算出现之前，项目经理需要挺直腰杆并坚持他们的估计，确信自己的经验和直觉总比从期望得出的估计要强得多。","analysis":"D"},{"product_id":"20140306221959","ans":"观察一下编程人员，你可能会发现，同厨师一样，某项任务的计划进度，可能受限于顾客要求的紧迫程度，但紧迫程度无法控制实际的完成情况。就像约好在两分钟内完成一个煎蛋，看上去可能进行得非常好。但当它无法在两分钟内完成时，顾客只能选择等待或者生吃煎蛋。软件顾客的情况类似。我现在并不认为软件经理内在的勇气和坚持不如厨师，或者不如其他工程经理。但为了满足顾客期望的日期而造成的不合理进度安排，在软件领域中却比其他的任何工程领域要普遍得多。而且，非量化方法的采用，少得可怜的数据支持，加上完全借助软件经理的直觉，这样的方式很难生产出健壮可靠和规避风险的估计。显然我们需要两种解决方案。开发并推行生产率图表、缺陷率、估算规则等等，整个组织最终会从这些数据的共享上获益。或者在基于可靠基础的估算出现之前，项目经理需要挺直腰杆并坚持他们的估计，确信自己的经验和直觉总比从期望得出的估计要强得多。","analysis":"B"},{"product_id":"20140306222036","ans":"观察一下编程人员，你可能会发现，同厨师一样，某项任务的计划进度，可能受限于顾客要求的紧迫程度，但紧迫程度无法控制实际的完成情况。就像约好在两分钟内完成一个煎蛋，看上去可能进行得非常好。但当它无法在两分钟内完成时，顾客只能选择等待或者生吃煎蛋。软件顾客的情况类似。我现在并不认为软件经理内在的勇气和坚持不如厨师，或者不如其他工程经理。但为了满足顾客期望的日期而造成的不合理进度安排，在软件领域中却比其他的任何工程领域要普遍得多。而且，非量化方法的采用，少得可怜的数据支持，加上完全借助软件经理的直觉，这样的方式很难生产出健壮可靠和规避风险的估计。显然我们需要两种解决方案。开发并推行生产率图表、缺陷率、估算规则等等，整个组织最终会从这些数据的共享上获益。或者在基于可靠基础的估算出现之前，项目经理需要挺直腰杆并坚持他们的估计，确信自己的经验和直觉总比从期望得出的估计要强得多。","analysis":"A"}]},{"paperId":"84","field":"20092","question_list":[{"product_id":"20140311215101","ans":"本题考查计算机硬件组成基础知识。CPU是计算机的控制中心，主要由运算器、控制器、寄存器组和内部总线等部件组成。控制器由程序计数器、指令寄存器、指令译码器、时序产生器和操作控制器组成，它是发布命令的“决策机构”，即完成协调和指挥整个计算机系统的操作。它的主要功能有：从内存中取出一条指令，并指出下一条指令在内存中的位置；对指令进行译码或测试，并产生相应的操作控制信号，以便启动规定的动作；指挥并控制CPU、内存和输入输出设备之间数据的流动。程序计数器（PC)是专用寄存器，具有寄存信息和计数两种功能，又称为指令计数器，在程序开始执行前，将程序的起始地址送入PC,该地址在程序加载到内存时确定，因此PC的初始内容即是程序第一条指令的地址。执行指令时，CPU将自动修改PC的内容，以便使其保持的总是将要执行的下一条指令的地址。由于大多数指令都是按顺序执行的，因此修改的过程通常只是简单地对PC加1。当遇到转移指令时，后继指令的地址根据当前指令的地址加上一个向前或向后转移的位移量得到，或者根据转移指令给出的直接转移的地址得到。","analysis":"B"},{"product_id":"20140311215205","ans":"本题考查指令系统和计算机体系结构基础知识。CISC(ComplexInstructionSetComputer,复杂指令集计算机）的基本思想是：进一步增强原有指令的功能，用更为复杂的新指令取代原先由软件子程序完成的功能，实现软件功能的硬件化，导致机器的指令系统越来越庞大而复杂。CISC计算机一般所含的指令数目至少300条以上，有的甚至超过500条。RISC(ReducedInstructionSetComputer,精简指令集计算机）的基本思想是：通过减少指令总数和简化指令功能，降低硬件设计的复杂度，使指令能单周期执行，并通过优化编译提高指令的执行速度，采用硬布线控制逻辑优化编译程序。在20世纪70年代末开始兴起，导致机器的指令系统进一步精炼而简单。","analysis":"A"},{"product_id":"20140311215602","ans":"本题考查数据表示基础知识。为了提高运算的精度，需要充分地利用尾数的有效数位，通常采取浮点数规格化形式，即规定尾数的最高数位必须是一个有效值，即1/2<|F|<1。在尾数用补码表示时，规格化浮点数应满足尾数最高数位与符号位不同，即当1/2≤∣F∣<1时，应有0.1xx...x形式；当-1≤M<-1/2时，应有1.0xx...x形式。需要注意的是，当M=-1/2时，对于原码来说是规格化数，而对于补码来说不是规格化数。两个浮点数进行相加运算时，首先需要对阶（使它们的阶码一致），然后再进行尾数的相加处理。","analysis":"C"},{"product_id":"20140311215640","ans":"本题考查数据表示基础知识。为了提高运算的精度，需要充分地利用尾数的有效数位，通常采取浮点数规格化形式，即规定尾数的最高数位必须是一个有效值，即1/2<|F|<1。在尾数用补码表示时，规格化浮点数应满足尾数最高数位与符号位不同，即当1/2≤∣F∣<1时，应有0.1xx...x形式；当-1≤M<-1/2时，应有1.0xx...x形式。需要注意的是，当M=-1/2时，对于原码来说是规格化数，而对于补码来说不是规格化数。两个浮点数进行相加运算时，首先需要对阶（使它们的阶码一致），然后再进行尾数的相加处理。","analysis":"D"},{"product_id":"20140311220034","ans":"本题考查校验码基础知识。一个编码系统中任意两个合法编码（码字）之间不同的二进数位数称为这两个码字的码距，而整个编码系统中任意两个码字的最小距离就是该编码系统的码距。为了使一个系统能检查和纠正一个差错，码间最小距离必须至少是3。海明码是一种可以纠正一位差错的编码，是利用奇偶性来检错和纠错的校验方法。海明码的基本意思是给传输的数据增加r个校验位，从而增加两个合法消息（合法码字）的不同位的个数（海明距离）。假设要传输的信息有m位，则经海明编码的码字就有n=m+r位。循环冗余校验码(CRC)编码方法是在k位信息码后再拼接r位的校验码，形成长度为n位的编码，其特点是检错能力极强且开销小，易于用编码器及检测电路实现。在数据通信与网络中，通常k相当大，由一千甚至数千数据位构成一帧，而后采用CRC码产生r位的校验位。它只能检测出错误，而不能纠正错误。一般取r=16,标准的16位生成多项式有CRC-16=x16+x15+x2+1和CRC-CCITT=x16+x12+x5+1。一般情况下，r位生成多项式产生的CRC码可检测出所有的双错、奇数位错和突发长度小于等于r的突发错。用于纠错目的的循环码的译码算法比较复杂。","analysis":"A"},{"product_id":"20140311220158","ans":"本题考查高速缓存基础知识。Cache是一个高速小容量的临时存储器，可以用髙速的静态存储器(SRAM)芯片实现，可以集成到CPU芯片内部，或者设置在CPU与内存之间，用于存储CPU最经常访问的指令或者操作数据。Cache的出现是基于两种因素：首先是由于CPU的速度和性能提高很快而主存速度较低且价格高，其次是程序执行的局部性特点。因此，才将速度比较快而容量有限的SRAM构成Cache，目的在于尽可能发挥CPU的高速度。很显然，要尽可能发挥CPU的高速度，就必须用硬件实现其全部功能。","analysis":"B"},{"product_id":"20140311220248","ans":"网络安全体系设计是逻辑设计工作的重要内容之一，数据库容灾属于系统安全和应用安全考虑范畴。","analysis":"D"},{"product_id":"20140311220333","ans":"本题考查防火墙相关知识。包过滤防火墙对数据包的过滤依据包括源IP地址、源端口号、目标IP地址和目标端口号。","analysis":"C"},{"product_id":"20140311220506","ans":"本题考査数字证书相关知识点。数字证书是由权威机构CA证书授权(CertificateAuthority)中心发行的，能提供在Internet上进行身份验证的一种权威性电子文档，人们可以在因特网交往中用它来证明自己的身份和识别对方的身份。数字证书包含版本、序列号、签名算法标识符、签发人姓名、有效期、主体名和主体公钥信息等并附有CA的签名，用户获取网站的数字证书后通过验证CA的签名来确认数字证书的有效性，从而验证网站的真伪。在用户与网站进行安全通信时，用户发送数据时使用网站的公钥（从数字证书中获得）加密，收到数据时使用网站的公钥验证网站的数字签名，网站利用自身的私钥对发送的消息签名和对收到的消息解密。","analysis":"A"},{"product_id":"20140311220656","ans":"专利法明确规定，智力活动的规则和方法不取得专利权。智力活动规则和方法是直接作用于人的思维，与产业生产中的技术活动不发生直接关系，并不是对自然规律的利用，不属于技术方案。通常，智力活动规则和方法是一些人为的规则，如管理规则、游戏规则、统计方法、分类方法和计算方法等。算法被认为是一种数学公式，反映的是自然法则和逻辑思维过程，属于智力活动规则和方法，不能受到专利法的保护。算法对于计算机软件而言极其重要，是计算机程序的基础，计算机软件总是离不开算法。因此，计算机软件本身属于智力活动规则和方法的范畴，不能够授予专利权。无论是源程序还是目标程序，它体现的是智力活动的规则和方法。因此仅以单纯的计算机程序为主题的发明创造是不能获得专利权的。随着计算机技术的发展，不能授予专利权的智力活动规则和方法与能够授予专利权的方法之间的界线比较模糊了。例如，抽象出一种生产过程的数学模式，设计一种算法，通过予以运行用于控制该生产过程就能够获得专利保护。也就是说，智力活动规则和方法本身不被授予专利权，但进行智力活动的机器设备、装置或者根据智力活动规则和方法而设计制造的仪器、装置等都可以获得专利保护。即软件和硬件或者工业产品结合并表现为机器、装置或者为达到某种结果表现为方法时，软件可成为专利保护的对象。","analysis":"D"},{"product_id":"20140311220807","ans":"软件许可使用一般有独占许可使用、独家许可使用和普通许可使用三种形式。独占许可使用，许可的是专有使用权，实施独占许可使用后，软件著作权人不得将软件使用权授予第三方，软件著作权人自己不能使用该软件；独家许可使用，许可的是专有使用权，实施独家许可使用后，软件著作权人不得将软件使用权授予第三方，软件著作权人自己可以使用该软件；普通许可使用，许可的是非专有使用权，实施普通许可使用后，软件著作权人可以将软件使用权授予第三方，软件著作权人自己可以使用该软件。","analysis":"A"},{"product_id":"20140311221017","ans":"通常所说的“媒体（Media)”包括两重含义：一是指信息的物理载体，即存储和传递信息的实体，如手册、磁盘、光盘、磁带以及相关的播放设备等（本题只涉及存储信息)；二是指承载信息的载体，即信息的表现形式（或者说传播形式)，如文字、声音、图像、动画和视频等，即CCITT定义的存储媒体和表示媒体。表示媒体又可以分为三种类型：视觉类媒体（如位图图像、矢量图形、图表、符号、视频和动画等)、听觉类媒体(如音响、语音和音乐等）和触觉类媒体（如点、位置跟踪，力反馈与运动反馈等)。视觉和听觉类媒体是信息传播的内容，触觉类媒体是实现人机交互的手段。","analysis":"B"},{"product_id":"20140311221327","ans":"本题考查多媒体基础知识（图像深度）。图像深度是指存储每个像素所用的位数，也是用来度量图像分辨率的。像素深度确定彩色图像的每个像素可能有的颜色数，或者确定灰度图像的每个像素可能有的灰度级数。如一幅图像的图像深度为b位，则该图像的最多颜色数或灰度级为2b种。显然，表示一个像素颜色的位数越多，它能表达的颜色数或灰度级就越多。例如，只有1个分量的单色图像，若每个像素有8位，则最大灰度数目为28=256;—幅彩色图像的每个像素用R、G、B三个分量表示，若3个分量的像素位数分别为4、4、2,则最大颜色数目为24+4+2=210=1024,就是说像素的深度为10位，每个像素可以是210种颜色中的一种。表示一个像素的位数越多，它能表达的颜色数目就越多，它的深度就越深。","analysis":"C"},{"product_id":"20140311221534","ans":"矢量图形是用一系列计算机指令来描述和记录一幅图的内容，即通过指令描述构成一幅图的所有直线、曲线、圆、圆弧、矩形等图元的位置、维数和形状，也可以用更为复杂的形式表示图像中曲面、光照和材质等效果。矢量图法实质上是用数学的方式（算法和特征）来描述一幅图形图像，在处理图形图像时根据图元对应的数学表达式进行编辑和处理。在屏幕上显示一幅图形图像时，首先要解释这些指令，然后将描述图形图像的指令转换成屏幕上显示的形状和颜色。编辑矢量图的软件通常称为绘图软件，如适于绘制机械图、电路图的AutoCAD软件等。这种软件可以产生和操作矢量图的各个成分，并对矢量图形进行移动、缩放、叠加、旋转和扭曲等变换。编辑图形时将指令转变成屏幕上所显示的形状和颜色，显示时也往往能看到绘图的过程。由于所有的矢量图形部分都可以用数学的方法加以描述，从而使得计算机可以对其进行任意放大、缩小、旋转、变形、扭曲、移动和叠加等变换，而不会破坏图像的画面。但是，用矢量图形格式表示复杂图像（如人物、风景照片），并且要求很高时，将需要花费大量的时间进行变换、着色和处理光照效果等。因此，矢量图形主要用于表示线框型的图画、工程制图和美术字等。位图图像是指用像素点来描述的图。图像一般是用摄像机或扫描仪等输入设备捕捉实际场景画面，离散化为空间、亮度、颜色（灰度）的序列值，即把一幅彩色图或灰度图分成许许多多的像素（点），每个像素用若干二进制位来指定该像素的颜色、亮度和属性。位图图像在计算机内存中由一组二进制位组成，这些位定义图像中每个像素点的颜色和亮度。图像适合于表现比较细腻，层次较多，色彩较丰富，包含大量细节的图像，并可直接、快速地在屏幕上显示出来。但占用存储空间较大，一般需要进行数据压缩。","analysis":"A"},{"product_id":"20140311221632","ans":"本题考查结构化分析方法中图形工具的作用。数据流图摆脱系统的物理内容，在逻辑上描述系统的功能、输入、输出和数据存储等，是系统逻辑模型的重要组成部分。","analysis":"B"},{"product_id":"20140311221716","ans":"本题考查面向对象开发方法。面向对象开发方法有Booch方法、Coad方法和OMT方法。Jackson方法是一种面向数据结构的开发方法。","analysis":"D"},{"product_id":"20140311221817","ans":"本题考査项目管理内容。在对软件开发资源进行规划时，为了确定构建软件系统所需的人数，需要考虑软件系统的规模、系统的技术复杂性、项目计划和开发人员的技术背景等方面，而与系统是否有市场前景无关。","analysis":"A"},{"product_id":"20140311221916","ans":"本题考查软件测试知识。回归测试是在软件发生变更之后进行的测试，以发现在变更时可能引起的其他错误。","analysis":"C"},{"product_id":"20140311221958","ans":"本题考查风险预测知识。风险预测从风险发生的可能性大小以及风险发生所产生的后果是否严重两个方面评估风险。","analysis":"D"},{"product_id":"20140311222035","ans":"本题考查程序语言基础知识。数据具有类型，便于编译程序在基础机器中完成对值的布局，同时还可用于检查表达式中对运算的应用是否正确。","analysis":"C"},{"product_id":"20140311222143","ans":"本题考查程序语言基础知识。变量是内存单元的抽象，用于在程序中表示数据。当变量存储的是内存单元地址时，称为指针变量，或者说指针变量指向了另一个变量。指针量可以定义在函数或复合语句内，也可以定义在所有的函数之外，即可以是全局变量，也可以是局部变量。需要区分指针变量与指针所指向的变量，无论指针变量指向何种变量，其存储空间大小都是一样的。当指针变量指向数组中的一个元素时，对指针变量进行算术运算可以使其指向同一个数组中的其他元素。","analysis":"A"},{"product_id":"20140311222236","ans":"本题考查程序语言基础知识。“中间代码”是一种简单且含义明确的记号系统，与具体的机器无关，可以有若干种形式。可以将不同的高级程序语言翻译成同一种中间代码。由于与具体机器无关，使用中间代码有利于进行与机器无关的优化处理，以及提高编译程序的可移植性。","analysis":"D"},{"product_id":"20140311222554","ans":"本题考查操作系统基本概念。财务软件、汽车防盗程序、办公管理软件和气象预报软件都属于应用软件，而选项A、C和D中含有这些软件。选项B中汇编程序、编译程序和数据库管理系统软件都属于系统软件。计算机系统由硬件和软件两部分组成。通常把未配置软件的计算机称为裸机，直接使用裸机不仅不方便，而且将严重降低工作效率和机器的利用率。操作系统（OperatingSystem)的目的是为了填补人与机器之间的鸿沟，即建立用户与计算机之间的接口而为裸机配置的一种系统软件。由图1可以看出，操作系统是裸机上的窠一层软件，是对硬件系统功能的首次扩充。它在计算机系统中占据重要而特殊的地位，所有其他软件，如编辑程序、汇编程序、编译程序和数据库管理系统等系统软件，以及大量的应用软件都是建立在操作系统基础上的，并得到它的支持和取得它的服务。从用户角度看，当计算机配置了操作系统后，用户不再直接使用计算机系统硬件，而是利用操作系统所提供的命令和服务去操纵计算机，操作系统已成为现代计算机系统中必不可少的最重要的系统软件，因此把操作系统看作是用户与计算机之间的接口。因此，操作系统紧贴系统硬件之上，所有其他软件之下（是其他软件的共同环境)。","analysis":"B"},{"product_id":"20140311222650","ans":"本题考查操作系统基本概念。财务软件、汽车防盗程序、办公管理软件和气象预报软件都属于应用软件，而选项A、C和D中含有这些软件。选项B中汇编程序、编译程序和数据库管理系统软件都属于系统软件。计算机系统由硬件和软件两部分组成。通常把未配置软件的计算机称为裸机，直接使用裸机不仅不方便，而且将严重降低工作效率和机器的利用率。操作系统（OperatingSystem)的目的是为了填补人与机器之间的鸿沟，即建立用户与计算机之间的接口而为裸机配置的一种系统软件。由图1可以看出，操作系统是裸机上的窠一层软件，是对硬件系统功能的首次扩充。它在计算机系统中占据重要而特殊的地位，所有其他软件，如编辑程序、汇编程序、编译程序和数据库管理系统等系统软件，以及大量的应用软件都是建立在操作系统基础上的，并得到它的支持和取得它的服务。从用户角度看，当计算机配置了操作系统后，用户不再直接使用计算机系统硬件，而是利用操作系统所提供的命令和服务去操纵计算机，操作系统已成为现代计算机系统中必不可少的最重要的系统软件，因此把操作系统看作是用户与计算机之间的接口。因此，操作系统紧贴系统硬件之上，所有其他软件之下（是其他软件的共同环境)。","analysis":"D"},{"product_id":"20140311223058","ans":"本题考查操作系统进程管理中PV操作方面的基本知识。根据题意，进程P2、P3等待P1的结果，因此当P1执行完毕需要使用V操作通知P2、P3,即a处填V(SI)V(S2),b处应填P(S1)。根据题意，进程P3要执行需要测试P1、P2有没有消息，故应该在c处填P(S2)、P(S3)。当P3执行完毕需要使用V操作通知P4，即在d处填P(S4)。","analysis":"C"},{"product_id":"20140311223227","ans":"本题考查操作系统进程管理中PV操作方面的基本知识。根据题意，进程P2、P3等待P1的结果，因此当P1执行完毕需要使用V操作通知P2、P3,即a处填V(SI)V(S2),b处应填P(S1)。根据题意，进程P3要执行需要测试P1、P2有没有消息，故应该在c处填P(S2)、P(S3)。当P3执行完毕需要使用V操作通知P4，即在d处填P(S4)。","analysis":"B"},{"product_id":"20140311223327","ans":"本题考查操作系统文件管理可靠性方面的基础知识。影响文件系统可靠性因素之一是文件系统的一致性问题。很多文件系统是先读取磁盘块到主存，在主存进行修改，修改完毕再写回磁盘。例如读取某磁盘块，修改后再将信息写回磁盘前系统崩溃，则文件系统就可能会出现不一致性状态。如果这些未被写回的磁盘块是索引节点块、目录块或空闲块，特别是系统目录文件，那么对系统的影响相对较大，且后果也是不堪设想的。通常解决方案是采用文件系统的一致性检查，一致性检查包括块的一致性检查和文件的一致性检查。","analysis":"B"},{"product_id":"20140311232941","ans":"本题考查UNIX文件系统管理中目录结构方面的基础知识。UNIX系统采用直接、一级、二级和三级间接索引技术访问文件，其索引结点有13个地址项（i_addr[0]〜i_addr[12])。其中i_addr[0]〜i_addr[9]采用直接索引技术访问文件，i_addr[10]采用一级间接索引技术访问文件，i_addr[11]釆用二级间接索引技术访问文件，i_addr[12]釆用三级间接索引技术访问文件。如下图所示。根据题意，每个盘块的大小为1KB，每个盘块号占4B，那么，一个盘块可以存放256个盘块号。又因为进程A访问文件F中第11264字节处的数据，该数据应该放在11264/1024=11号逻辑盘块中，从上图中可以看出11号逻辑盘块应采用一级间接索引。","analysis":"B"},{"product_id":"20140311233120","ans":"本题考查成熟度等级（CMM)知识。在CMM的不同等级有不同的核心。在可重复级，建立了基本的项目管理过程和实践来跟踪项目费用、进度和功能特性。在已定义级，所有项目都采用根据实际情况修改后得到的标准软件过程来开发和维护软件。在已管理级，收集对软件过程和产品质量的详细度量，对软件过程和产品都有定量的理解与控制。在优化级，过程的量化反馈和先进的新思想、新技术促使过程不断改进。","analysis":"C"},{"product_id":"20140311233237","ans":"本题考查软件系统设计知识。系统设计为系统制定蓝图，软件设计模型关注新系统总体结构、代码设计、处理过程、数据结构和界面模型等。对项目范围的关注在软件设计之前。","analysis":"D"},{"product_id":"20140312232046","ans":"本题考査软件质量模型知识。ISO/IEC9126软件质量模型中可靠性质量特性是指在规定的一段时间内和规定的条件下，软件维护其性能水平有关的能力。包括的子特性有成熟性、容错性和易恢复性。其中易恢复性是与在故障发生后，重新建立其性能水平并恢复直接受影响数据的能力，以及与为达到此目的所需的时间和工作有关的软件属性。软件故障发生后，要在90秒内恢复其性能和受影响的数据，达到这一目的有关的属性即为易恢复性子特性。","analysis":"C"},{"product_id":"20140312232328","ans":"本题考査McCabe度量法。McCabe度量法是通过定义环路复杂度，建立程序复杂性的度量，它基于一个程序模块的程序图中环路的个数。计算有向图G的环路复杂性的公式为V(G)=m-n+2,其中V(G)是有向图G中的环路个数，m是G中的有向弧数，n是G中的节点数。要采用McCabe度量法度量程序复杂度，需要先画出程序图，识别有向图中节点数n=7和有向弧数m=10,然后利用环路复杂性计算公式V(G)=m-n+2进行计算，得到图中程序图的程序复杂度是5。","analysis":"D"},{"product_id":"20140312232451","ans":"本题考査系统开发计划文档知识。用于系统开发人员与项目管理人员在项目期内进行沟通的文档主要有系统开发计划，包括工作任务分解表、PERT图、甘特图和预算分配表等。总体规划和开发合同用于与系统分析人员在系统规划和系统分析阶段的沟通。测试计划用于系统测试人员与系统开发人员之间的沟通。","analysis":"A"},{"product_id":"20140312232550","ans":"本题考查软件维护知识。软件维护的内容一般包括准确性维护、适应性维护、完善性维护和预防性维护。正确性维护是指改正在系统开发阶段已发生而系统测试阶段尚未发现的错误。适应性维护是指使应用软件适应信息技术变化和管理需求变化而进行的修改。完善性维护主要是指对己有的软件系统增加一些在系统分析和设计阶段中没有规定的功能与性能特征。预防性维护是指为了适应未来的软硬件环境的变化，主动增加预防性的新功能，以使应用系统适应各类变化而不被淘汰。","analysis":"A"},{"product_id":"20140312233241","ans":"本题考查软件动态测试方法。软件测试方法分为静态测试和动态测试。静态测试是被测试程序不在机器上运行而采用人工检测和计算机辅助静态分析手段对程序进行检测。动态测试是通过运行程序发现错误。对软件产品进行动态测试时可以采用黑盒测试和白盒测试法。黑盒测试法在完全不考虑软件的内部结构和特性的情况下，测试软件的外部特性。对于无法获得源代码的第三方组件，可采用黑盒对组件进行测试。基本路径覆盖、分支覆盖和环路覆盖需要根据程序的内部结构和逻辑进行测试。","analysis":"D"},{"product_id":"20140313105306","ans":"本题考查敏捷开发方法。极限编程（XP)是敏捷开发的典型方法之一，是一种轻量级（敏捷)、高效、低风险、柔性、可预测的、科学的软件开发方法，它由价值观、原则、实践和行为4个部分组成。其中4大价值观为沟通、简单性、反馈和勇气。","analysis":"C"},{"product_id":"20140313111439","ans":"本题考查面向对象中类和对象的基本概念。面向对象中，类是对象的模板，描述了一组对象共有的成员属性和方法。类是一组对象的抽象描述，通过类可以产生一个或多个对象，这些对象具有相同的属性和方法。","analysis":"B"},{"product_id":"20140313111738","ans":"本题考查面向对象的基本概念。封装的作用是把属性和服务结合成一个独立的系统单元，并隐藏对象的内部细节；而继承则使得子类可以自动拥有父类的全部属性和服务;消息则是对象发出的服务请求;多态是指面向对象中由重载或过载机制实现的结果。","analysis":"D"},{"product_id":"20140313111827","ans":"本题考查面向对象的基本概念。封装的作用是把属性和服务结合成一个独立的系统单元，并隐藏对象的内部细节；而继承则使得子类可以自动拥有父类的全部属性和服务;消息则是对象发出的服务请求;多态是指面向对象中由重载或过载机制实现的结果。","analysis":"A"},{"product_id":"20140313111901","ans":"本题考查面向对象的基本概念。封装的作用是把属性和服务结合成一个独立的系统单元，并隐藏对象的内部细节；而继承则使得子类可以自动拥有父类的全部属性和服务;消息则是对象发出的服务请求;多态是指面向对象中由重载或过载机制实现的结果。","analysis":"C"},{"product_id":"20140313111951","ans":"本题考查面向对象分析的基本概念。面向对象分析主要回答软件系统需要解决什么问题，在面向对象分析阶段，并不考虑系统实现以及系统的测试问题，强调建立独立与系统实现的系统分析模型，其关注点仍然侧重于问题域。","analysis":"B"},{"product_id":"20140313112046","ans":"本题考查面向对象设计的基本原则。面向对象设计中存在很多原则，其中高层模块不应该依赖于底层模块就是其中一条。传统的结构化设计中，一般的髙层模块需要调用或使用底层模块，导致高层模块必须依赖于底层模块，但借助面向对象中的抽象类、接口等一系列机制，可以使得高层模块仅仅和接口耦合，而和实际的底层模块没有直接关联。","analysis":"D"},{"product_id":"20140313112232","ans":"本题考查面向对象设计中的设计模式。单例设计模式的目的就是保证一个类仅能够生成一个对象；组合设计模式则用于表示“部分-整体”的层次结构，并且对部分和整体的使用具有一致性；装饰设计模式则动态地给一个对象增加一些额外的职责，无须改变类的设计和实现。","analysis":"B"},{"product_id":"20140313112330","ans":"本题考查面向对象设计中的设计模式。单例设计模式的目的就是保证一个类仅能够生成一个对象；组合设计模式则用于表示“部分-整体”的层次结构，并且对部分和整体的使用具有一致性；装饰设计模式则动态地给一个对象增加一些额外的职责，无须改变类的设计和实现。","analysis":"D"},{"product_id":"20140313112424","ans":"本题考查面向对象设计中的设计模式。单例设计模式的目的就是保证一个类仅能够生成一个对象；组合设计模式则用于表示“部分-整体”的层次结构，并且对部分和整体的使用具有一致性；装饰设计模式则动态地给一个对象增加一些额外的职责，无须改变类的设计和实现。","analysis":"C"},{"product_id":"20140313112706","ans":"本题考查面向对象设计中的设计模式。题中的图标是观察者设计模式，在该设计模式中，一个Subject类可以有多个ConcreteSubject子类，一个Observer类也可以有多个ConcreteObserver子类;一个Subject对象可以对应多个Observer对象。","analysis":"D"},{"product_id":"20140313112837","ans":"本题考查面向对象设计中的设计模式。题中的图标是观察者设计模式，在该设计模式中，一个Subject类可以有多个ConcreteSubject子类，一个Observer类也可以有多个ConcreteObserver子类;一个Subject对象可以对应多个Observer对象。","analysis":"A"},{"product_id":"20140313113300","ans":"本题考查程序语言翻译基础知识。词法分析是编译过程的第一阶段，其任务是对源程序从前到后（从左到右）逐个字符地扫描，从中识别出一个个的“单词”符号。语法分析的任务是在词法分析的基础上，根据语言的语法规则将单词符号序列分解成各类语法单位，如“表达式”、“语句”和“程序”等。语义分析阶段主要检查源程序是否包含语义错误，并收集类型信息供后面的代码生成阶段使用。只有语法和语义都正确的源程序才能被翻译成正确的目标代码。目标代码生成是编译器工作的最后一个阶段。这一阶段的任务是把中间代码变换成特定机器上的绝对指令代码、可重定位的指令代码或汇编指令代码，这个阶段的工作与具体的机器密切相关。源程序不可避免地会有一些错误，这些错误大致可分为语法错误和语义错误。语法错误是指语言结构上的使用错误，是指编译时所发现的程序错误，如单词拼写错误、标点符号错、表达式中缺少操作数、括号不匹配等有关语言结构上的错误。","analysis":"C"},{"product_id":"20140313113353","ans":"本题考查程序语言基础知识。链表中的结点空间需要程序员根据需要申请和释放，因此，数据空间应采用堆存储分配策略。","analysis":"B"},{"product_id":"20140313113938","ans":"","analysis":"A"},{"product_id":"20140313115229","ans":"","analysis":"C"},{"product_id":"20140313115401","ans":"","analysis":"A"},{"product_id":"20140313130824","ans":"本题考查关系数据库事务处理方面的基础知识。为了保证数据库中数据的安全可靠和正确有效，数据库管理系统（DBMS)提供数据库恢复、并发控制、数据完整性保护与数据安全性保护等功能。数据库在运行过程中由于软硬件故障可能造成数据被破坏，数据库恢复就是在尽可能短的时间内把数据库恢复到故障发生前的状态。","analysis":"D"},{"product_id":"20140313131104","ans":"本题考查数据库系统设计的基本概念和SQL基本命令。概念模式设计阶段是根据对用户信息需要的分析设计E-R图，对于属性的分析，派生属性是指可以由其他属性经过运算得到的属性，因而派生属性产生冗余，通常不存储，如员工实体Emp的年龄；多值属性是指一个实体在该属性上会同时取多个属性值，这些值也都必须存储，如员工实体Emp的联系方式。数据约束也是描述用户信息的，根据参照完整性约束的定义，Emp实体中的部门号属性应为外码，应该用ForeignKey进行外键约束。标准SQL对数据库对象（基本表、索引和视图等）的创建、修改和删除定义了一组操作分别为CREATE、ALTER和DROP;对基本表和视图中数据的插入、删除和修改定义了操作分别为INSERT、DELETE和UPDATE，这两组操作不能混淆。","analysis":"B"},{"product_id":"20140313131153","ans":"本题考查数据库系统设计的基本概念和SQL基本命令。概念模式设计阶段是根据对用户信息需要的分析设计E-R图，对于属性的分析，派生属性是指可以由其他属性经过运算得到的属性，因而派生属性产生冗余，通常不存储，如员工实体Emp的年龄；多值属性是指一个实体在该属性上会同时取多个属性值，这些值也都必须存储，如员工实体Emp的联系方式。数据约束也是描述用户信息的，根据参照完整性约束的定义，Emp实体中的部门号属性应为外码，应该用ForeignKey进行外键约束。标准SQL对数据库对象（基本表、索引和视图等）的创建、修改和删除定义了一组操作分别为CREATE、ALTER和DROP;对基本表和视图中数据的插入、删除和修改定义了操作分别为INSERT、DELETE和UPDATE，这两组操作不能混淆。","analysis":"C"},{"product_id":"20140313131248","ans":"本题考查数据库系统设计的基本概念和SQL基本命令。概念模式设计阶段是根据对用户信息需要的分析设计E-R图，对于属性的分析，派生属性是指可以由其他属性经过运算得到的属性，因而派生属性产生冗余，通常不存储，如员工实体Emp的年龄；多值属性是指一个实体在该属性上会同时取多个属性值，这些值也都必须存储，如员工实体Emp的联系方式。数据约束也是描述用户信息的，根据参照完整性约束的定义，Emp实体中的部门号属性应为外码，应该用ForeignKey进行外键约束。标准SQL对数据库对象（基本表、索引和视图等）的创建、修改和删除定义了一组操作分别为CREATE、ALTER和DROP;对基本表和视图中数据的插入、删除和修改定义了操作分别为INSERT、DELETE和UPDATE，这两组操作不能混淆。","analysis":"C"},{"product_id":"20140313131618","ans":"本题考查数据结构基础知识。遍历运算是二叉树的基本运算，主要有先序、中序、后序和层序遍历。先序遍历的基本方法：对于非空二叉树，先访问根结点，然后先序遍历根的左子树，最后先序遍历根的右子树。因此，若已知某二叉树的先序遍历序列，则可直接得到其树根结点。中序遍历的基本方法：对于非空二叉树，先中序遍历根的左子树，然后访问根结点，最后中序遍历根的右子树。因此，若已知某二叉树的根结点，则可根据中序遍历序列将该二叉树左右子树上的结点划分开。后序遍历的基本方法：对于非空二叉树，首先后序遍历根的左子树，接着后序遍历根的右子树，最后访问根结点。因此，若已知某二叉树的后序遍历序列，则可直接得到其树根结点。题中给出的先序遍历序列为①、②、③、④、⑤，可知树根结点是①，据此再结合中序遍历序列②、①、④、③、⑤，可知②是根结点①左子树上的结点，由于是左子树上唯一的一个结点，因此②是根结点①的左孩子。对于右子树上的结点④、③、⑤，因右子树的先序遍历序列为③、④、⑤，因此③是根结点①的右孩子。依此类推，可知④是结点③的左孩子，⑤是结点③的右孩子。该二叉树如下图所示。从二叉树的遍历过程可知，从先序遍历序列和后序遍历序列中无法将左子树和右子树上的结点区分开，因此，由某棵二叉树的先序遍历序列和后序遍历序列不能构造出该二叉树的中序遍历序列。层序遍历二叉树的方法：设二叉树的根结点所在层数为1,则层序遍历二叉树的操作定义为从树的根结点出发，首先访问第一层的结点（根结点），然后从左到右依次访问第二层上的结点，接着是第三层上的结点，依此类推，自上而下、自左至右逐层访问树中各层上的结点。","analysis":"C"},{"product_id":"20140313131825","ans":"本题考查数据结构基础知识。遍历运算是二叉树的基本运算，主要有先序、中序、后序和层序遍历。先序遍历的基本方法：对于非空二叉树，先访问根结点，然后先序遍历根的左子树，最后先序遍历根的右子树。因此，若已知某二叉树的先序遍历序列，则可直接得到其树根结点。中序遍历的基本方法：对于非空二叉树，先中序遍历根的左子树，然后访问根结点，最后中序遍历根的右子树。因此，若已知某二叉树的根结点，则可根据中序遍历序列将该二叉树左右子树上的结点划分开。后序遍历的基本方法：对于非空二叉树，首先后序遍历根的左子树，接着后序遍历根的右子树，最后访问根结点。因此，若已知某二叉树的后序遍历序列，则可直接得到其树根结点。题中给出的先序遍历序列为①、②、③、④、⑤，可知树根结点是①，据此再结合中序遍历序列②、①、④、③、⑤，可知②是根结点①左子树上的结点，由于是左子树上唯一的一个结点，因此②是根结点①的左孩子。对于右子树上的结点④、③、⑤，因右子树的先序遍历序列为③、④、⑤，因此③是根结点①的右孩子。依此类推，可知④是结点③的左孩子，⑤是结点③的右孩子。该二叉树如下图所示。从二叉树的遍历过程可知，从先序遍历序列和后序遍历序列中无法将左子树和右子树上的结点区分开，因此，由某棵二叉树的先序遍历序列和后序遍历序列不能构造出该二叉树的中序遍历序列。层序遍历二叉树的方法：设二叉树的根结点所在层数为1,则层序遍历二叉树的操作定义为从树的根结点出发，首先访问第一层的结点（根结点），然后从左到右依次访问第二层上的结点，接着是第三层上的结点，依此类推，自上而下、自左至右逐层访问树中各层上的结点。","analysis":"B"},{"product_id":"20140313132351","ans":"本题考査数据结构基础知识。设某有向图和无向图如下所示。下面的矩阵A是该有向图的邻接矩阵，B为无向图的邻接矩阵。上面有向图的邻接链表如下图所示。图的遍历运算是按照某种策略访问图中的每一个顶点，实质上是通过边或弧找邻接点的过程，因此广度优先搜索遍历图和深度优先搜索遍历图的时间复杂度相同，其不同之处仅仅在于对顶点访问的次序不同。","analysis":"D"},{"product_id":"20140313132741","ans":"本题考査数据结构基础知识。含有头结点的单链表如下图所示。在链表中加入头结点后，査找表中某一元素仍然要从头指针出发，顺序找到目标元素或失败时找到表尾为止，时间复杂度与表长成正比。","analysis":"D"},{"product_id":"20140313133234","ans":"本题考查数据结构基础知识。队列的元素按特点是先进先出。对于队列，元素的进入次序和出队的次序相同，例如，入队的序列为a、b、c,则出队的序列也为a、b、c。对于栈则不同，栈的运算特点是后进先出。若入栈序列为a、b、c,则出栈序列可能为a、b、c,a、c、b,b、a、c,b、c、a或者c、b、a,而c、a、b则不行，因此，入队序列与出队序列关系为1:1，而入栈序列与出栈序列关系是1:n(n≥1)。","analysis":"D"},{"product_id":"20140313133331","ans":"本题考查数据结构基础知识。在串比较、求子串、串连接、串替换运算中，除了串替换外，其他运算都不会改变串中的内容，因此，在链表存储方式下进行串替换最不方便。","analysis":"D"},{"product_id":"20140313133954","ans":"本题考查算法分析的基础知识。在算法分析中，符号O用于表示算法运行时间的上限。从定义上说，对一个函数g(n)，O(g(n))表示函数集合：{f(n)：存在正常数c和n0,使得对所有的n≥n0,有0≤f(n)≤cg(n)}根据上述定义，可以知道表达式T(n)=an2+bnlgn+cn+d在函数集合O(n2)中。对此问题，简单的做法是忽略n的低阶项和最高阶项的常系数，故答案应为O(n2)。","analysis":"A"},{"product_id":"20140313134453","ans":"","analysis":"B"},{"product_id":"20140313134627","ans":"","analysis":"A"},{"product_id":"20140313134747","ans":"中继器是物理层设备，其作用是对接收的信号进行再生放大，以延长传输的距离。网桥是数据链路层设备，可以识别MAC地址，进行帧转发。交换机是由硬件构成的多端口网桥，也是一种数据链路层设备。路由器是网络层设备，可以识别IP地址，进行数据包的转发。","analysis":"A"},{"product_id":"20140313134824","ans":"中继器是物理层设备，其作用是对接收的信号进行再生放大，以延长传输的距离。网桥是数据链路层设备，可以识别MAC地址，进行帧转发。交换机是由硬件构成的多端口网桥，也是一种数据链路层设备。路由器是网络层设备，可以识别IP地址，进行数据包的转发。","analysis":"C"},{"product_id":"20140313135120","ans":"本题考查HTML标记相关知识。①处显示的信息为文档的标题，釆用<TITLE></TITLE>标记。②处为一条分隔线，釆用<HR>标记。③处字体Welcome是斜体，釆用<I></I>标记。","analysis":"A"},{"product_id":"20140313135245","ans":"本题考查HTML标记相关知识。①处显示的信息为文档的标题，釆用<TITLE></TITLE>标记。②处为一条分隔线，釆用<HR>标记。③处字体Welcome是斜体，釆用<I></I>标记。","analysis":"A"},{"product_id":"20140313135625","ans":"本题考查HTML标记相关知识。①处显示的信息为文档的标题，釆用<TITLE></TITLE>标记。②处为一条分隔线，釆用<HR>标记。③处字体Welcome是斜体，釆用<I></I>标记。","analysis":"C"},{"product_id":"20140313135854","ans":"编程为什么有趣？作为回报，其从业者期望得到什么样的快乐？首先是一种创建事物的纯粹快乐。如同小孩在玩泥巴时感到愉快一样，成年人喜欢创建事物，特别是自己进行设计。其次，快乐来自于开发对其他人有用的东西。第三是整个过程体现出魔术般的力量——将相互啮合的零部件组装在一起，看到它们精妙地运行，得到预先所希望的结果。第四是学习的乐趣，来自于这项工作的非重复特性。人们所面临的问题，在某个或其他方面总有些不同，因而解决问题的人可以从中学习新的事物：有时是实践上的，有时是理论上的，或者兼而有之。最后，乐趣还来自于工作在如此易于驾驭的介质上。程序员就像诗人一样，几乎仅仅工作在单纯的思考中，凭空地运用自己的想象来建造自己的“城堡”。很少有这样的介质一创造的方式如此灵活，如此易于精炼和重建，如此容易地实现概念上的设想。然而程序毕竟同诗歌不同，它是实实在在的东西；可以移动和运行，能独立产生可见的输出；能打印结果，绘制图形，发出声音，移动支架。编程非常有趣，在于它不仅满足了我们内心深处进行创造的渴望，而且还愉悦了每个人内在的情感。","analysis":"A"},{"product_id":"20140313135941","ans":"编程为什么有趣？作为回报，其从业者期望得到什么样的快乐？首先是一种创建事物的纯粹快乐。如同小孩在玩泥巴时感到愉快一样，成年人喜欢创建事物，特别是自己进行设计。其次，快乐来自于开发对其他人有用的东西。第三是整个过程体现出魔术般的力量——将相互啮合的零部件组装在一起，看到它们精妙地运行，得到预先所希望的结果。第四是学习的乐趣，来自于这项工作的非重复特性。人们所面临的问题，在某个或其他方面总有些不同，因而解决问题的人可以从中学习新的事物：有时是实践上的，有时是理论上的，或者兼而有之。最后，乐趣还来自于工作在如此易于驾驭的介质上。程序员就像诗人一样，几乎仅仅工作在单纯的思考中，凭空地运用自己的想象来建造自己的“城堡”。很少有这样的介质一创造的方式如此灵活，如此易于精炼和重建，如此容易地实现概念上的设想。然而程序毕竟同诗歌不同，它是实实在在的东西；可以移动和运行，能独立产生可见的输出；能打印结果，绘制图形，发出声音，移动支架。编程非常有趣，在于它不仅满足了我们内心深处进行创造的渴望，而且还愉悦了每个人内在的情感。","analysis":"C"},{"product_id":"20140313140032","ans":"编程为什么有趣？作为回报，其从业者期望得到什么样的快乐？首先是一种创建事物的纯粹快乐。如同小孩在玩泥巴时感到愉快一样，成年人喜欢创建事物，特别是自己进行设计。其次，快乐来自于开发对其他人有用的东西。第三是整个过程体现出魔术般的力量——将相互啮合的零部件组装在一起，看到它们精妙地运行，得到预先所希望的结果。第四是学习的乐趣，来自于这项工作的非重复特性。人们所面临的问题，在某个或其他方面总有些不同，因而解决问题的人可以从中学习新的事物：有时是实践上的，有时是理论上的，或者兼而有之。最后，乐趣还来自于工作在如此易于驾驭的介质上。程序员就像诗人一样，几乎仅仅工作在单纯的思考中，凭空地运用自己的想象来建造自己的“城堡”。很少有这样的介质一创造的方式如此灵活，如此易于精炼和重建，如此容易地实现概念上的设想。然而程序毕竟同诗歌不同，它是实实在在的东西；可以移动和运行，能独立产生可见的输出；能打印结果，绘制图形，发出声音，移动支架。编程非常有趣，在于它不仅满足了我们内心深处进行创造的渴望，而且还愉悦了每个人内在的情感。","analysis":"B"},{"product_id":"20140313140111","ans":"编程为什么有趣？作为回报，其从业者期望得到什么样的快乐？首先是一种创建事物的纯粹快乐。如同小孩在玩泥巴时感到愉快一样，成年人喜欢创建事物，特别是自己进行设计。其次，快乐来自于开发对其他人有用的东西。第三是整个过程体现出魔术般的力量——将相互啮合的零部件组装在一起，看到它们精妙地运行，得到预先所希望的结果。第四是学习的乐趣，来自于这项工作的非重复特性。人们所面临的问题，在某个或其他方面总有些不同，因而解决问题的人可以从中学习新的事物：有时是实践上的，有时是理论上的，或者兼而有之。最后，乐趣还来自于工作在如此易于驾驭的介质上。程序员就像诗人一样，几乎仅仅工作在单纯的思考中，凭空地运用自己的想象来建造自己的“城堡”。很少有这样的介质一创造的方式如此灵活，如此易于精炼和重建，如此容易地实现概念上的设想。然而程序毕竟同诗歌不同，它是实实在在的东西；可以移动和运行，能独立产生可见的输出；能打印结果，绘制图形，发出声音，移动支架。编程非常有趣，在于它不仅满足了我们内心深处进行创造的渴望，而且还愉悦了每个人内在的情感。","analysis":"D"},{"product_id":"20140313140149","ans":"编程为什么有趣？作为回报，其从业者期望得到什么样的快乐？首先是一种创建事物的纯粹快乐。如同小孩在玩泥巴时感到愉快一样，成年人喜欢创建事物，特别是自己进行设计。其次，快乐来自于开发对其他人有用的东西。第三是整个过程体现出魔术般的力量——将相互啮合的零部件组装在一起，看到它们精妙地运行，得到预先所希望的结果。第四是学习的乐趣，来自于这项工作的非重复特性。人们所面临的问题，在某个或其他方面总有些不同，因而解决问题的人可以从中学习新的事物：有时是实践上的，有时是理论上的，或者兼而有之。最后，乐趣还来自于工作在如此易于驾驭的介质上。程序员就像诗人一样，几乎仅仅工作在单纯的思考中，凭空地运用自己的想象来建造自己的“城堡”。很少有这样的介质一创造的方式如此灵活，如此易于精炼和重建，如此容易地实现概念上的设想。然而程序毕竟同诗歌不同，它是实实在在的东西；可以移动和运行，能独立产生可见的输出；能打印结果，绘制图形，发出声音，移动支架。编程非常有趣，在于它不仅满足了我们内心深处进行创造的渴望，而且还愉悦了每个人内在的情感。","analysis":"A"}]},{"paperId":"88","field":"20091","question_list":[{"product_id":"20140309203303","ans":"","analysis":"A"},{"product_id":"20140309204006","ans":"","analysis":"B"},{"product_id":"20140309204117","ans":"本题考查计算机系统存储器方面的基础知识。计算机系统的存储器按所处的位置可分为内存和外存。按构成存储器的材料可分为磁存储器、半导体存储器和光存储器。按存储器的工作方式可分为读写存储器和只读存储器。按访问方式可分为按地址访问的存储器和按内容访问的存储器。按寻址方式可分为随机存储器、顺序存储器和直接存储器。相联存储器是一种按内容访问的存储器。","analysis":"B"},{"product_id":"20140309204238","ans":"本题考查计算机系统总线和接口方面的基础知识。广义地讲，任何连接两个以上电子元器件的导线都可以称为总线。通常可分为4类:①芯片内总线。用于在集成电路芯片内部各部分的连接。②元件级总线。用于一块电路板内各元器件的连接。③内总线，又称系统总线。用于构成计算机各组成部分（CPU、内存和接口等）的连接。.④外总线，又称通信总线。用计算机与外设或计算机与计算机的连接或通信。连接处理机的处理器、存储器及其他部件的总线属于内总线，按总线上所传送的内容分为数据总线、地址总线和控制总线。","analysis":"A"},{"product_id":"20140309204424","ans":"","analysis":"C"},{"product_id":"20140309204626","ans":"","analysis":"B"},{"product_id":"20140309204748","ans":"本题考查漏洞扫描系统的基本概念。漏洞扫描系统是一种自动检测目标主机安全弱点的程序，漏洞扫描系统的原理是根据系统漏洞库对系统可能存在的漏洞进行一一验证。黑客利用漏洞扫描系统可以发现目标主机的安全漏洞从而有针对性的对系统发起攻击；系统管理员利用漏洞扫描系统可以查找系统中存在的漏洞并进行修补从而提高系统的可靠性。漏洞扫描系统不能用于发现网络入侵者，用于检测网络入侵者的系统称为入侵检测系统。","analysis":"C"},{"product_id":"20140309204841","ans":"本题考查网络安全方面的基础知识。数字签名（DigitalSignature)技术是不对称加密算法的典型应用。数字签名的应用过程是：数据源发送方使用自己的私钥对数据校验和或其他与数据内容有关的变量进行加密处理，完成对数据的合法“签名”；数据接收方则利用对方的公钥来解读收到的“数字签名”，并将解读结果用于对数据完整性的检验，以确认签名的合法性。数字签名技术是在网络系统虚拟环境中确认身份的重要技术，完全可以代替现实过程中的“亲笔签字”，在技术和法律上有保证，可见数字签名是对签名真实性的保护。","analysis":"D"},{"product_id":"20140309204933","ans":"本题考查计算机病毒相关知识。特洛伊木马是一种通过网络传播的病毒，分为客户端和服务器端两部分，服务器端位于被感染的计算机，特洛伊木马服务器端运行后会试學建立网络连接，所以计算机感染特洛伊木马后的典型现象是有未知程序试图建立网络连接。","analysis":"B"},{"product_id":"20140309205117","ans":"本题考查知识产权中关于软件著作权方面的知识。在我国，软件著作权采用“自动保护”原则。《计算机软件保护条例》第十四条规定：“软件著作权自软件开发完成之日起产生。”即软件著作权自软件开发完成之曰起自动产生，不论整体还是局部，只要具备了软件的属性即产生软件著作权，既不要求履行任何形式的登记或注册手续，也无须在复制件上加注著作权标记，也不论其是否已经发表都依法享有软件著作权。一般来讲，一个软件只有开发完成并固定下来才能享有软件著作权。如果一个软件—直处于开发状态中，其最终的形态并没有固定下来，则法律无法对其进行保护。因此，条例（法律）明确规定软件著作权自软件开发完成之日起产生。当然，现在的软件开发经常是一项系统工程，一个软件可能会有很多模块，而每一个模块能够独立完成某一项功能。自该模块开发完成后就产生了著作权。所以说，自该软件开发完成后就产生了著作权。","analysis":"D"},{"product_id":"20140309205238","ans":"本题考查知识产权中关于软件著作权方面的知识。著作权因作品的完成而自动产生，不必履行任何形式的登记或注册手续，也不论其是否已经发表，所以甲对该软件作品享有著作权。乙未经甲的许可擅自使用甲的软件作品的行为，侵犯了甲的软件著作权。","analysis":"A"},{"product_id":"20140309205359","ans":"本题考查多媒体中关于音频信号方面的基础知识。声音信号由许多频率不同的信号组成，通常称为复合信号，而把单一频率的信号称为分量信号。声音信号的一个重要参数就是带宽（Bandwidth),它用来描述组成声音的信号的频率范围。声音信号的频率是指声波每秒钟变化的次数，用Hz表示。人们把频率小于20Hz的声波信号称为亚音信号（也称次音信号)；频率范围为20Hz〜20kHz的声波信号称为音频信号；髙于20kHz的信号称为超音频信号（也称超声波）。PC处理的音频信号主要是人耳能听得到的音频信号（audio),它的频率范围是20〜20kHz。可听声包括：•话音（也称语音)：人的说话声，频率范围通常为300〜3400Hz»•音乐：由乐器演奏形成（规范的符号化声音)，其带宽可达到20〜20kHz。•其他声音：如风声、雨声、鸟叫声和汽车鸣笛声等，它们起着效果声或噪声的作用，其带宽范围也是20〜20kHz。","analysis":"B"},{"product_id":"20140309205557","ans":"本题考查多媒体中关于文件格式方面的基础知识。计算机中使用的图像文件格式大体上可分为图像文件格式和动态图像文件格式两大类，每类又有很多种。JPEG是由ISO和IEC两个组织机构联合组成的一个专家组，负责制定静态和数字图像数据压缩编码标准，这个专家组地区性的算法称为JPEG算法，并且成为国际上通用的标准，因此又称为JPEG标准。JPEG是一个适用范围很广的静态图像数据压缩标准，既可用于灰度图像又可用于彩色图像。MPEG文件格式是运动图像压缩算法的国际标准，它包括MPEG视频、MPEG音频和MPEG系统（视频、音频同步）三个部分。MPEG压缩标准是针对运动图像设计的，其基本方法是：单位时间内采集并保存第一帧信息，然后只存储其余帧对第一帧发生变化的部分，从而达到压缩的目的。MPEG的平均压缩比为50:1，最高可达200:1，压缩效率非常高，同时图像和音响的质量也非常好，并且在PC上有统一的标准格式，兼容性相当好。AVI是Microsoft公司开发的一种符合RIFF文件规范的数字音频与视频文件格式，Windows、OS/2等多数操作系统直接支持。AVI格式允许视频和音频交错在一起同步播放，支持256色和RLE压缩，但AVI文件并未限定压缩标准。AVI文件目前主要应用在多媒体光盘上，用来保存电影、电视等各种影像信息，有时也出现在因特网上，供用户下载、欣赏新影片的片段。","analysis":"C"},{"product_id":"20140309205815","ans":"本题考査多媒体中关于模拟视频信息处理方面的基础知识。模拟视频信号进入计算机时，首先需要解决模拟视频信息的数字化问题。与音频数字化一样，视频数字化的目的是将模拟信号经A/D转换和彩色空间变换等过程，转换成计算机可以显示和处理的数字信号。由于电视和计算机的显示机制不同，因此要在计算机上显示视频图像需要作许多处理。例如，电视是隔行扫描，计算机的显示器通常是逐行扫描；电视是亮度（Y)和色度（C)的复合编码，而PC的显示器工作在RGB空间；电视图像的分辨率和显示屏的分辨率也各不相同等。这些问题在电视图像数字化过程中都需考虑。一般，对模拟视频信息进行数字化采取如下方式：先从复合彩色电视图像中分离出彩色分量，然后数字化。目前市场上的大多数电视信号都是复合的全电视信号，如录像带、激光视盘等存储设备上的电视信号。对这类信号的数字化，通常是将其分离成YUV、YIQ或RGB彩色空间的分量信号，然后用3个A/D转换器分别进行数字化。这种方式称为复合数字化。先对全彩色电视信号数字化，然后在数字域中进行分离，以获得YUV、YIQ或RGB分量信胃号。用这种方法对电视图像数字化时，只需一个髙速A/D转换器。这种方式称为分量数字化。视频信息数字化的过程比声音复杂一些，它是以一幅幅彩色画面为单位进行的。分量数字化方式是使用较多的一种方式。电视信号使用的彩色空间是YUV空间，即每幅彩色画面有亮度（Y)和色度（U、V)3个分量，对这3个分量需分别进行取样和量化，得到一幅数字图像。由于人眼对色度信号的敏感程度远不如对亮度信号那么灵敏，因此色度信号的取样频率可以比亮度信号的取样频率低一些，以减少数字视频的数据量。数字图像数据的数据量大，而数字视频信息的数据量就更加突出。例如，每帧352X240像素点，图像深度16位的图像，其数据量约为1.3Mb，每秒30帧，其数据量就髙达40Mb/s，这样大的数据量无论是传输、存储还是处理，都是极大的负担。","analysis":"A"},{"product_id":"20140309205900","ans":"本题考查采用敏捷方法进行软件开发。敏捷方法中，重构是一种重新组织技术，重新审视需求和设计，重新明确地描述它们以符合新的和现有的需求，可以简化构件的设计而无需改变其功能或行为。","analysis":"C"},{"product_id":"20140309210000","ans":"本题考查RUP对软件开发过程的描述。RUP应用了角色、活动、制品和工作流4种重要的模型元素，其中角色表述“谁做”，制品表述“做什么”，活动表述“怎么做”，工作流表述“什么时候做”。","analysis":"A"},{"product_id":"20140309210348","ans":"本题考査项目计划的关键路径和松弛时间。图中任务流A→G→I的持续时间为15;任务流A—D—F—H—I的持续时间为18;任务流B—E—G—I的持续时间为20;任务流C→F→H→I的持续时间为13。因此关键路径B→E→G→I，其持续时间是20。任务A处于任务流A→G→I和任务流A→D→F→H→I中，分别持续时间为15和18，因此任务A的可延迟开始时间为2。","analysis":"C"},{"product_id":"20140309210407","ans":"本题考査项目计划的关键路径和松弛时间。图中任务流A→G→I的持续时间为15;任务流A—D—F—H—I的持续时间为18;任务流B—E—G—I的持续时间为20;任务流C→F→H→I的持续时间为13。因此关键路径B→E→G→I，其持续时间是20。任务A处于任务流A→G→I和任务流A→D→F→H→I中，分别持续时间为15和18，因此任务A的可延迟开始时间为2。","analysis":"B"},{"product_id":"20140309210517","ans":"本题考查软件风险的特性。软件风险一般包括不确定性和损失两个特性，其中不确定性是指风险可能发生，也可能不发生；损失是当风险确实发生时，会引起的不希望的后果和损失。救火和危机管理是对不适合但经常采用的软件风险管理策略。已知风险和未知风险是对软件风险进行分类的一种方式。员工和预算是在识别项目风险时需要识别的因素。","analysis":"C"},{"product_id":"20140309210622","ans":"本题考查程序语言基础知识。函数调用时基本的参数传递方式有传值与传地址两种，在传值方式下是将实参的值传递给形参，因此实参可以是表达式（或常量)，也可以是变量（或数组元素)，这种信息传递是单方向的，形参不能再将值传回给实参。在传地址方式下，需要将实参的地址传递给形参，因此，实参必须是变量（数组名或数组元素)，不能是表达式（或常量)。这种方式下，被调用函数中对表达式参数的修改实际上就是对实际参数的修改，因此客观上可以实现数据的双向传递。","analysis":"C"},{"product_id":"20140309210726","ans":"本题考查程序语言方面的基础知识。编译是将高级语言源程序翻译成机器语言程序（汇编形式或机器代码形式），反编译是编译的逆过程。反编译通常不能把可执行文件还原成高级语言源代码，只能转换成功能上等价的汇编程序。","analysis":"A"},{"product_id":"20140309210857","ans":"本题考查程序语言基础知识。动态语言是指程序在运行时可以改变其结构，例如新的函数可以被引进、己有的函数可以被删除等在结构上的变化等。动态语言的类型检查是在运行时进行的，其优点是方便阅读，不需要写非常多的与类型相关的代码；缺点是不方便调试，命名不规范时会读不懂、不利于理解等。脚本语言代表一套与系统程序设计语言不同的协定。它们牺牲执行速度和与系统程序设计语言相关的类型长度而提供更高的编程创作能力和软件重用。脚本语言更适合在联系复杂的应用程序中进行胶着（粘合)。为了简化连接组件的工作，脚本语言被设计为无类型的，脚本语言一般是面向字符的，因为字符为许多不同的事物提供了一致的描述。事实上，脚本语言都是动态语言，而动态语言都是解释型语言，不管它们是否是面向对象的语言。","analysis":"C"},{"product_id":"20140309211100","ans":"本题考査对WindowsXP操作系统应用的掌握程度。试题（23)的正确答案是D，因为WindowsXP操作系统支持FAT、FAT32或NTFS文件系统，所以利用“磁盘管理”程序可以对磁盘进行初始化、创建卷，并可以选择使用FAT、FAT32或NTFS文件系统格式化卷。试题（24)的正确答案是A。分析如下：文件级安全管理，是通过系统管理员或文件主对文件属性的设置来控制用户对文件的访问。通常可设置以下几种属性：•只执行：只允许用户执行该文件，主要针对.exe和.com文件。•隐含：指示该文件为隐含属性文件。•索引：指示该文件是索引文件。•修改：指示该文件自上次备份后是否还被修改。•只读：只允许用户读该文件。•读/写：允许用户对文件进行读和写。•共享：指示该文件是可读共享的文件。•系统：指示该文件是系统文件。用户对文件的访问，将由用户访问权、目录访问权限及文件属性三者的权限所确定。或者说是有效权限和文件属性的交集。例如对于只读文件，尽管用户的有效权限是读/写，但都不能对只读文件进行修改、更名和删除。对于一个非共享文件，将禁止在同一时间内由多个用户对它们进行访问。通过上述四级文件保护措施，可有效地保护文件。因此将“C:\\Windows\\myprogram.exe”文件设置成只读和隐藏属性，以便控制用户对该文件的访问，这一级安全管理称之为文件级安全管理。","analysis":"D"},{"product_id":"20140309211138","ans":"本题考査对WindowsXP操作系统应用的掌握程度。试题（23)的正确答案是D，因为WindowsXP操作系统支持FAT、FAT32或NTFS文件系统，所以利用“磁盘管理”程序可以对磁盘进行初始化、创建卷，并可以选择使用FAT、FAT32或NTFS文件系统格式化卷。试题（24)的正确答案是A。分析如下：文件级安全管理，是通过系统管理员或文件主对文件属性的设置来控制用户对文件的访问。通常可设置以下几种属性：•只执行：只允许用户执行该文件，主要针对.exe和.com文件。•隐含：指示该文件为隐含属性文件。•索引：指示该文件是索引文件。•修改：指示该文件自上次备份后是否还被修改。•只读：只允许用户读该文件。•读/写：允许用户对文件进行读和写。•共享：指示该文件是可读共享的文件。•系统：指示该文件是系统文件。用户对文件的访问，将由用户访问权、目录访问权限及文件属性三者的权限所确定。或者说是有效权限和文件属性的交集。例如对于只读文件，尽管用户的有效权限是读/写，但都不能对只读文件进行修改、更名和删除。对于一个非共享文件，将禁止在同一时间内由多个用户对它们进行访问。通过上述四级文件保护措施，可有效地保护文件。因此将“C:\\Windows\\myprogram.exe”文件设置成只读和隐藏属性，以便控制用户对该文件的访问，这一级安全管理称之为文件级安全管理。","analysis":"A"},{"product_id":"20140309211228","ans":"本题考査对磁盘调度方面基本知识掌握的程度。因为先来先服务是谁先请求先满足谁的请求，而最短寻找时间优先是根据当前磁臂到要请求访问磁道的距离，谁短满足谁的请求，故先来先服务和最短寻找时间优先算法可能会随时改变移动臂的运动方向。","analysis":"B"},{"product_id":"20140309211703","ans":"本题考查对操作系统死锁方面基本知识掌握的程度。系统中同类资源分配不当会引起死锁。一般情况下，若系统中有m个单位的存储器资源，它被n个进程使用，当每个进程都要求w个单位的存储器资源，当m<nw时，可能会引起死锁。试题（26)分析如下：情况a:m=2,n=1,w=2,系统中有2个资源，1个进程使用，该进程最多要求2个资源，所以不会发生死锁。情况b:m=2,n=2,w=l,系统中有2个资源，2个进程使用，每个进程最多要求1个资源，所以不会发生死锁。情况c:m=2,n=2,w=2,系统中有2个资源，2个进程使用，每个进程最多要求2个资源，此时，采用的分配策略是轮流地为每个进程分配，则第一轮系统先为每个进程分配1个，此时，系统中己无可供分配的资源，使得各个进程都处于等待状态导致系统发生死锁，这时进程资源图如下图所示。情况d:m=4,n=3,w=2,系统中有4个资源，3个进程使用，每个进程最多要求2个资源，此时，采用的分配策略是轮流地为每个进程分配，则第一轮系统先为每个进程分配1个资源，此时，系统中还剩1个资源，可以使其中的一个进程得到所需资源运行完毕，所以不会发生死锁。情况e:m=4,n=3,w=3,系统中有4个资源，3个进程使用，每个进程最多要求3个资源，此时，采用的分配策略是轮流地为每个进程分配，则第一轮系统先为每个进程分配1个，第二轮系统先为一个进程分配1个，此时，系统中己无可供分配的资源，使得各个进程都处于等待状态导致系统发生死锁，这时进程资源图如下图所示。试题（27)分析如下：对于c和e两种情况，若将m加1，则情况c:m=3,n=2,w=2,系统中有3个资源，2个进程使用，每个进程最多要求2个资源，系统先为每个进程分配1个，此时，系统中还剩1个可供分配的资源，使得其中的一个进程能得到所需资源执行完，并释放所有资源使另一个进程运行完；若将w减1，则情况c:m=2,n=2,w=1,系统中有2个资源，两个进程各需一个，系统为每个进程分配1个，此时，进程都能运行完，显然不会发生死锁。情况e分析同理。","analysis":"D"},{"product_id":"20140309211742","ans":"本题考查对操作系统死锁方面基本知识掌握的程度。系统中同类资源分配不当会引起死锁。一般情况下，若系统中有m个单位的存储器资源，它被n个进程使用，当每个进程都要求w个单位的存储器资源，.当m<nw时，可能会引起死锁。试题（26)分析如下：情况a:m=2,n=1,w=2,系统中有2个资源，1个进程使用，该进程最多要求2个资源，所以不会发生死锁。情况b:m=2,n=2,w=l,系统中有2个资源，2个进程使用，每个进程最多要求1个资源，所以不会发生死锁。情况c:m=2,n=2,w=2,系统中有2个资源，2个进程使用，每个进程最多要求2个资源，此时，采用的分配策略是轮流地为每个进程分配，则第一轮系统先为每个进程分配1个，此时，系统中己无可供分配的资源，使得各个进程都处于等待状态导致系统发生死锁，这时进程资源图如下图所示。情况d:m=4,n=3,w=2,系统中有4个资源，3个进程使用，每个进程最多要求2个资源，此时，采用的分配策略是轮流地为每个进程分配，则第一轮系统先为每个进程分配1个资源，此时，系统中还剩1个资源，可以使其中的一个进程得到所需资源运行完毕，所以不会发生死锁。情况e:m=4,n=3,w=3,系统中有4个资源，3个进程使用，每个进程最多要求3个资源，此时，采用的分配策略是轮流地为每个进程分配，则第一轮系统先为每个进程分配1个，第二轮系统先为一个进程分配1个，此时，系统中己无可供分配的资源，使得各个进程都处于等待状态导致系统发生死锁，这时进程资源图如下图所示。试题（27)分析如下：对于c和e两种情况，若将m加1，则情况c:m=3,n=2,w=2,系统中有3个资源，2个进程使用，每个进程最多要求2个资源，系统先为每个进程分配1个，此时，系统中还剩1个可供分配的资源，使得其中的一个进程能得到所需资源执行完，并释放所有资源使另一个进程运行完；若将w减1，则情况c:m=2,n=2,w=1,系统中有2个资源，两个进程各需一个，系统为每个进程分配1个，此时，进程都能运行完，显然不会发生死锁。情况e分析同理。","analysis":"B"},{"product_id":"20140309212034","ans":"本题考査对操作系统文件系统空间管理方面基本知识掌握的程度。根据题意每个逻辑记录的大小与磁盘块大小相等，并依次存放在121、75、86、65和114号磁盘块上。而文件的第5120字节应该在114号磁盘块上。","analysis":"D"},{"product_id":"20140309212453","ans":"本题考査软件成熟度模型（CMM)的基本概念。建立基本的项目管理和实践来跟踪项目费用、进度和功能特性为可重复级的核心；使用标准开发过程（或方法论）构建（或集成）系统为己定义级的核心：管理层寻求更主动地应对系统的开发问题为已管理级的核心：连续地监督和改进标准化的系统开发过程为优化级的核心。","analysis":"B"},{"product_id":"20140309212554","ans":"本题考查RUP中每个阶段产生的制品。初启阶段结束时产生一个构想文档、一个有关用例模型的调查、一个初始的业务用例、一个早期的风险评估和一个可以显示阶段和迭代的项目计划等制品；精化阶段结束时产生一个补充需求分析、一个软件架构描述和一个可执行的架构原型等制品：构建阶段结束时的成果是一个准备交到最终用户手中的产品，包括具有最初运作能力的在适当的平台上集成的软件产品、用户手册和对当前版本的描述；移交阶段结束时产生移交给用户产品发布版本。","analysis":"C"},{"product_id":"20140309212703","ans":"本题考查ISO/IEC9126软件质量度量模型中的质量特性。效率质量特性包括时间特性和资源特性两个质量子特性。","analysis":"B"},{"product_id":"20140309212855","ans":"本题考查McCabe度量法。要采用McCabe度量法度量程序复杂度，需要先画出程序流图，识别有向图中节点数n=7有向弧数m=8,然后利用环路复杂性计算公式V(G)=m-n+2进行计算，得如图所示的程序图的程序复杂度是3。","analysis":"B"},{"product_id":"20140309212957","ans":"本题考查开发文档的作用系统开发人员与项目管理人员在项目期内进行沟通的文档主要有系统开发计划、系统开发月报以及系统开发总结报告等项目管理文件。","analysis":"C"},{"product_id":"20140309213120","ans":"本题考查软件复审基本概念。可维护性是所有软件都应具有的基本特点，必须在开发阶段保证软件具有可维护的特点。在系统分析阶段的复审过程中，应该指出软件的可移植性问题以及可能影响软件维护的系统界面；在系统设计阶段的复审期间，应该从容易修改、模块化和功能独立的目的出发，评价软件的结构和过程：在系统实施阶段的复审期间，代码复审应该强调编码风格和内部说明文档这两个影响可维护性的因素。可测试性是可维护性的一个评价指标。","analysis":"B"},{"product_id":"20140309213304","ans":"本题考查分支覆盖测试法。采用分支覆盖法进行测试使得被测程序中每个判定表达式至少获得一次“真”值和“假”值，或者程序中的每一个取“真”分支和取“假”分支至少都通过一次。需要设计的测试用例需要确保每一个取“真”分支和取“假”分支至少都通过一次，即统计最多分支数。","analysis":"C"},{"product_id":"20140309213355","ans":"本题考查软件维护的内容。为了使网上银行系统能够支持信用卡的多币种付款功能而扩充升级，是为了适应银行的市场环境和新的管理需求而提出的新的信息需求，因此需要适应性维护。","analysis":"B"},{"product_id":"20140309213445","ans":"本题考查面向对象分析与设计的基本概念。面向对象分析主要强调理解问题是什么，不考虑问题的解决方案，面向对象设计侧重问题的解决方案，并且需要考虑实现细节问题。","analysis":"D"},{"product_id":"20140309213612","ans":"本题考查控制类、边界类和实体类的职责。实体类主要负责数据和业务逻辑；边界类负责和用户进行交互，即用户界面；控制类则负责实体类和界面类的交互。","analysis":"C"},{"product_id":"20140309213732","ans":"本题考查控制类、边界类和实体类的职责。实体类主要负责数据和业务逻辑；边界类负责和用户进行交互，即用户界面；控制类则负责实体类和界面类的交互。","analysis":"B"},{"product_id":"20140309213809","ans":"本题考查控制类、边界类和实体类的职责。实体类主要负责数据和业务逻辑；边界类负责和用户进行交互，即用户界面；控制类则负责实体类和界面类的交互。","analysis":"A"},{"product_id":"20140309214009","ans":"本题考查类间的关系。类间关系可分为依赖、关联、聚合、组合和继承5种。按照上述顺序，类间关系依次增强，若类A的方法中仅仅使用了类B的对象，那么类A依赖于类B。如果类A的部分是由类B的对象组成，并且类A控制类B的生命周期，那么类A与类B是组合关系。","analysis":"B"},{"product_id":"20140309214051","ans":"本题考查类间的关系。类间关系可分为依赖、关联、聚合、组合和继承5种。按照上述顺序，类间关系依次增强，若类A的方法中仅仅使用了类B的对象，那么类A依赖于类B。如果类A的部分是由类B的对象组成，并且类A控制类B的生命周期，那么类A与类B是组合关系。","analysis":"D"},{"product_id":"20140309214314","ans":"本题考查面向对象设计。装饰模式主要的目的是在无法生成子类的情况下给一个对象动态地增加新的职责；享元设计模式是共享大量细粒度的对象；适配器设计模式则是将已有的接口转换为系统希望的接口形式。","analysis":"C"},{"product_id":"20140309214430","ans":"本题考查面向对象设计。装饰模式主要的目的是在无法生成子类的情况下给一个对象动态地增加新的职责；享元设计模式是共享大量细粒度的对象；适配器设计模式则是将已有的接口转换为系统希望的接口形式。","analysis":"D"},{"product_id":"20140309214456","ans":"本题考查面向对象设计。装饰模式主要的目的是在无法生成子类的情况下给一个对象动态地增加新的职责；享元设计模式是共享大量细粒度的对象；适配器设计模式则是将已有的接口转换为系统希望的接口形式。","analysis":"B"},{"product_id":"20140309215235","ans":"本题考查UML语言基础知识。UML语言是标准的建模语言，通过图形化的方式展现系统的模型。本题是UML中的组件图，其表示的含义是组件AccountManagement需要调用CreditCardServices组件和Logger组件分别实现的IdentityVerifier接口和TransactionLogger接口。","analysis":"A"},{"product_id":"20140309215333","ans":"本题考查UML语言基础知识。UML语言是标准的建模语言，通过图形化的方式展现系统的模型。本题是UML中的组件图，其表示的含义是组件AccountManagement需要调用CreditCardServices组件和Logger组件分别实现的IdentityVerifier接口和TransactionLogger接口。","analysis":"B"},{"product_id":"20140309215526","ans":"本题考査程序语言方面的基础知识。对于题中自动机的状态图，先忽略状态q0的自环（识别若干个0)，从初态q0到终态q1，该自动机可识别的字符串为1、101、10101、…，显然，该自动机识别的0、1串中1不能连续出现。","analysis":"D"},{"product_id":"20140309215647","ans":"本题考查程序语言方面的基础知识。在正规式中，符号*表示重复若干次（包括0次)，因此正规式“中的表达式“(a*a)*，，不能保证有偶数个a。同理，“(a*(ba*)*b)*”和“(a|b)*(aa)*”中对a的个数也没有限制，而在“(ab*a)*”中可以确保a的出现为偶数个。","analysis":"B"},{"product_id":"20140309215738","ans":"本题考査程序语言方面的基础知识。一个文法的语言是该文法能产生的句子的集合。一个文法产生的句子是从文法开始符号出发推导出的所有终结符号串。","analysis":"A"},{"product_id":"20140309220920","ans":"本题考查对数据库数据模型方面基本知识掌握的程度。不同的数据模型具有不同的数据结构形式。目前最常用的数据结构模型有层次模型(hierarchicalmodel)、网状模型（networkmodel)、关系模型（relationalModel)和面向对象数据模型（objectorientedmodel)。其中层次模型和网状模型统称为非关系模型。非关系模型的数据库系统在20世纪70年代非常流行，在数据库系统产品中占据了主导地位。到了20世纪80年代，逐渐被关系模型的数据库系统取代，但某些地方，由于历史的原因，目前层次和网状数据库系统仍在使用。关系模型是目前最常用的数据模型之一。关系数据库系统采用关系模型作为数据的组织方式，在关系模型中用二维表格结构表达实体集以及实体集之间的联系，其最大特色是描述的一致性。关系模型是由若干个关系模式组成的集合。一个关系模式相当于一个记录型，对应于程序设计语言中类型定义的概念。关系是一个实例，也是一张表，对应于程序设计语言中变量的概念。给定变量的值随时间可能发生变化；类似地，当关系被更新时，关系实例的内容也随时间发生了变化。","analysis":"C"},{"product_id":"20140309221352","ans":"本题考查应试者对范式、模式分解知识的掌握程度。试题（52)考查的是范式的基础知识。员工关系EMP属于第一范式的原因是因为其主键是（员工号，家庭成员），非主属性部门名，负责人，电话存在对主键的部分函数依赖。因为对一个给定的关系模式进行分解，使得分解后的模式是否与原来的模式等价有如下三种情况：①分解具有无损连接性；②分解要保持函数依赖；③分解既要无损连接性，又要保持函数依赖。因为将原关系模式分解成EMP1(员工号，姓名，家庭住址)，EMP2(部门，部门电话，部门负责人）和EMP3(员工号，家庭成员，成员关系）三个关系模式，分解后的关系模式既是有损连接，又不能保持函数依赖。因为此时给定员工号已无法查找所在的部门，如下表所示。因为将原关系模式分解成EMP1(员工号，姓名，部门，家庭住址)，EMP2(部门，部门电话，部门负责人）和EMP3(员工号，家庭成员，成员关系）既具有无损连接性，又保持了函数依赖。如下表所示。因为将原关系模式分解成EMP1(员工号，姓名，家庭住址）和EMP2(部门，部门电话，部门负责人，家庭成员，成员关系）两个关系模式，分解后的关系模式既有损连接，又不能保持函数依赖。例如，给定员工号无法査找所在的部门，无法查找其家庭成员等信息。如下表所示。因为将原关系模式分解成EMP1(员工号，姓名，部门，部门电话，部门负责人，家庭住址）和EMP2(员工号，家庭住址，家庭成员，成员关系）两个关系模式，分解后的关系模式存在冗余和修改操作的不一致性。例如，EMP1中某员工的家庭住址从“陕西省西安市太白路2号”修改为“陕西省西安市雁塔路18号”，而EMP2中该员工的家庭住址未修改，导致修改操作的不一致性。又如，EMP2中某员工的家庭成员有5个，那么其家庭住址就要重复出现5次，导致数据的冗余。","analysis":"A"},{"product_id":"20140309221620","ans":"本题考查应试者对范式、模式分解知识的掌握程度。因为表中存在冗余、修改操作的不一致，以及插入异常和删除异常。因为对一个给定的关系模式进行分解，使得分解后的模式是否与原来的模式等价有如下三种情况：①分解具有无损连接性；②分解要保持函数依赖；③分解既要无损连接性，又要保持函数依赖。选项A是错误的，因为将原关系模式分解成EMP1(员工号，姓名，家庭住址)，EMP2(部门，部门电话，部门负责人）和EMP3(员工号，家庭成员，成员关系）三个关系模式，分解后的关系模式既是有损连接，又不能保持函数依赖。因为此时给定员工号已无法查找所在的部门，如下表所示。因为将原关系模式分解成EMP1(员工号，姓名，部门，家庭住址)，EMP2(部门，部门电话，部门负责人）和EMP3(员工号，家庭成员，成员关系）既具有无损连接性，又保持了函数依赖。如下表所示。因为将原关系模式分解成EMP1(员工号，姓名，家庭住址）和EMP2(部门，部门电话，部门负责人，家庭成员，成员关系）两个关系模式，分解后的关系模式既有损连接，又不能保持函数依赖。例如，给定员工号无法査找所在的部门，无法查找其家庭成员等信息。如下表所示。因为将原关系模式分解成EMP1(员工号，姓名，部门，部门电话，部门负责人，家庭住址）和EMP2(员工号，家庭住址，家庭成员，成员关系）两个关系模式，分解后的关系模式存在冗余和修改操作的不一致性。例如，EMP1中某员工的家庭住址从“陕西省西安市太白路2号”修改为“陕西省西安市雁塔路18号”，而EMP2中该员工的家庭住址未修改，导致修改操作的不一致性。又如，EMP2中某员工的家庭成员有5个，那么其家庭住址就要重复出现5次，导致数据的冗余。","analysis":"D"},{"product_id":"20140309221848","ans":"本题考查应试者对范式、模式分解知识的掌握程度。因为对一个给定的关系模式进行分解，使得分解后的模式是否与原来的模式等价有如下三种情况：①分解具有无损连接性；②分解要保持函数依赖；③分解既要无损连接性，又要保持函数依赖。因为将原关系模式分解成EMP1(员工号，姓名，家庭住址)，EMP2(部门，部门电话，部门负责人）和EMP3(员工号，家庭成员，成员关系）三个关系模式，分解后的关系模式既是有损连接，又不能保持函数依赖。因为此时给定员工号已无法查找所在的部门，如下表所示。因为将原关系模式分解成EMP1(员工号，姓名，部门，家庭住址)，EMP2(部门，部门电话，部门负责人）和EMP3(员工号，家庭成员，成员关系）既具有无损连接性，又保持了函数依赖。如下表所示。因为将原关系模式分解成EMP1(员工号，姓名，家庭住址）和EMP2(部门，部门电话，部门负责人，家庭成员，成员关系）两个关系模式，分解后的关系模式既有损连接，又不能保持函数依赖。例如，给定员工号无法査找所在的部门，无法查找其家庭成员等信息。如下表所示。因为将原关系模式分解成EMP1(员工号，姓名，部门，部门电话，部门负责人，家庭住址）和EMP2(员工号，家庭住址，家庭成员，成员关系）两个关系模式，分解后的关系模式存在冗余和修改操作的不一致性。例如，EMP1中某员工的家庭住址从“陕西省西安市太白路2号”修改为“陕西省西安市雁塔路18号”，而EMP2中该员工的家庭住址未修改，导致修改操作的不一致性。又如，EMP2中某员工的家庭成员有5个，那么其家庭住址就要重复出现5次，导致数据的冗余。","analysis":"B"},{"product_id":"20140309222721","ans":"","analysis":"B"},{"product_id":"20140309222912","ans":"","analysis":"A"},{"product_id":"20140309223010","ans":"本题考查数据结构方面的基础知识。哈希表和二叉排序树都可以在查找过程中动态创建，属于动态查找表。顺序查找方法按照设定的次序依次与查找表中元素的关键字进行比较，在顺序存储结构和链表结构上都可以实现该查找过程。二分查找需要对中间元素进行快速定位，在链表结构上无法实现。","analysis":"C"},{"product_id":"20140309223143","ans":"本题考查数据结构方面的基础知识。在有向图中，若以顶点表示活动，用有向边表示活动之间的优先关系，则称这样的有向图为以顶点表示活动的网（ActivityOnVertexNetwork,AOV网）。若在带权有向图G中以顶点表示事件，以有向边表示活动，边上的权值表示该活动持续的时间，则这种带权有向图称为用边表示活动的网（ActivityOnEdgeNetwork,AOE网）通常在AOE网中列出了完成预定工程计划所需进行的活动、每项活动的计划完成时间、要发生哪些事件以及这些事件和活动间的关系，从而可以分析该项工程是否实际可行并估计工程完成的最短时间，分析出哪些活动是影响工程进度的关键。进一步可以进行人力、物力的调度和分配，以达到缩短工期的目的。根据生成树的定义，有n个顶点的连通图的生成树中恰好有n-1条边。","analysis":"A"},{"product_id":"20140309223334","ans":"本题考查数据结构方面的基础知识。二叉排序树或者是一棵空树，或者是具有如下性质的二叉树：①若它的左子树非空，则其左子树上所有节点的关键字均小于根节点的关键字；②若它的右子树非空，则其右子树上所有节点的关键字均大于根节点的关键字；③左、右子树本身就是两棵二叉排序树。由上述定义可知，二叉排序树是一个有序表，对二叉排序树进行中序遍历，可得到一个关键字递增排序的序列。对于给定的关键字序列，可从空树开始，逐个将关键字插入树中来构造一棵二叉排序树。其过程是：每读入一个关键字值，就建立一个新节点。若二叉排序树非空，则将新节点的关键字与根节点的关键字相比较，如果小于根节点的值，则插入到左子树中，否则插入到右子树中；若二叉排序树为空树，则新节点作为二叉排序树的根节点。显然，若关键字初始序列已经有序，则构造出的二叉排序树一定是单枝树（每个节点只有一个孩子)。为了使在二叉排序树上进行的查找操作性能最优，构造二叉排序树时需进行平衡化处理，使每个节点左、右子树的髙度差的绝对值不超过1。","analysis":"C"},{"product_id":"20140309223552","ans":"本题考查数据结构方面的基础知识。栈和队列都是操作受限的线性表：栈仅在表尾插入和删除元素；队列仅在表头删除元素、在表尾插入元素。采用单循环链表表示队列的示意图如下图所示：入队时初始队列为空、出队后队列变为空要进行特殊处理。入队操作和出队操作均与队列长度无关，因此其时间复杂度都为O(1)。队列是先入先出的线性表，栈是后进先出的线性表。一个线性序列经过队列结构后只能得到与原序列相同的元素序列，而经过一个栈结构后则可以得到多种元素序列。用两个栈可以模拟一个队列的入队和出队操作。","analysis":"D"},{"product_id":"20140309223933","ans":"本题考査数据结构方面的基础知识。根据其定义，一棵完全二叉树除了最后一层外，其余层的节点数都是满的，最后一层的节点也必须自左至右排列，例如图（a)是高度为3的满二叉树，图（b)是完全二叉树，图（c)不是完全二叉树。","analysis":"A"},{"product_id":"20140309224414","ans":"本题考查数据结构方面的基础知识。广义表是函数式语言中使用的一种数据结构。根据广义表取表头和取表尾的定义，对于广义表L=((x，y，z)，a，(u,t,w)),运算head(L)=(x,y,z),而tail(L)=(a，(u,t,w))，因此原子项y应从head(L)中取，对(x，y，z)取表头可得到原子项x，因此从L中取出原子项y的运算为head(tail(head(L)))。","analysis":"C"},{"product_id":"20140309230243","ans":"本题考查算法基础知识。用分治法找假币的过程为：先将16枚硬币对等分为2堆（各8枚）并比较其重量，假币在较轻的那一堆中：然后将8枚硬币对等分为2堆（各4枚）并比较其重量，假币在较轻的那一堆中；再将4枚硬币对等分为2堆（各2枚）并比较其重量，假币在较轻的那一堆中：最后比较两个硬币的重量，找出假币。因此，至少比较4次才能够找出该假币。","analysis":"B"},{"product_id":"20140309230405","ans":"本题考查算法基础知识。回溯法的实质是在包含问题的所有解的解空间树中，按照深度优先的策略，从根节点出发搜索解空间树。若进入某子节点的子树后没有找到解（或者需要找出全部解)，则需要从子节点回退（回溯）至父节点，从而可以选择其他子节点进行搜索。回溯法有“通用的解题法”之称，用它可以系统地搜索一个问题的所有解或任一解。分治与递归就像一对孪生兄弟，经常同时应用于算法设计之中。分治的思路是将一个难以直接解决的大问题分解成一些规模较小的相同问题，以便各个击破，分而治之。如果规模为n的问题可分解成k个子问题，1<k<n,这些子问题互相独立且与原问题相同。动态规划算法与分治法类似，其基本思想也是将待求解问题分解成若干个子问题，先求解子问题，然后从这些子问题的解得到原问题的解。与分治法不同的是，适合于用动态规划法求解的问题，经分解得到的子问题往往不是独立的。若用分治法来解这类问题，则相同的子问题会被求解多次，以至于最后解决原问题需要耗费指数级时间。动态规划算法通常用于求解具有某种最优性质的问题。在这类问题中，可能会有许多可行解，每个解都对应于一个值，我们希望找到具有最优值（最大值或最小值）的那个解。","analysis":"C"},{"product_id":"20140309230625","ans":"本题考查算法基础知识。以2-路归并排序为例进行说明。2-路归并是指将两个有序序列合并成一个有序序列，其基本过程为：从两个序列中各取一个元素，进行比较，输出较小的元素，从较小元素所在序列取下一个元素，与未输出的那个元素比较，输出较小者。依此类推，直到输出序列包含了两个初始有序序列的全部元素。对于一个初始无序的序列，可以先将其等分为两个无序的子序列，对这两个子序列再次二分，重复该过程，直到分出的子序列中仅包含一个元素时（一个元素自然是有序的）为止，然后再反复进行2-路归并的过程，最后完成排序。","analysis":"B"},{"product_id":"20140309230727","ans":"子网掩码255.255.224.0的二进制表示为11111111.11111111.11100000.00000000,比正常的B类子网掩码为255.255.0.0多出了3位“1”，所以把B类网络划分成了8个子网。","analysis":"D"},{"product_id":"20140309230857","ans":"WindowsServer2003的路由类型有5种，见下表。当Windows服务器收到一个IP数据包时，先查找主机路由，再查找网络路由（直连网络和远程网络)，这些路由查找失败时，最后才查找默认路由。路由类型","analysis":"B"},{"product_id":"20140309231103","ans":"本题考查的是HTML基本标签的使用。alink用于设置正在被击中的链接的颜色。vlink用于设置已使用的链接的颜色。background用于设置背景图片的URL。bgcolor用于设置文档整体背景颜色。","analysis":"D"},{"product_id":"20140309231245","ans":"本题考查HTML标记中tr标记的使用。<tr>标记用于定义表格中的一行。<col>标记用于定义表格中一个或多个列的属性值。<td>标记用于定义表格中的一个单元格。<title>标记用于定义文档标题。","analysis":"A"},{"product_id":"20140309231418","ans":"本题考査XML语法的基础知识。XML文件的第一行必须是声明该文件是XML文件以及它所使用的XML规范版本。在文件的前面不能够有其他元素或者注释。所有的XML文档必须有一个根元素。XML文档中的第一个元素就是根元素。所有XML文档都必须包含一个单独的标记来定义，所有其他元素都必须成对地在根元素中嵌套。XML文档有且只能有一个根元素。所有的元素都可以有子元素，子元素必须正确地嵌套在父元素中。在XML中规定，所有标识必须成对出现，有一个开始标识，就必须有一个结束标识，否则将被视为错误。","analysis":"D"},{"product_id":"20140309231811","ans":"近十年来，统一建模语言（UML)已经成为工业标准，它可用来可视化、规范化说明、构建以及文档化软件密集系统中的开发制品。作为事实上的工业标准，UML能够方便项目相关人员的沟通并减少理解上的二义问题。UML2.0标准扩宽了该语言的应用范围，它所具有的表达能力能够让用户对企业信息系统、分布式Web系统和嵌入式实时系统进行建模。UML不仅能够对软件系统进行建模，实际上，它具有足够的能力去对法律系统中的工作流、病人监护系统中的结构和行为、飞行战斗系统和硬件系统进行建模。为了理解UML,需要具备该语言的概念模型，这需要学习三个主要元素：UML的基本构造块，基本构造块的关系规则和应用这些构造块与规则的通用机制。","analysis":"D"},{"product_id":"20140309231906","ans":"近十年来，统一建模语言（UML)已经成为工业标准，它可用来可视化、规范化说明、构建以及文档化软件密集系统中的开发制品。作为事实上的工业标准，UML能够方便项目相关人员的沟通并减少理解上的二义问题。UML2.0标准扩宽了该语言的应用范围，它所具有的表达能力能够让用户对企业信息系统、分布式Web系统和嵌入式实时系统进行建模。UML不仅能够对软件系统进行建模，实际上，它具有足够的能力去对法律系统中的工作流、病人监护系统中的结构和行为、飞行战斗系统和硬件系统进行建模。为了理解UML,需要具备该语言的概念模型，这需要学习三个主要元素：UML的基本构造块，基本构造块的关系规则和应用这些构造块与规则的通用机制。","analysis":"C"},{"product_id":"20140309231957","ans":"近十年来，统一建模语言（UML)已经成为工业标准，它可用来可视化、规范化说明、构建以及文档化软件密集系统中的开发制品。作为事实上的工业标准，UML能够方便项目相关人员的沟通并减少理解上的二义问题。UML2.0标准扩宽了该语言的应用范围，它所具有的表达能力能够让用户对企业信息系统、分布式Web系统和嵌入式实时系统进行建模。UML不仅能够对软件系统进行建模，实际上，它具有足够的能力去对法律系统中的工作流、病人监护系统中的结构和行为、飞行战斗系统和硬件系统进行建模。为了理解UML,需要具备该语言的概念模型，这需要学习三个主要元素：UML的基本构造块，基本构造块的关系规则和应用这些构造块与规则的通用机制。","analysis":"D"},{"product_id":"20140309232034","ans":"近十年来，统一建模语言（UML)已经成为工业标准，它可用来可视化、规范化说明、构建以及文档化软件密集系统中的开发制品。作为事实上的工业标准，UML能够方便项目相关人员的沟通并减少理解上的二义问题。UML2.0标准扩宽了该语言的应用范围，它所具有的表达能力能够让用户对企业信息系统、分布式Web系统和嵌入式实时系统进行建模。UML不仅能够对软件系统进行建模，实际上，它具有足够的能力去对法律系统中的工作流、病人监护系统中的结构和行为、飞行战斗系统和硬件系统进行建模。为了理解UML,需要具备该语言的概念模型，这需要学习三个主要元素：UML的基本构造块，基本构造块的关系规则和应用这些构造块与规则的通用机制。","analysis":"A"},{"product_id":"20140309232123","ans":"近十年来，统一建模语言（UML)已经成为工业标准，它可用来可视化、规范化说明、构建以及文档化软件密集系统中的开发制品。作为事实上的工业标准，UML能够方便项目相关人员的沟通并减少理解上的二义问题。UML2.0标准扩宽了该语言的应用范围，它所具有的表达能力能够让用户对企业信息系统、分布式Web系统和嵌入式实时系统进行建模。UML不仅能够对软件系统进行建模，实际上，它具有足够的能力去对法律系统中的工作流、病人监护系统中的结构和行为、飞行战斗系统和硬件系统进行建模。为了理解UML,需要具备该语言的概念模型，这需要学习三个主要元素：UML的基本构造块，基本构造块的关系规则和应用这些构造块与规则的通用机制。","analysis":"B"}]}]